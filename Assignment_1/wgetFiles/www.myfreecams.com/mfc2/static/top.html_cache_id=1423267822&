<html><head><meta name="viewport" content="user-scalable=1"><TITLE>MyFreeCams - The #1 adult webcam community. Free live webcams and video-chat.</TITLE><meta NAME="description" content="MyFreeCams is an interactive free live webcam community for adults, featuring beautiful models and amateurs in live video-chat rooms with sound."><meta NAME="Keywords" CONTENT="myfreecams,free,cams,webcams,live,video,chat,sex,girls,nude,amateurs,models,adults,community,sound"></head><script> document.domain = 'myfreecams.com'; var t = this;</script><style> html { } body { padding:0px;background-color:#008000; } td { font-size:12px;color:#FFFFFF;padding:0px;margin:0px; } .frame { color:white; } a:link, a:visited { color:#FFFFFF;text-decoration:none; } a:hover { text-decoration:underline;color:yellow; } .title { font-weight:bold; } .menu { } .menu div { float:right;padding:0px 6px; } .main_menu { } .login_box_td { font-size:11px;padding:0px;margin:0px; } .login_box_td input { font-size:10px;width:52px;padding:0px;margin:0px;height:12px;line-height:12px; } .footer_menu A:link, .footer_menu A:visited, .footer_menu A:hover { } .pmenu { position:relative;padding-left:20px;height:19px; } .pmenu_icon { position:absolute;top:0px;left:0px;width:16px;text-align:center; } .missmfc_popup_container { border:1px solid #D9D9D9;padding:1px; } .missmfc_popup_crown { border:2px solid #E3E3E3;height:30px;width:30px;text-align:center;background-color:#F9F9F9; } .missmfc_popup_place { font-size:12px;border:1px solid #E3E3E3;border-width:1px 0px 1px 1px;padding:0px 10px 0px 10px; } .missmfc_popup_month { font-size:13px;text-align:center;color:#666666 ! important;padding-left:10px;border:1px solid #E3E3E3;border-width:1px 1px 1px 0px;width:220px; } .banner_history_date { font-size:11px;font-weight:bold;white-space:nowrap;padding:0px 15px 5px 15px; }
 .banner_history_content { font-size:11px;padding-bottom:5px; } .room_helper_table td { padding:3px; } .online_friend_chat_icon { display:inline-block; } .online_friend_chat_icon img { height:12px;width:12px;padding-right:2px; }</style>
<script>
	try { document.domain = "myfreecams.com"; } catch(e) {}
	var g_nVcc = 1423267822;
	var g_ExternalCaller = location.search.indexOf('style_override=profiles') > -1 ? true : false;
</script>
<LINK REL=StyleSheet HREF="../lib/style.css?no_cache=1423267822" TYPE="text/css" MEDIA=screen>
<LINK REL=StyleSheet HREF="../styles/mfc/style.css?no_cache=1423267822" TYPE="text/css" MEDIA=screen>
<script src='../lib/mfccore.js?vcc=1423267822'></script>
<script src='../data/common_shortcuts.js?vcc=1423267822'></script>
<script src='../lib/PluginDetect.js?vcc=1423267822'></script>
<script src='../lib/flash_detect.js?vcc=1423267822'></script>
<script>g_hIgnoredUsers = {};var g_oCmdQ = new MfcQueue(); g_oCmdQ.Start(); g_UA = new MfcUserAgent();window.onorientationchange = g_UA.DeviceOrientation;var g_hTypeMap = {};var g_bDebug = ( top.location.search.match(/\Wdebug/) ) ? true : false;var g_oChatCommandHistory = {};var g_mfcImageHost = new MfcImageHost();var g_hCk = {};UpdateCookieHash();var g_hQS = MfcStringUtilities.parse_query_string(location.search + ( g_hCk.qs || '' ) );var g_fBodyLoaded = false;var g_nZgwLoaded = 0;var g_bLoadChat = 0;var g_hGroupShowInitiators = {};var g_aPreviousMessages = [];var g_nNullTimeArg = 0;var g_nNullTimeArg_Initial = -1;w.hServerConfig = {"ajax_servers":["xchat50","xchat51","xchat52","xchat53","xchat54","xchat55","xchat1","xchat2","xchat3","xchat4","xchat5","xchat6"],"chat_servers":["xchat47","xchat56","ychat30","ychat31","chat68","ychat32","xchat45","xchat46","xchat13","xchat17","xchat18","xchat19","chat53","chat54","chat55","chat56","chat57","chat58","chat59","chat60","chat61","chat62","chat63","chat64","chat65","chat66","chat67","xchat30","xchat31","xchat32"],"h5video_servers":{"840":"video340","841":"video341","842":"video342","843":"video343","844":"video344","845":"video345","846":"video346","847":"video347","848":"video348","849":"video349","850":"video350","851":"video351","852":"video352","853":"video353","854":"video354","855":"video355","856":"video356","857":"video357","858":"video358","859":"video359","860":"video360","861":"video361","862":"video362","863":"video363","864":"video364","865":"video365","866":"video366","867":"video367","868":"video368","869":"video369","870":"video370","871":"video371","904":"video404","905":"video405","906":"video406","907":"video407","908":"video408","909":"video409","910":"video410","911":"video411","912":"video412","913":"video413","914":"video414","915":"video415","916":"video416","917":"video417","918":"video418","919":"video419","938":"video438","939":"video439","940":"video440","941":"video441","942":"video442","943":"video443","944":"video444","945":"video445","946":"video446","947":"video447","948":"video448","949":"video449","950":"video450","951":"video451","952":"video452","953":"video453","954":"video454","955":"video455","956":"video456","957":"video457","958":"video458","959":"video459","960":"video460","961":"video461","962":"video462","963":"video463","964":"video464","965":"video465","966":"video466","967":"video467","968":"video468","969":"video469","970":"video470","971":"video471","972":"video472","973":"video473","974":"video474","975":"video475","976":"video476","977":"video477","978":"video478","979":"video479","980":"video480","981":"video481","982":"video482","983":"video483","984":"video484","985":"video485","986":"video486","987":"video487","988":"video488","989":"video489","990":"video490","991":"video491","992":"video492"},"release":true,"video_servers":["video64","video69","video74","video112","video116","video120","video124","video128","video132","video144","video148","video162","video170","video174","video178","video200","video204","video212","video4","video19","video24","video29","video39","video44","video59","video232","video240","video244","video248","video252","video280","video284","video288","video292","video296","video304","video308","video312","video316","video332","video336","video372","video376","video380","video384","video388","video392","video396","video400"],"websocket_servers":{"xchat10":"rfc6455","xchat11":"hybi00","xchat12":"rfc6455","xchat20":"rfc6455","xchat22":"rfc6455","xchat23":"rfc6455","xchat24":"rfc6455","xchat25":"rfc6455","xchat26":"rfc6455"}};w.hVideoMap = {"104":64,"109":69,"114":74,"149":112,"153":116,"157":120,"161":124,"165":128,"169":132,"181":144,"185":148,"199":162,"207":170,"211":174,"215":178,"237":200,"241":204,"245":208,"249":212,"253":216,"257":220};
w.hBannerArtConfig = {"1":{"user_id":2034880,"username":"SarahJean","filename":"SarahJean","left":"280px","share":"10","wins":[[1,3,2010]]},"2":{"user_id":2191950,"username":"JALYN","filename":"Jalyn","left":"260px","share":"10","wins":[[1,7,2014],[1,5,2014],[3,7,2013],[1,5,2013],[2,7,2012],[3,5,2012],[1,2,2012],[1,11,2011],[3,7,2011],[1,5,2011],[2,4,2011],[2,3,2011],[1,1,2011],[2,10,2010],[2,6,2010],[1,4,2010]]},"4":{"user_id":3014595,"username":"LovelyKittie","filename":"LovelyKittie","left":"200px","share":"10","wins":[[1,7,2012],[2,10,2011],[2,7,2011],[3,3,2011],[2,1,2011],[2,11,2010],[1,6,2010],[2,5,2010]]},"5":{"user_id":2581250,"username":"DevonAlexis","filename":"DevonAlexis","left":"165px","share":"10","wins":[[1,8,2010],[2,7,2010]]},"6":{"user_id":2593555,"username":"CandieCane","filename":"CandieCane","left":"275px","share":"10","wins":[[3,7,2012],[2,6,2011],[3,1,2011],[3,12,2010],[1,11,2010],[3,10,2010],[3,9,2010],[3,8,2010],[1,7,2010],[3,3,2010]]},"7":{"user_id":4585086,"username":"CrazyM_","filename":"CrazySysy-2","left":"160px","share":"10","wins":[[1,2,2013],[2,8,2012],[2,1,2012],[1,9,2010]]},"8":{"user_id":2944645,"username":"BlondeFantasy","filename":"BlondeFantasy","left":"165px","share":"10","wins":[[3,5,2011],[1,12,2010],[2,9,2010]]},"9":{"user_id":2807988,"username":"AshaSnow","filename":"AshaSnow","left":"245px","share":"10","wins":[[2,8,2010],[3,4,2010]]},"10":{"user_id":3610811,"username":"Jujulina","filename":"AveryPearl","left":"205px","share":"10","wins":[[1,2,2011]]},"11":{"user_id":3840855,"username":"GoddessZoey","filename":"GoddessZoey","left":"180px","share":"10","wins":[[2,2,2011]]},"12":{"user_id":6158368,"username":"GinnyPotter","filename":"GinnyPotter","left":"175px","share":"10","wins":[[1,6,2014],[1,1,2014],[2,1,2013],[2,2,2012],[1,1,2012],[1,10,2011],[1,6,2011]]},"13":{"user_id":1976187,"username":"Pandora","filename":"Pandora","left":"155px","share":"10","wins":[[1,4,2011],[1,3,2011]]},"14":{"user_id":3765510,"username":"BeaLuv","filename":"Sexy_Beatrice","left":"230px","share":"10","wins":[[1,9,2011]]},"15":{"user_id":3000842,"username":"Kattie_","filename":"Kattie_","left":"270px","share":"10","wins":[[1,5,2012],[2,9,2011]]},"16":{"user_id":3726182,"username":"Roxibibi","filename":"Roxibibi","left":"185px","share":"10","wins":[[2,11,2011],[3,9,2011]]},"17":{"user_id":4400755,"username":"Joey_Kim","filename":"Panda_Rawr-3","left":"285px","share":"10","wins":[[2,8,2014],[1,8,2013],[1,8,2012],[1,8,2011]]},"18":{"user_id":3111899,"username":"AspenRae","filename":"AspenRae-2","left":"160px","share":"10","wins":[[1,9,2014],[3,8,2013],[2,3,2013],[2,10,2012],[3,4,2012],[3,6,2011],[3,4,2011],[1,10,2010]]},"19":{"user_id":3626904,"username":"missjadestar","filename":"MissJadeStar","left":"155px","share":"10","wins":[[3,11,2011],[2,5,2011]]},"20":{"user_id":6281843,"username":"LovesDesire","filename":"LovesDesire","left":"205px","share":"10","wins":[[2,12,2011]]},"21":{"user_id":5389138,"username":"Ellisha","filename":"Ellisha","left":"277px","share":"10","wins":[[3,1,2012]]},"22":{"user_id":3856702,"username":"AedanRayne","filename":"AedanRayne","left":"240px","share":"10","wins":[[3,12,2011]]},"23":{"user_id":3683717,"username":"BustyAn","filename":"BustyAn","left":"175px","share":"10","wins":[[2,4,2013],[1,6,2012],[1,3,2012]]},"24":{"user_id":6945074,"username":"LexxiStar","filename":"LexxiStar-2","left":"170px","share":"10","wins":[[3,8,2014],[2,7,2014],[1,4,2014],[2,2,2014],[2,11,2013],[1,10,2013],[1,4,2013],[1,10,2012],[1,4,2012],[3,8,2011]]},"25":{"user_id":1504211,"username":"Arayah","filename":"Arayah","left":"175px","share":"10","wins":[[3,3,2012]]},"26":{"user_id":1298179,"username":"Cinnabuns","filename":"Cinnabuns-2","left":"165px","share":"10","wins":[[2,3,2012],[3,3,2009],[1,2,2009]]},"27":{"user_id":4036203,"username":"TalahasseeSun","filename":"Kyenne","left":"175px","share":"10","wins":[[2,11,2012],[2,4,2012]]},"28":{"user_id":1492467,"username":"Mary_D","filename":"DarlingMegann-2","left":"180px","share":"10","wins":[[2,5,2012]]},"29":{"user_id":9584094,"username":"ParisLovely","filename":"ParisLovely","left":"170px","share":"10","wins":[[3,9,2012]]},"30":{"user_id":5323998,"username":"NikiSkyler","filename":"NikiSkyler2","left":"180px","share":"10","wins":[[1,1,2013]]},"31":{"user_id":2989860,"username":"ChristineAsh","filename":"ChristineAsh","left":"210px","share":"10","wins":[[3,6,2013],[3,4,2013],[1,3,2013],[3,1,2013]]},"32":{"user_id":10841106,"username":"Jenny__Sweet","filename":"Jenny__","left":"160px","share":"10","wins":[[2,6,2013],[3,5,2013],[3,12,2012]]},"33":{"user_id":7108452,"username":"AvalynnRoseBB","filename":"AvalynnRose","left":"160px","share":"10","wins":[[1,6,2013]]},"34":{"user_id":6845912,"username":"Brina_","filename":"Brina_","left":"235px","share":"10","wins":[[2,9,2013]]},"35":{"user_id":4230320,"username":"AustinWhite","filename":"AustinWhite","left":"195px","share":"10","wins":[[1,9,2013],[3,2,2013]]},"36":{"user_id":10750134,"username":"Kimtylor_","filename":"Kimtylor_","left":"185px","share":"10","wins":[[3,3,2014]]},"37":{"user_id":10798883,"username":"kickaz","filename":"kickaz","left":"165px","share":"10","wins":[[3,12,2013]]},"38":{"user_id":9247077,"username":"DannaSweety","filename":"DannaSweety","left":"165px","share":"10","wins":[[3,11,2013]]},"39":{"user_id":9833309,"username":"Vampette","filename":"Vampette","left":"170px","share":"10","wins":[[3,10,2013]]},"40":{"user_id":11360726,"username":"TheBadGF","filename":"TheBadGF","left":"170px","share":"10","wins":[[1,2,2014],[2,10,2013],[1,7,2013]]},"41":{"user_id":9730911,"username":"SunnyBunni","filename":"SunnyBunni","left":"170px","share":"10","wins":[[3,7,2014],[2,5,2014],[2,1,2014],[1,11,2013]]},"42":{"user_id":4954001,"username":"SinCityVEE","filename":"SinCityVEE","left":"170px","share":"10","wins":[[1,3,2014]]},"43":{"user_id":12046941,"username":"ada_lovelace","filename":"Ada_Lovelace","left":"185px","share":"10","wins":[[3,4,2014]]},"44":{"user_id":12513225,"username":"CodiLake","filename":"codilake","left":"191px","share":"10","wins":[[3,5,2014]]},"45":{"user_id":13235156,"username":"LeightonBrook","filename":"LeightonBrook","left":"164px","share":"10","wins":[[1,8,2014],[3,6,2014]]},"46":{"user_id":10896515,"username":"JennyBlighe","filename":"JennyBlighe","left":"177px","share":"10","wins":[[2,9,2014]]}};var g_sModelLoadMethod = 'chat';var g_hUsers = g_hUsers || {};g_hUsers[0] = { username:'MyFreeCams', access_level:4};var g_hWindows={};var g_nBroadcasterCount = -4;var g_oChatApplet = null;var g_hoPMWindows = {};var g_hoPlayerWindows = {};var g_nSessionId = 0;var g_nConnectingMode = 0;var g_hOnlineBlockHTML = {};var g_hSelf = { show_header: 1, show_main_menu: 1 };var g_bLoginDone = false;var g_bFCTYPE_DETAILS_Received = false;var g_bFCTYPE_MODELGROUP_Received;var g_sToken;var g_Date = new Date();var g_hPost = false;var g_hLogoutTimer = null;var g_sZgwSess = '';var g_nLastStamp = 0;var g_fConnected = false;var g_nSKey = 0;function ResetSeed() { g_nSKey = Math.floor(100000 + (899999 * Math.random())); }var hStateNames = { FCVIDEO_TX_IDLE: 'In Public', FCVIDEO_TX_AWAY: 'Away', FCVIDEO_TX_PVT: '<b>In Private</b>', FCVIDEO_TX_GRP: '<b>Group Show</b>'};var g_sHash = top.location.hash.substr(1,top.location.hash.length);if(g_sHash.match(/\W/) ) { g_sHash=''; }g_sHash = g_sHash.toLowerCase();
var g_hModelGroupNameLookup = {};var g_nFlash9 = false;if (DetectFlashVer(9,0,0)) g_nFlash9 = true;var g_sConnectionMode = g_hQS['conn_mode'] || 'none';if (g_sConnectionMode == 'java' ) g_sConnectionMode = 'none';if(g_UA.iOS && navigator.userAgent.match(/(iP\w+) OS 4_[01]/) ){ alert("Your " + RegExp.$1 + " device now supports WebSockets. Please connect your device to iTunes and upgrade your software.");}var g_bH5video_mobileOptIn = false;var g_bSnapsVideo = (g_hQS['iosvideo'] == 'on' ? true : false); if(g_UA.frameSnapVideo === true || ! g_nFlash9 ){ g_bSnapsVideo = (g_hQS['iosvideo'] == 'off' ? false : true); }if ( location.search.indexOf('no_js_splash') == -1 && ( g_sConnectionMode == 'none' || g_sConnectionMode == '' )){ if (g_nFlash9 == true && location.search.indexOf('no_flash') == -1 ) { g_sConnectionMode = 'flash'; } else if ("WebSocket" in window) { g_sConnectionMode = 'websocket'; if (g_UA.Android && g_UA.Android.indexOf("4.") == 0) { if (/Android.+Chrome|CrMo/.test(navigator.userAgent)) g_sConnectionMode = 'websocket'; else g_sConnectionMode = 'ajax'; } }
 else { g_sConnectionMode = 'ajax'; }}document.cookie = "conncur_mode=" + g_sConnectionMode + "; path=/;";w.name = "top_level";d.name = "top_level";window.onload = function LoadWindow() { g_fBodyLoaded = true;};window.onunload = function UnloadWindow() {};function SetupChatConnection(){ LoadServerConfig(); if (g_sConnectionMode == 'flash') { var nWidth = 0; var nHeight = 0; if (top.location.search.match(/showflash/)) { nWidth = 700; nHeight = 120; } document.write('<script sr'+'c=../lib/flashsocket_global.js?vcc=' + g_nVcc + '><\/script>'); var sFlashUrl = '../lib/MfcChat.swf'; if (top.location.search.match(/bufchat/)) sFlashUrl = '../lib/MfcChat4.swf'; var sFlashObject = " <object classid='clsid:d27cdb6e-ae6d-11cf-96b8-444553540000' \n codebase='http://fpdownload.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=8,0,0,0' \n width='" + nWidth + "' height='" + nHeight + "' id='flashsocket' align='middle'> \n <param name='allowScriptAccess' value='always' /> \n <param name='movie' value='" + sFlashUrl + "' /> \n\
 <param name='quality' value='high' /> \n <param name='bgcolor' value='#ffffff' /> \n <param name='flashvars' value=''> \n <embed sr"+"c='" + sFlashUrl + "' \n swliveconnect='true' quality='high' \n flashvars='' bgcolor='#ffffff' \n width='" + nWidth + "' height='" + nHeight + "' \n id='flashsocket_ff' name='flashsocket' \n align='middle' allowScriptAccess='always' \n type='application/x-shockwave-flash' \n pluginspage='http://www.macromedia.com/go/getflashplayer' /> \n </object>\n "; if(navigator.userAgent.indexOf('MSIE 6') == -1 && ! top.location.search.match(/showflash/) ) { sFlashObject = "<div style=\"position:absolute;top:0px;right:0px;\">" + sFlashObject + "</div>"; } Log('server_type: ' + g_sConnectionMode + ', Safari? ' + g_UA.Safari + ', Chrome? ' + g_UA.Chrome + ' iOS? ' + g_UA.iOS); document.write(sFlashObject ); } else if (g_sConnectionMode == 'websocket') { var sHost = SelectChatServer('websocket'); document.write('<script sr'+'c=../lib/zgw_proxy.js><\/script>'); var nWidth = 1, nHeight = 1; if (top.location.search.match(/showflash/)) { nWidth = 700; nHeight = 120; } Log('server_type: ' + g_sConnectionMode + ', server: ' + sHost + ', Safari? ' + g_UA.Safari + ', Chrome? ' + g_UA.Chrome + ' iOS? ' + g_UA.iOS); document.write("<iframe name=ajaxframe id=ajaxframe frameborder=0 border=0 sr"+"c='http://" + sHost + ".myfreecams.com:8080/ws/wsgw_frame.html' width=" + nWidth + " height=" + nHeight + "><\/iframe>"); } else if (g_sConnectionMode == 'ajax') { var sZgwScript = 'zgw_ajax.html'; var sHost = SelectChatServer('ajax'); var nPort = 8080; 
 document.write('<script sr'+'c=../lib/zgw_proxy.js><\/script>'); var sSrc = "http://" + sHost + ".myfreecams.com:" + nPort + "/lib/" + sZgwScript + "?" + Math.random(); Log('server_type: ' + g_sConnectionMode + ', server: ' + sHost + ', Safari? ' + g_UA.Safari + ', Chrome? ' + g_UA.Chrome + ' iOS? ' + g_UA.iOS + "\niframe src: " + sSrc ); document.write("<iframe name=ajaxframe id=ajaxframe frameborder=0 border=0 sr"+"c='" + sSrc + "' width=1 height=1><\/iframe>"); }}function LoadServerConfig(oCallback ){ try { var _oCallback = oCallback; var oReq = createRequestObject(); oReq.open("get","../data/serverconfig.js?nc=" + Math.random()); oReq.onreadystatechange = function() { if (oReq.readyState != 4) { return; } var serverConfig = null; if ((serverConfig = ParseJSON(oReq.responseText))) w.hServerConfig = serverConfig; if(_oCallback ) { _oCallback(); } }; oReq.send(null); } catch (oError) { Log('LoadServerConfig ajax open caught exception: ' + oError.description ); }}function SelectChatServer(sConnectionMode ){ SelectChatServer.sHost = ''; SelectChatServer.sType = ''; SelectChatServer.aHostOptions = hServerConfig['chat_servers']; if(sConnectionMode == 'websocket' ) {
 SelectChatServer.hWebsocketProtocol = { hybi00: 1, hybi10: 1, rfc6455: 1 }; SelectChatServer.aHostOptions = new Array(); for(var sServer in hServerConfig['websocket_servers'] ) { SelectChatServer.aHostOptions.push(sServer );  } } else if(sConnectionMode == 'ajax' ) { SelectChatServer.aHostOptions = hServerConfig['ajax_servers']; } if(! SelectChatServer.aHostOptions || SelectChatServer.aHostOptions.length == 0 ) { SelectChatServer.aHostOptions = ['chat1','chat2','chat3','chat4']; } if(top.location.search.match(/server=([\w\-]+)/) ) { SelectChatServer.sHost = RegExp.$1; }
 else { var nIdx = Math.floor(SelectChatServer.aHostOptions.length * Math.random() ); SelectChatServer.sHost = SelectChatServer.aHostOptions[nIdx]; } if(sConnectionMode == 'websocket' && hServerConfig['websocket_servers'][ SelectChatServer.sHost ] ) { SelectChatServer.sType = hServerConfig['websocket_servers'][ SelectChatServer.sHost ]; } if(g_bDebug && typeof(DebugControls) == 'object' && DebugControls.Load ) { DebugControls.Load(); } return SelectChatServer.sHost;}function AppendToUserHash(nUserId,hKeyVals){ if ( ! g_hUsers[ nUserId ] ) { g_hUsers[ nUserId ] = {}; g_hUsers[ nUserId ]['state'] = w.FCVIDEO_OFFLINE; } for(var sK in hKeyVals) { g_hUsers[ nUserId ][sK] = hKeyVals[sK]; if(nUserId == g_hSelf['user_id'] ) { g_hSelf[ sK ] = hKeyVals[sK]; } }}function TxCmd(nType, nFrom, nTo, nArg1, nArg2, sMsg){ if (nType == undefined) nType = 0; if (nFrom == undefined) nFrom = 0; if (nArg1 == undefined) nArg1 = 0;
 if (nArg2 == undefined) nArg2 = 0; if (sMsg == undefined) sMsg = ''; if (nType == FCTYPE_CMESG || nType == FCTYPE_PMESG) { if (sMsg.match(/([\u0000-\u001f\u0022-\u0026\u0080-\uffff]+)/)) sMsg = encodeURIComponent(sMsg).replace(/%20/g, " "); } var sCommand = nType + " " + nFrom + " " + nTo + " " + nArg1 + " " + nArg2; if (sMsg != null && sMsg.length > 0) { sCommand += " " + sMsg; } if(g_bDebug ) Log("TX: " + MfcStringUtilities.char_padding(g_hTypeMap[ nType ],20,' ','right') + " " + sCommand); try { var hMsg = {}; hMsg.c = nType; hMsg.f = nFrom; hMsg.t = nTo; hMsg.a1 = nArg1; hMsg.a2 = nArg2; if (sMsg != null && sMsg.length > 0) { hMsg.d = sMsg; } if(g_sConnectionMode == 'ajax' ) zgw_Post([ nType, nFrom, nTo, nArg1, nArg2, sMsg ]); else zgw_Post(hMsg); } catch(oError) { Log("TXCmd Error: " + oError.description); }}function UpdateCookieHash(){ var aPairs = new Array();
 if (aPairs = document.cookie.split("; ")) { for (var i = 0; i < aPairs.length; i++) { g_hCk[ aPairs[i].substring(0,aPairs[i].indexOf('=')) ] = aPairs[i].substring(aPairs[i].indexOf('=')+1,aPairs[i].length); } }}function SetCookie(name,value,expires,path,domain,secure){ path = path || g_hC['site_path']; domain = domain || g_hC['domain']; g_hCk[name] = value; if (! value || value == '') { expires = "01-Jan-01 00:00:01 GMT"; value = 1; } else { if (expires != 'session' && ! expires) { expires = "Mon, 25 Oct 2032 19:36:54 UTC"; } } var sNewCookie = ""; sNewCookie += name + "="+value+";"; if(expires && expires != 'session') sNewCookie += "expires="+expires+";"; if(path) sNewCookie += "path=/;"; if(domain) sNewCookie += "domain=myfreecams.com;"; if(secure) sNewCookie += "secure="+secure+";"; document.cookie = sNewCookie;} function LoadAll(sResource, hOptions ){ if(location.search.indexOf('no_js_splash') > -1 ) { return; } if (top.g_sSlaveServer) { Log("Server: " + top.g_sSlaveServer);
 } LoadPersonalMenu.SuspendUpdates = 0; var aMatches = top.location.search.match(/^\?(\w+)\W?/); if(aMatches && g_hResources[ aMatches[1] ] ) { g_hQS['load'] = aMatches[1]; } var sResource = sResource || g_hQS['load'] || ''; if ( sResource && ! g_hResources[sResource] ) { sResource = 'bad_link'; } var hOptions = hOptions || {}; g_hOnlineBlockHTML = {}; var frame = parent ? parent.frames['chat_applet'] : null; UpdateCookieHash(); LoadLogin(" "); LoadMenu(); if ( ! g_bLoginDone && ! hOptions['login_complete'] ) { if ( g_hQS['disable_model_notification'] || g_hQS['remove_email_notify'] ) { sResource = 'account'; } else if(g_hQS['buy']) { Load('login' , { verification: g_hQS['buy'], post_load: 'purchase' || '', login_alert: 1 }); return; } else if (g_hQS['code'] || g_hQS['verification']) {
 g_hQS['verification'] = g_hQS['verification'] || g_hQS['code']; Load('login', { verification: g_hQS['verification'], post_load: sResource || '' } ); return; } } else { g_hQS['verification'] = ''; g_hQS['code'] = ''; g_hQS['buy'] = ''; g_hQS['load'] = ''; } Log('g_sConnectionMode: ' + g_sConnectionMode); if ( hOptions['fromlogin'] == 1 ) { location.href.match(/^([^\?]*)/); location.replace(RegExp.$1 ); } if (g_nZgwLoaded == 1) { } else { } if (hOptions['login_complete']) { } if(g_hQS['mode'] == "under_construction") { sResource = "under_construction"; } else if(g_hQS['delete']) { sResource = "delete_account"; } if(hOptions['login']) { g_hQS['verification'] = ''; 1;
 } g_hQS['target'] = 'main'; Load(sResource , g_hQS ); if (g_hQS['mode'] == "under_construction") return; setTimeout(FlushCache,1800000); if(ExtraMenuSelector.sSelectedFeature == 'recommend' ) { Recommend.Initialize(); } RefreshServerConfig.Poll();}DebugControls = {};DebugControls.Load = function(){ if(typeof(g_hQS['debug']) == 'string' ) { g_hQS['debug'] = g_hQS['debug'].replace(/"/,''); } else { g_hQS['debug'] = ''; } var sSelectors=''; var aServerLists = { 'Chat Server': { qs_var: 'server', list: SelectChatServer.aHostOptions } }; if(g_hQS.server && aServerLists['Chat Server'].list ) { aServerLists['Chat Server'].list.push(g_hQS.server ); } for(var sList in aServerLists ) { aOptions = new Array(); for(var nK in aServerLists[sList].list ) { var sServer = aServerLists[sList].list[nK]; var sSortKey = sServer; var aMatches = sServer.match(/(\D+)(\d+)/); if(aMatches && aMatches[1] && aMatches[2] ) { sSortKey = aMatches[1] + MfcStringUtilities.char_padding(aMatches[2], 10, '0', 'left' );
 } aOptions.push(sSortKey + "|" + sServer ); } aOptions.sort(); var sPrev; var sPrevTracker; var sNext; var bNextTracker; var sOptions = "<option value=''>Random</option>"; for(var nK=0; nK < aOptions.length; nK++ ) { aHalves = aOptions[nK].split('|'); var sServer = aHalves[1]; if(bNextTracker == true ) { sNext = sServer; bNextTracker = false; } var sSelected=''; if(sList == 'Chat Server' && SelectChatServer.sHost == sServer ) { sSelected='SELECTED'; if(aOptions[ nK - 1 ] ) { sPrev = sPrevTracker; } if(aOptions[ nK + 1 ] ) { bNextTracker = true; } } sPrevTracker = sServer; sOptions += "<option value='" + sServer + "' " + sSelected + ">" + sServer + "</option>"; } sSelectors += "<span style=\"white-space:nowrap;\">" + sList; if(SelectChatServer.sType ) { sSelectors += "(" + SelectChatServer.sType + ")"; } sSelectors += ": <select style=\"font-size:10px;\" onChange=\"DebugControls.LoadServer('" + aServerLists[sList].qs_var + "',this.value);\">" + sOptions + "</select>"; if(sPrev ) { sSelectors += "<input type=button style=font-size:10px; onClick=\"DebugControls.LoadServer('" + aServerLists[sList].qs_var + "','" + sPrev + "');\" value='<'>"; } if(sNext ) { sSelectors += "<input type=button style=font-size:10px; onClick=\"DebugControls.LoadServer('" + aServerLists[sList].qs_var + "','" + sNext + "');\" value='>'>";
 } sSelectors += "</span> "; } var sHtml = " Log Filter: <input type=text id=log_filter value=\"" + g_hQS['debug'] + "\" style=\"font-size:10px;\" onKeyUp=\" g_hQS.debug=this.value; \"> <input type=button value='" + ( Log.bLogPause ? 'Un-Pause' : 'Pause' ) + "' onClick=\" if(Log.bLogPause ) { this.value='Pause'; Log.bLogPause=false; } else { this.value='Un-Pause'; Log.bLogPause=true; } \" style=\"width:60px;font-size:10px;\" > "; if(window.console && window.console.clear ) { sHtml += "<input type=button value='Clear' onClick=' window.console.clear(); ' style=\"font-size:10px;\"> "; } var aConnectionMethods = ['flash','ajax','websocket']; var sConnectionOptions = ''; for(var nK in aConnectionMethods ) { var sMethod = aConnectionMethods[nK]; var sSelected = g_sConnectionMode == sMethod ? 'SELECTED' : ''; sConnectionOptions += "<option value='" + sMethod + "' " + sSelected + ">" + sMethod + "</option>"; } sHtml += " <span style=\"white-space:nowrap;\"> Conn. Method: <select style=\"font-size:10px;\" onChange=\"DebugControls.LoadConnectionMethod(this.value);\"> " + sConnectionOptions + " </select> </span> "; if(g_sConnectionMode == 'websocket' ) { var sProtocolOptions = "<option value=''>Auto</option>";  sHtml += " <span style=\"white-space:nowrap;\"> Protocol: <select style=\"font-size:10px;\" onChange=\"DebugControls.LoadWebsocketProtocol(this.value);\"> " + sProtocolOptions + "\
 </select> </span> "; } sHtml += sSelectors; sHtml += " ChatHost: <input type=text id=typein_chat_server value='" + ( g_hQS.server || '' ) + "' onKeyPress=\" if(event.keyCode == 13 ) { DebugControls.LoadServer('server',document.getElementById('typein_chat_server').value); } \" style=\"width:60px;font-size:10px;\" ><input type=button style=font-size:10px; onClick=\"DebugControls.LoadServer('server',document.getElementById('typein_chat_server').value);\" value='Reload'> "; sHtml += " VideoServerID: <input type=text id=typein_video_server value='" + ( g_hQS.video_server || DrawVideo.sLastVideoServer || '' ) + "' onKeyDown=\"  if(event.keyCode == 13 ) { DebugControls.LoadVideoServer(document.getElementById('typein_video_server').value); }  if(event.keyCode == 38 ) { DebugControls.LoadVideoServer(parseInt(document.getElementById('typein_video_server').value) + 1 ); }  if(event.keyCode == 40 ) { DebugControls.LoadVideoServer(parseInt(document.getElementById('typein_video_server').value) - 1 ); }  \" style=\"width:35px;font-size:10px;\" ><input type=button style=font-size:10px; onClick=\"DebugControls.LoadVideoServer(document.getElementById('typein_video_server').value);\" value='Load'> "; sHtml += " <span id=video_debug_info style=\"white-space:nowrap;\" > </span> "; SetHTML('log_controls',sHtml); GetEl('log_controls').style.display = ''; DebugControls.PlayerStatus();};DebugControls.PlayerStatus = function(){ var oStatus; if(! ( oStatus = document.getElementById('video_debug_info') ) ) { return; } var nPlayerModel; if(window.frames['main'].g_nBroadcasterId ) { nPlayerModel = window.frames['main'].g_nBroadcasterId; }
 oStatus.innerHTML = ( nPlayerModel ? g_hUsers[nPlayerModel].username : 'Homepage' ) + " TX: " + ( DrawVideo.sLastVideoServer_ModelAssigned || '' ) + ", RX: " + ( DrawVideo.sLastVideoServer || '' );};DebugControls.Unload = function(){ GetEl('log_controls').style.display = 'none';};DebugControls.LoadWebsocketProtocol = function(sProtocol ){ sLocation = DebugControls.ModifyLocation(top.location.href, 'ws_protocol', sProtocol ); top.location = sLocation;};DebugControls.LoadConnectionMethod = function(sMethod ){ sLocation = DebugControls.ModifyLocation(top.location.href, 'conn_mode', sMethod ); top.location = sLocation;};DebugControls.LoadVideoServer = function(sServer ){ window.frames['main'].LoadVideo({ video_server: sServer })};DebugControls.LoadServer = function(sType, sServer ){ var sLocation = top.location.href; for(var nPlayerBroadcaster in g_hoPlayerWindows ) { sLocation = DebugControls.ModifyLocation(sLocation, 'load', 'player' ); sLocation = DebugControls.ModifyLocation(sLocation, 'broadcaster_id', nPlayerBroadcaster ); } sLocation = DebugControls.ModifyLocation(sLocation, sType, sServer ); top.location = sLocation;};
DebugControls.ModifyLocation = function(sLocation, sKey, sValue ){ if(sLocation.indexOf('?') == -1 ) { sLocation += '?'; } if(sLocation.indexOf(sKey + '=' ) > - 1 ) { var oRE = new RegExp(sKey + "=[^&]*" ); sLocation = sLocation.replace(oRE, sKey + '=' + sValue ); } else { sLocation = sLocation + '&' + sKey + '=' + sValue; } return sLocation;};function FlushCache(){ g_hOnlineBlockHTML = {}; setTimeout(FlushCache,1800000);}var PopularRooms = { paging: null, nModelsPerPage: 10, nPage: 1, nRenderTimer: 0};PopularRooms.Initialize = function(){ PopularRooms.paging = new MfcPaging(" PopularRooms.Render(); ", PopularRooms.nModelsPerPage, { prefix_pattern: "Pages: ", numeric_link_count: 5, compact: 1 } ); PopularRooms.nRenderTimer = setTimeout(PopularRooms.Render, 500 ); return false;};PopularRooms.Render = function(){
 if(ExtraMenuSelector.sSelectedFeature != 'popular_rooms' || ! GetEl("menu_extras") ) { return; } clearTimeout(PopularRooms.nRenderTimer ); PopularRooms.nRenderTimer = setTimeout(PopularRooms.Render, 30000 ); if(GetEl("menu_extras") && RoomData.bDone == false ) { ExtraMenuSelector.Initialize(); return; } aHtml = new Array(); var aRank = new Array(); for(var nUserId in t.g_hUsers ) { if(g_hUsers[nUserId].access_level != 4 || g_hUsers[nUserId].hidden ) continue; if(! t.g_hUsers[nUserId].room_count ) { t.g_hUsers[nUserId]['room_count'] = 0; } aRank.push(MfcStringUtilities.char_padding(t.g_hUsers[nUserId]['room_count'],10,0) + ":" + nUserId ); } aRank.sort(); aRank.reverse(); sPaging = PopularRooms.paging.GetHTML(50 ); var nLow = ( PopularRooms.paging.nPage - 1 ) * PopularRooms.nModelsPerPage; var nHigh = ( ( PopularRooms.paging.nPage ) * PopularRooms.nModelsPerPage ) - 1; var nRank = 0; for(var nRank=nLow; nRank <= nHigh; nRank++ ) { if(! aRank[ nRank ] || typeof(aRank[nRank] ) != 'string' ) { break; } aPair = aRank[nRank].split(':'); aHtml.push(PopularRooms.ModelItem(aPair[1], nRank ) ); } var sDescription; if(PopularRooms.paging.nPage == 1 ) {
 sDescription = "<b>Top " + PopularRooms.nModelsPerPage + "</b> " + A('top_rooms') + "Popular Rooms</a>"; } else { sDescription = A('top_rooms') + "Popular Rooms</a> <b>" + ( ( ( PopularRooms.paging.nPage - 1 ) * PopularRooms.nModelsPerPage ) + 1 ) + " - " + ( PopularRooms.paging.nPage * PopularRooms.nModelsPerPage ) + "</b>"; } SetHTML('menu_extras'," <div style=\"font-size:11px;width:140px;white-space:nowrap;overflow:hidden;\"> " + sDescription + " <br><br> <table width=100%> " + aHtml.join('') + " </table> <br> " + sPaging + " <br><br> </div> ");};PopularRooms.ModelItem = function(nUserId, nRank ){ var hUser = t.g_hUsers[nUserId]; var nColor = Math.round(( hUser['room_count'] / 500 ) * 255); nColor = nColor > 255 ? 255 : nColor; var nColor = 255 - ( Math.round(( hUser['room_count'] / 500 ) * 200 ) + 55 ); nColor = nColor < 0 ? 0 : nColor; var sTextColor = MfcStringUtilities.char_padding(nColor.toString(16),2,0); sTextColor = sTextColor + sTextColor + sTextColor; var sFontWeight = 'normal'; if(hUser['room_count'] > 1000 ) sFontWeight = 'bold'; var nBGColor = nRank % 2 ? '#f5f5f5' : 'transparent'; var nBGColor2 = nRank % 2 ? '#ffffff' : 'transparent'; nBGColor2 = hUser['room_count'] > 3000 ? 'ffff11' : 'ffffff'; var sUserFont = MfcCustomFonts.prototype.get_style(hUser ); var sImg=''; if(g_hSelf.access_level > 0 ) sImg = "<img height=30 class=tiny_livesnap_border src="http://www.myfreecams.com/mfc2/static/+&#32;t.LiveSnapUrl(nUserId,100)&#32;+" style=\"cursor:pointer;\">"; else sImg = "<i"+"mg height=30 width=30 sr"+"c=" + AvatarUrl(nUserId,30) + " style=\"border:1px solid #bbbbbb;\">";
 var sHtml = " <tr style=\"background-color:" + nBGColor + ";\"> <td style=\"width:40px;\" onMouseDown=\" if(! popUserMenu.right_click_open(event,"+nUserId+",g_oDhtmlPopup)) { t.Load('player',{broadcaster_id:" + nUserId + "}); } \"> " + sImg + " </td> <td> <td onMouseDown=\" popUserMenu.right_click_open(event,"+nUserId+",g_oDhtmlPopup); \"> <div style=\"padding-top:3px;font-size:10px;white-space:nowrap;overflow:hidden;width:200px;clear:both;background-color:#" + nBGColor2 + ";height:32px;\"> <div style=\"float:left;\"> <span style=\"font-weight:bold;" + sUserFont + "\">" + hUser['username'] + "</span><br> <span style=\"padding-left:4px;color:" + sTextColor + ";font-weight:" + sFontWeight + ";cursor:pointer;\" onClick=\"t.Load('player',{broadcaster_id:" + nUserId + "});\">" + hUser['room_count'] + " people</span> </div> <div style=\"float:left;cursor:pointer;\"><span class='menu-item-icon sprite-link " + popUserMenu.people_icon_sprite_css(nUserId ) + "' onClick='popUserMenu.open("+nUserId+",g_oDhtmlPopup);'></span></div></div> </div> </td> </tr> "; return sHtml;};var ModelHistory = { aModelTrail: new Array()};ModelHistory.Initialize = function(){ Log('ExtraMenuSelector - ModelHistory.Initialize'); var aMatches = document.cookie.match(/history=([\d,]+);/); if(aMatches && aMatches[1] ) { ModelHistory.aModelTrail = []; var aCookieTrail = aMatches[1].split(','); for(var a=0; a < aCookieTrail.length; a++ ) { var nUserId = aCookieTrail[a]; if(g_hUsers[ nUserId ] && g_hUsers[ nUserId ].state != undefined ) { ModelHistory.aModelTrail.push(nUserId ); } }
 } ModelHistory.Render(); return false;};ModelHistory.Clear = function(){ ModelHistory.aModelTrail = new Array(); setTimeout(function() { SetCookie('mh','0','Thu, 21-Jan-2001 00:00:01 GMT'); }, 100 ); g_hCk['mh'] = ''; ModelHistory.Render();};ModelHistory.GetHistory = function(){ return ModelHistory.aModelTrail.slice(0);};ModelHistory.Append = function(nAppendUserId ){ if(! nAppendUserId || ( nAppendUserId && g_hSelf['pause_model_history'] ) ) { return; } var nNewModelTrail = []; for(var nK in ModelHistory.aModelTrail ) { var nUserId = ModelHistory.aModelTrail[nK]; if(g_hUsers[ nUserId ]
 && g_hUsers[ nUserId ].state != undefined && nAppendUserId != nUserId ) { nNewModelTrail.push(nUserId ); g_hUsers[ nUserId ]['model_history'] = ModelHistory.aModelTrail.length - ( nK - 1 ); } } nNewModelTrail.push(nAppendUserId ); g_hUsers[ nAppendUserId ]['model_history'] = 1; ModelHistory.aModelTrail = nNewModelTrail; if(ModelHistory.aModelTrail.length > 30 ) { nRemoveUserId = ModelHistory.aModelTrail.shift(); if(g_hUsers[ nRemoveUserId ] ) delete g_hUsers[ nRemoveUserId ].model_history; } SetCookie('history', ModelHistory.aModelTrail.join(',') ); ModelHistory.Render();};ModelHistory.Render = function(){ if(ExtraMenuSelector.sSelectedFeature != 'model_history' || ! GetEl("menu_extras") ) { return; } if(ModelHistory.aModelTrail.length == 0 && g_hCk['mh'] ) { ModelHistory.aModelTrail = g_hCk['mh'].split(','); var aTmp = new Array(); var bModelInList = 0; for(var nK in ModelHistory.aModelTrail ) { var nUserId = ModelHistory.aModelTrail[nK]; if(g_hUsers[ nUserId ] ) { aTmp.push(nUserId ); }
 } ModelHistory.aModelTrail = aTmp; } var aTmp = new Array(); if(ModelHistory.aModelTrail.length > 0 ) { aTmp.push(" <table width=120> "); var hOneEntryPerModel = {}; var cx = 0; var limit = 0; for(var a=ModelHistory.aModelTrail.length; a > 0; a-- ) { if(limit++ == 11 ) { break; } nUserId = parseInt(ModelHistory.aModelTrail[a-1] ); if(! g_hUsers[ nUserId ] || ! g_hUsers[ nUserId ].username || hOneEntryPerModel[ nUserId ] ) { continue; } hOneEntryPerModel[ nUserId ] = 1; if(! g_hUsers[ nUserId ] && ! UCR.hRooms[ ( nUserId + 100000000 ) ] ) { 1; } else if(hRoom = UCR.hRooms[ ( nUserId + 100000000 ) ] ) { aTmp.push(" <tr> <td colspan=2 valign=top style=\"border-top:0px solid #eeeeee;padding-left:2px;\" " + PopupBioHandlerCode(nUserId) + "> <div style=\"font-size:13px;width:120px;overflow:hidden;white-space:nowrap;" + hRoom.name_font_style + "\"> <a href="top.html?cache_id=1423267822&amp;#" style=\"" + MfcCustomFonts.prototype.get_style(g_hUsers[nUserId] ) + "\" onClick=\" Load('player',{ broadcaster_id: " + nUserId + ", history_click: 1 }); return false;\">" + hRoom.name + "</a> </div> <div style=\"font-size:8px;\"> Member Room </div> </td> </tr> ");
 } else if(g_hUsers[ nUserId ]['access_level'] < 4 ) { 1; } else if(g_hUsers[ nUserId ]['state'] >= 90 ) { aTmp.push(" <tr> <td style=\"background-color:#FFFFFF;\" " + PopupBioHandlerCode(nUserId) + "> <i"+"mg height=30 width=30 sr"+"c=" + AvatarUrl(nUserId ,30) + " style=\"border:1px solid #bbbbbb;\"> </td> <td valign=top style=\"border-top:0px solid #eeeeee;padding-left:2px;background-color:#FFFFFF;\" PopupBioHandlerCode(nUserId)> <div style=\"font-size:13px;width:102px;overflow:hidden;white-space:nowrap;\"> <i>" + g_hUsers[ nUserId ]['username'] + "</i> </div> <div style=\"font-size:8px;\"> Offline  <a href="top.html?cache_id=1423267822&amp;#" onClick=\"popUserMenu.open(" + nUserId + ",g_oDhtmlPopup); return false;\">Menu</a> </div> </td> </tr> "); } else { aTmp.push(" <tr> <td style=\"\" " + PopupBioHandlerCode(nUserId) + "> <a href="top.html?cache_id=1423267822&amp;#" style=\"" + MfcCustomFonts.prototype.get_style(g_hUsers[nUserId] ) + "\" onClick=\" Load('player',{ broadcaster_id: " + nUserId + ", history_click: 1 }); return false; \" ><i"+"mg height=30 width=30 sr"+"c=" + AvatarUrl(nUserId ,30) + " style=\"border:1px solid #bbbbbb;\"></a> </td> <td valign=top style=\"border-top:0px solid #eeeeee;padding-left:2px;\" " + PopupBioHandlerCode(nUserId) + "> <div style=\"font-size:13px;width:102px;overflow:hidden;white-space:nowrap;\"> <a href="top.html?cache_id=1423267822&amp;#" style=\"" + MfcCustomFonts.prototype.get_style(g_hUsers[nUserId] ) + "\" onClick=\" Load('player',{ broadcaster_id: " + nUserId + ", history_click: 1 }); return false;\">" + g_hUsers[ nUserId ]['username'] + "</a> </div> <div style=\"font-size:8px;\"> " + ( ! g_hLoungeIds[ nUserId ] ? "<a href="top.html?cache_id=1423267822&amp;#" onClick=\"popUserMenu.open(" + nUserId + ",g_oDhtmlPopup); return false;\">Menu</a>" : "" ) + " </div> </td> </tr> "); } } aTmp.push("</table>"); } 
 else { aTmp.push("<div style=\"padding:30px 0px;color:#777777;font-size:11px;text-align:center;\">Chat rooms that you have recently visited will be displayed here.</div>"); } aTmp.push(" <div style=\"font-size:10px;padding-top:6px;\"> <a href="top.html?cache_id=1423267822&amp;#" onClick=\"ModelHistory.Clear(); return false;\">Clear</a> |  <span id=pause_model_history></span> </div> <br> "); SetHTML('menu_extras', aTmp.join('') ); setTimeout(function(){ SetCookie('mh',ModelHistory.aModelTrail.join(),'Thu, 21-Jan-2021 00:00:01 GMT');},100); ModelHistory.Pause_Label();};ModelHistory.Pause = function(){ g_hSelf['pause_model_history'] = g_hSelf['pause_model_history'] ? 0 : 1; SaveSetting('pause_model_history', g_hSelf['pause_model_history'] || 0 ); ModelHistory.Pause_Label();};ModelHistory.Pause_Label = function(){ if(! GetEl('pause_model_history') ) { return; } var sHtml; if(g_hSelf['pause_model_history'] ) { sHtml = " Paused <a href="top.html?cache_id=1423267822&amp;#" onClick=\"ModelHistory.Pause(); return false;\"><span style=background-color:#FFFF33;>Resume</span></a> "; } else { sHtml = "<a href="top.html?cache_id=1423267822&amp;#" onClick=\"ModelHistory.Pause(); return false;\">Pause</a>"; } SetHTML('pause_model_history',sHtml,{ 'force': true });};var Recommend = {
 nSourceModelId: 0, hRecommendations: {}, aRecommendationOrder: {}};Recommend.Initialize = function(){ SetHTML('menu_extras'," <div style=\"padding:30px 0px;font-size:11px;color:#777777;text-align:center;\"> Enter a chat room<br>to see other<br>" + ( g_hSelf.access_level > 0 ? A('model_recommendations') : '' ) + "models you may like</a> displayed here. </div> "); if(Recommend.nSourceModelId ) { Recommend.Request(Recommend.nSourceModelId ); }};Recommend.Request = function(nUserId ){ if(nUserId ) { Recommend.nSourceModelId = nUserId; } if(g_hQS.fcrecommend == 1 ) { Log('Recommend.Request FCTYPE_RECOMMEND call for ' + Recommend.nSourceModelId ); TxCmd(FCTYPE_RECOMMEND, g_nSessionId, 0, Recommend.nSourceModelId ); } else { Log('Recommend.Request API call for ' + Recommend.nSourceModelId ); var mfcRecommend = new MfcRecommend({ callback: Recommend.Response }); mfcRecommend.getRecommendations({ model_id: Recommend.nSourceModelId } ); }};Recommend.Response = function(response ){ var hResponse; if(typeof(response ) == 'string' ) { hResponse = ParseJSON(decodeURIComponent(response ) ); Log('Recommend.Response FCTYPE_RECOMMEND response: ' + JSON.stringify(hResponse ) ); } else if(typeof(response ) == 'object' && response.result ) { hResponse = response.result; Log('Recommend.Response API response: ' + JSON.stringify(hResponse ) ); } else { Log('Recommend.Response invalid response: ' + ( response ) ); return; } Recommend.hRecommendations[ Recommend.nSourceModelId ] = hResponse;
 Recommend.aRecommendationOrder[ Recommend.nSourceModelId ] = []; var hRecommendations = Recommend.hRecommendations[ Recommend.nSourceModelId ]; var aSort = new Array(); for(var sK in hRecommendations ) aSort.push(hRecommendations[sK] + "|" + sK ); aSort.sort(); aSort.reverse(); for(var n=0; n < aSort.length; n++ ) { var aPair = aSort[n].split('|'); var nUserId = aPair[1]; var fScore = aPair[0]; Recommend.aRecommendationOrder[ Recommend.nSourceModelId ].push(nUserId ); } if(ExtraMenuSelector.sSelectedFeature == 'recommend' ) { Recommend.DisplayRecommendations(); } if(t.g_hSelf.show_recommendations_first ) { WindowHandle.CallEach('player', function(oWin ) { if(oWin.g_nBroadcasterId == Recommend.nSourceModelId ) { Log('RECOMM. ' + oWin.g_nBroadcasterId + ' == ' + Recommend.nSourceModelId ); oWin.OnlineBroadcasterList.Refresh(); } } ); }};Recommend.DisplayRecommendations = function(){ var aHtml = []; var nMax=0; var hRecommendations = Recommend.hRecommendations[ Recommend.nSourceModelId ]; var aRecommendationOrder = Recommend.aRecommendationOrder[ Recommend.nSourceModelId ]; for(var a=0; a<aRecommendationOrder.length; a++ ) { nRecommendedId = aRecommendationOrder[a]; if(! g_hUsers[ nRecommendedId ] || ! IsBroadcastState(g_hUsers[ nRecommendedId ].state ) || g_hUsers[ nRecommendedId ].hidden ) { continue; } aHtml.push(Recommend.ModelItem(nRecommendedId, hRecommendations[ nRecommendedId ] ) ); if(nMax == 10 ) { break; } nMax++; } if(aHtml.length && g_hUsers[Recommend.nSourceModelId] ) { var sUserFont = MfcCustomFonts.prototype.get_style(g_hUsers[Recommend.nSourceModelId] ); SetHTML('menu_extras'," <div style=\"font-size:11px;\"> If you like <span style=\"cursor:pointer;" + sUserFont + "font-size:13px;\" onMouseDown=\" popUserMenu.open(" + Recommend.nSourceModelId + ",g_oDhtmlPopup); \" >" + g_hUsers[Recommend.nSourceModelId].username + "</span>,<br> " + A('model_recommendations',{ view_single_model_id: Recommend.nSourceModelId }) + "you may also like</a>: </div> <br> <table border=0> " + aHtml.join('') + " </table> <br> "); } else { SetHTML('menu_extras'," <div style=\"padding:30px 0px;font-size:11px;color:#555555;text-align:center;\"> No recommendations. </div> "); }};Recommend.ModelItem = function(nUserId, fScore ){ var hUser = t.g_hUsers[nUserId]; var sUserFont = MfcCustomFonts.prototype.get_style(hUser ); if ( fScore > .12 ) { nBars = 10; }
 else if ( fScore > .10) { nBars = 9; } else if ( fScore > .08) { nBars = 8; } else if ( fScore > .06) { nBars = 7; } else if ( fScore > .05) { nBars = 6; } else if ( fScore > .04) { nBars = 5; } else if ( fScore > .03) { nBars = 4; } else if ( fScore > .02) { nBars = 3; } else if ( fScore > .01) { nBars = 2; } else { nBars = 1; } var nBarWidth = parseInt(60 / ( 10 / nBars ) ); var sImg = ''; if(hUser.state == FCVIDEO_TX_IDLE ) { sImg = " <img height=30 class=tiny_livesnap_border src="http://www.myfreecams.com/mfc2/static/+&#32;t.LiveSnapUrl(nUserId,100)&#32;+" style=\"cursor:pointer;\"> "; } else { var sStateName = ''; if(g_hUsers[nUserId]['truepvt'] && ( hUser.state == FCVIDEO_TX_PVT || hUser.state == EVSESSION_PRIVATE ) ) { sStateName = 'True<br>Private'; } else { switch(hUser.state ) { case FCVIDEO_TX_IDLE: { sStateName = 'In Public'; } break; case FCVIDEO_TX_AWAY: { sStateName = 'Away'; } break; case EVSESSION_PRIVATE: { sStateName = 'In<br>Private'; } break; case EVSESSION_VOYEUR: { sStateName = 'In<br>Private'; } break; case FCVIDEO_TX_PVT: { sStateName = 'In<br>Private'; } break; case EVSESSION_GROUP: { sStateName = 'Group<br>Show'; } break; case FCVIDEO_TX_GRP: { sStateName = 'Group<br>Show'; } break; } } sImg = " <div style=\"position:relative;height:30px;width:40px;font-size:9px;font-weight:bold;text-align:center;border:1px solid #DDDDDD;padding-top:4px;\">" + sStateName + "</div> "; } var sHtml = " <tr> <td style=\"cursor:pointer;width:40px;\" onMouseDown=\" if(! popUserMenu.right_click_open(event,"+nUserId+",g_oDhtmlPopup)) { t.Load('player',{broadcaster_id:" + nUserId + "}); } \"> " + sImg + " </td>\
 <td> <td onMouseDown=\" popUserMenu.right_click_open(event,"+nUserId+",g_oDhtmlPopup); \"> <div style=\"padding-top:3px;font-size:10px;white-space:nowrap;overflow:hidden;width:90px;clear:both;height:32px;\"> <div style=\"cursor:pointer;float:left;\" onClick=\"t.Load('player',{broadcaster_id:" + nUserId + "});\"> <div style=\"font-weight:bold;overflow:hidden;width:70px;" + sUserFont + "\">" + hUser['username'] + "</div> <a title=\"" + ( ( nBars / 10 ) * 100 ) + "% Match\"><div style=\"margin-left:4px;height:10px;width:62px;border:1px solid #22A022;font-size:8px;position:relative;overflow:hidden;\"><div style=\"background-color:#008000;width:" + nBarWidth + "px;height:8px;position:absolute;top:1px;left:1px;\">&nbsp;" + "</div></div></a> </div> <div style=\"float:left;cursor:pointer;height:16px;width:16px;\"><span class='menu-item-icon sprite-link " + popUserMenu.people_icon_sprite_css(nUserId ) + "' onClick='popUserMenu.open("+nUserId+",g_oDhtmlPopup);'></span></div> </div> </td> </tr> "; return sHtml;};var ExtraMenuSelector = { hFeatures: { recommend: { name: 'Models You May Like', init: Recommend.Initialize }, model_history: { name: 'Recently Visited Rooms', init: ModelHistory.Initialize }, popular_rooms: { name: 'Most Popular Rooms', init: PopularRooms.Initialize } }, sSelectedFeature: '', bDefault: true, bLoaded: false};ExtraMenuSelector.Initialize = function(){ SetHTML('menu_extras',"<div style=\"text-align:center;padding:20px 0px 50px 0px;color:gray;font-size:11px;\">Loading...</div>");};ExtraMenuSelector.Load = function(sLoadFeature, bSave ){ var bPlayerLoaded = ( window.frames['main'] && window.frames['main'].g_nBroadcasterId > 0 ) ? 1 : 0; if(bSave ) { UserExtensions.Write('extra_menu_mode', sLoadFeature ); } if(g_hSelf.extra_menu_mode ) { if(! bSave && g_hSelf.extra_menu_mode == 'recommend' )
 { if(bPlayerLoaded ) { sLoadFeature = 'recommend'; } else { sLoadFeature = 'popular_rooms'; } } ExtraMenuSelector.bDefault = false; } else { ExtraMenuSelector.bDefault = true; if(bPlayerLoaded ) { sLoadFeature = 'recommend'; } else { sLoadFeature = 'popular_rooms'; } } ExtraMenuSelector.sSelectedFeature = sLoadFeature; if(GetEl("menu_extras_heading").innerHTML != ExtraMenuSelector.hFeatures[sLoadFeature].name ) SetHTML("menu_extras_heading", ExtraMenuSelector.hFeatures[sLoadFeature].name ); var sHtml = 'Switch to...<br>'; for(var sFeature in ExtraMenuSelector.hFeatures ) { if(sFeature == sLoadFeature ) { continue; } sHtml += "<a href=javascript: id=init_" + sFeature + ">" + ExtraMenuSelector.hFeatures[sFeature].name + "</a><br>"; } SetHTML('menu_extras_selector',sHtml); for(var sFeature in ExtraMenuSelector.hFeatures ) { var oEl; if(oEl = GetEl('init_' + sFeature) ) { with({ sFeature: sFeature }) oEl.onclick = function() { ExtraMenuSelector.Load(sFeature,true); } } } ExtraMenuSelector.bLoaded = true; ExtraMenuSelector.hFeatures[sLoadFeature].init();
 return false;};ExtraMenuSelector.UpdateFeature = function(nUserId ){ var bPlayerLoaded = ( window.frames['main'] && window.frames['main'].g_nBroadcasterId > 0 ) ? 1 : 0; if(nUserId != undefined ) { Recommend.nSourceModelId = nUserId; } if(! ExtraMenuSelector.bLoaded ) { return; } if(ExtraMenuSelector.bDefault ) { if(nUserId > 0 ) { Recommend.Initialize(); ExtraMenuSelector.Load('recommend'); } else { PopularRooms.Initialize(); ExtraMenuSelector.Load('popular_room'); } } else if(g_hSelf.extra_menu_mode == 'recommend' ) { if(bPlayerLoaded ) { Recommend.nSourceModelId = nUserId; Recommend.Initialize(); ExtraMenuSelector.Load('recommend'); } else { PopularRooms.Initialize(); ExtraMenuSelector.Load('popular_room'); } }};function InsertPremiumLounge(){ if ( g_hSelf['access_level'] != '2' && g_hSelf['access_level'] != '5' ) { return; } g_hUsers[ g_hLoungeIds.Lounge ] = { username: g_hLoungeIds[ g_hLoungeIds.Lounge ], user_id: g_hLoungeIds.Lounge, access_level: '4', state: '0',
 photos: '0', rating: '-2', cam_score: '0', aboutme: 'An exclusive room for Premium Members', active: '1', blurb: 'An exclusive room for Premium Members', topic: 'An exclusive room for Premium Members', creation_date: '0', avatars: '1', model_group: '1', chat_background_id: '0' }; if(g_hSelf['rewards_points'] >= 1000 ) { g_hUsers[ g_hLoungeIds.Lounge1000 ] = { username: g_hLoungeIds[ g_hLoungeIds.Lounge1000 ], user_id: g_hLoungeIds.Lounge1000, access_level: '4', state: '0', photos: '0', rating: '-2', cam_score: '0', aboutme: 'An exclusive room for Premium Members with 1000+ Rewards Points', active: '1', blurb: 'An exclusive room for Premium Members with 1000+ Rewards Points', topic: 'An exclusive room for Premium Members with 1000+ Rewards Points', creation_date: '0', avatars: '1', model_group: '1', chat_background_id: '0' }; } if(g_hSelf['rewards_points'] >= 10000 ) { g_hUsers[ g_hLoungeIds.Lounge10000 ] = { username: g_hLoungeIds[ g_hLoungeIds.Lounge10000 ], user_id: g_hLoungeIds.Lounge10000, access_level: '4', state: '0', photos: '0', rating: '-2', cam_score: '0', aboutme: 'An exclusive room for Premium Members with 10000+ Rewards Points', active: '1', blurb: 'An exclusive room for Premium Members with 10000+ Rewards Points', topic: 'An exclusive room for Premium Members with 10000+ Rewards Points', creation_date: '0', avatars: '1',
 model_group: '1', chat_background_id: '0' }; } }function Load(sResource,hOptions,oTarget){ sResource = sResource || ''; hOptions = hOptions || { }; oTarget = oTarget || ''; if(g_hSelf['rule_violation'] == 1 && sResource != 'rule_violation' ) { return; } if(g_hResources[sResource] && typeof(g_hResources[sResource].new_window ) == 'undefined' && g_hResources[sResource].page && g_hResources[sResource].page.substring(0,5) == 'http:' ) { top.location.replace(g_hResources[sResource].page ); return; } var sTarget; if ( hOptions['target'] ) { sTarget = hOptions['target']; } else if (g_hResources[sResource] && g_hResources[sResource]['target']) { sTarget = g_hResources[sResource]['target']; } else { sTarget = 'new_window'; } if (sResource == 'pm_friend') { return ClickFriend(hOptions['user_id'],hOptions);
 } else if (sResource == 'close_pm_window') { return ClosePMWindow(hOptions['user_id']); } else if (sResource == 'pm_prompt') { return PmUsernamePrompt.Form(); } else if (sResource == 'logout') { if (g_sConnectionMode == 'flash') zgw_TxLogout(); TxCmd(FCTYPE_LOGOUT, g_nSessionId, 0); Logout(false); return; } else if (sResource == 'mute') { return oTarget.Mute(); } else if (sResource == 'highlight_chat') { return HighlightUserChat(hOptions['user_id'] ); } else if (sResource == 'room_helper') { RoomHelper_TopHandlers.CommandReceiver(hOptions ); } else if (sResource == 'tx_add_friend') { return TxAddRemove('friend', hOptions['remote_user_code'], 'add' ); } else if (sResource == 'tx_remove_friend') { return TxAddRemove('friend', hOptions['remote_user_code'], 'remove' ); } else if (sResource == 'toggle_header') { return ToggleHeader(hOptions); } else if (sResource == 'toggle_menu') { return TogglePersonalMenu.Start(hOptions); } else if (sResource == 'tx_add_ignore') { return TxAddRemove('ignore',hOptions['remote_user_code'],'add',hOptions); }
 else if (sResource == 'tx_remove_ignore') { return TxAddRemove('ignore',hOptions['remote_user_code'],'remove',hOptions); } else if (sResource == 'toggle_mute_guests' || sResource == 'toggle_mute_regs') { for(var sK in g_hoPlayerWindows) { var oPlayerWindow; if(oPlayerWindow = WindowHandle.Get('player', sK ) ) { oPlayerWindow.ToggleMuteGuests(sResource); } } return; } else if (sResource == 'toggle_video' && oTarget && oTarget.ToggleVideo) { return oTarget.ToggleVideo(); } else if (sResource == 'toggle_size' && oTarget && oTarget.ToggleSize) { return oTarget.ToggleSize(); } else if (sResource == 'register' && hOptions['mode'] == 'guest_bounce') { sTarget = 'main'; } else if(sResource == 'player' && g_hoPlayerWindows[ hOptions['broadcaster_id'] ] && ! hOptions['lounge_model_id'] ) { Log("Redirecting focus to existing player instance for model " + hOptions['broadcaster_id']); try { g_hoPlayerWindows[ hOptions['broadcaster_id'] ]['window'].focus(); } catch(oError) { Log("Player focus error: " + oError.description); } return; } else if(sResource == 'player' ) { if(hOptions['target'] ) { oTarget = window.frames[hOptions['target']]; } else if(! oTarget ) { oTarget = window.frames['main']; }
 if(oTarget && oTarget.LoadPlayer ) { hOptions['history'] = 1; oTarget.LoadPlayer('',hOptions); return; } } if ( ! sResource ) { sResource = 'homepage'; } if (sResource == 'server_connection_error') { if (g_sConnectionMode == 'ajax' || g_sConnectionMode == 'websocket') sResource = 'homepage'; } if ( g_hQS['mode'] == "under_construction" && sResource != "under_construction" ) { return; } if(sResource == 'homepage' && sTarget ) { try { if(window.frames[sTarget] && window.frames[sTarget].g_bPlayerHTMLLoaded ) { window.frames[sTarget].LoadPlayer('homepage'); return; } } catch(e){} } var sLoc = ''; if(g_hResources[sResource] ) { sLoc = MfcStringUtilities.parse_template(g_hResources[sResource]['page'],hOptions,{ cleanup_unused_tags: true }); } if(! sLoc ) { return; }
 for(var sK in hOptions ) { if(sK != '' && sLoc.indexOf(sK+"=") == -1 ) { sLoc += MfcStringUtilities.query_string_append(sLoc, sK, hOptions[sK] ); } } if (sTarget) { if(g_hWindows[sTarget] && g_hWindows[sTarget].window && g_hWindows[sTarget].window.location && g_hWindows[sTarget].window.location.replace ) { g_hWindows[sTarget].window.location.replace(sLoc); } else if(t.frames[sTarget] && sTarget != "new_window" ) { t.frames[sTarget].location.replace(sLoc); } }}var HeaderArt = {};HeaderArt.Load = function(){ var sBackgroundUrl; var sHideTopImg; var nSet; if(g_hSelf.top_header_id > 0 ) { nSet = g_hSelf.top_header_id; } else { var nC = 0; var aShare = new Array(); for(var nK in hBannerArtConfig ) { nC++; for(var a=0; a < hBannerArtConfig[ nK ]['share']; a++ )
 { aShare.push(nK); } } nSet = aShare[ Math.floor(aShare.length * Math.random()) ]; } if(! hBannerArtConfig[ nSet ] ) { return; } sBackgroundUrl = "http://" + g_mfcImageHost.host(nSet ) + "/mfc2/styles/mfc/images/header2/top-header-tl-" + hBannerArtConfig[ nSet ]['filename'] + ".jpg"; if(g_hQS['h'] && hBannerArtConfig[ g_hQS['h'] ] ) { nSet = g_hQS['h']; sBackgroundUrl = "/mfc2/styles/mfc/images/header2/top-header-tl-" + hBannerArtConfig[ nSet ]['filename'] + ".jpg?" + Math.random(); } GetEl('header_logo').src = sBackgroundUrl; if(top.document.body.clientWidth > 870 ) { GetEl('miss_mfc_details').style.left = hBannerArtConfig[ nSet ]['left']; SetHTML('miss_mfc_name',"<span style='cursor:pointer;text-decoration:none;font-weight:normal;' onClick='PopupMissMfcDetails("+nSet+");'><i>" + hBannerArtConfig[ nSet ].username + "</i></span>"); }};function PopupMissMfcDetails(nSet ){ var aMonths = new Array("","January","February","March","April","May","June","July","August","September","October","November","December"); var hPlace = { 1: 'Winner!', 2: '2nd Place', 3: '3rd Place' }; var nHeight = g_hSelf['access_level'] > 0 ? 80 : 60; var aWins = hBannerArtConfig[ nSet ]['wins']; var sWins = ''; for(var nK in aWins ) { var sStyle = aWins[nK][0] == 1 ? " style='font-weight:bold;background-color:#FFFFF0 ! important;' " : ""; sWins += " <tr> <td class=missmfc_popup_crown> <div class='sprite-icons sprite-" + (aWins[nK][0] == 1 ? 'gold': 'silver') + "_crown' style='display:inline-block;'></div> </td> <td class=missmfc_popup_place nowrap " + sStyle + ">" + hPlace[aWins[nK][0]] + "</td> <td class=missmfc_popup_month " + sStyle + ">" + aMonths[aWins[nK][1]] + ' ' + aWins[nK][2] + "</td> </tr> ";
 nHeight += 30; } var sHtml = " <div style='width:340px;height:" + nHeight + "px;font-size:12px;'> <b><a href=http://profiles.myfreecams.com/" + hBannerArtConfig[ nSet ].username + " target=_blank>" + hBannerArtConfig[ nSet ].username + "</a> - Miss MyFreeCams  Top 3 Finish" + ( aWins.length == 1 ? '' : 'es' ) + "</b><br><br> <div class=missmfc_popup_container> <table cellpadding=0 cellspacing=0> " + sWins + " </table> </div><br> <div style='font-weight:normal;font-size:10px;'> " + A('miss_mfc') + "<span style='font-weight:normal;'>View current Miss MyFreeCams standings for this month.</span></a><br><br> " + ( g_hSelf['access_level'] > 0 ? ( A('user_settings',{load:'top_banner'}) + "<span style='font-weight:normal;'>Change your Top Banner settings.</span></a>" ) : '') + " </div> </div> "; g_oDhtmlPopup.open(sHtml );}function LoadMenu(sMenuItems ){ var nMenuMode; var sMenuItems = sMenuItems || ''; var hMainMenuOptions = { 'logout': 'Logout', 'purchase': 'Purchase Tokens', 'register': 'Create a Free Account', 'login': 'Login', 'profiles': 'Profiles', 'tour': 'Tour', 'homepage': 'Homepage', 'contact': 'Contact Us', 'contact_help': 'Contact Us', 'toggle_menu': '' }; var haMainMenuModes = { 'guest': new Array('homepage','tour','register'), 'registered': new Array('homepage','contact_help','purchase'), 'premium': new Array('homepage','contact_help','purchase'), 'model': new Array('homepage','contact_help') }; if(! sMenuItems )
 { if (g_hSelf['access_level'] == 1 ) nMenuMode = 'registered'; else if (g_hSelf['access_level'] == 2 ) nMenuMode = 'premium'; else if (g_hSelf['access_level'] == 4 ) nMenuMode = 'model'; else if (g_hSelf['access_level'] == 5 ) nMenuMode = 'premium'; else nMenuMode = 'guest'; var sMenuItems = ""; for(var nK in haMainMenuModes[nMenuMode]) { sResource = haMainMenuModes[nMenuMode][nK]; var sATag = A(sResource,{ 'USERNAME': g_hSelf['username'], 'USER_ID': g_hSelf['user_id'], user_invoked: 1 }); var sLabel = "<b>" + sATag + hMainMenuOptions[sResource] + "</a></b>"; if(! g_hSelf.show_header && sResource == 'purchase' ) sLabel = "(<span id=hidden_header_token_count>" + g_hSelf.tokens + "</span> Tokens) <b>" + sATag + "Purchase Tokens</a></b>"; sMenuItems += "<span class=main_menu_link id=btn_"+sResource+">" + sLabel + "</span>"; if(nK < haMainMenuModes[nMenuMode].length -1 ) sMenuItems += "<span style=\"color:#ffffff;padding:0px 5px;\">&#8226;</span>"; } } if(! g_hSelf.show_header && g_hSelf.access_level > 0 ) { sMenuItems += "<span style=\"color:#ffffff;padding:0px 5px;\">&#8226;</span><a href="top.html?cache_id=1423267822&amp;#" onClick=\"Logout();\" style=\"color:#E3E3E3;\"><b>Logout <i>" + g_hSelf.username + "</i></b></a> "; } else if(! g_hSelf.show_header ) { sMenuItems += "<span style=\"color:#ffffff;padding:0px 5px;\">&#8226; " + A('login') + "<span style=\"color:#E3E3E3;\"><b>Login</b></span></a> "; } if(TogglePersonalMenu.sDisplay == "none" ) { sMenuItems += "<span style=\"color:#ffffff;padding:0px 5px;\">&#8226;</span><a href="top.html?cache_id=1423267822&amp;#" onClick=t.Load('toggle_menu'); style='color:yellow;'>Un-Hide</a> <span onClick=t.Load('toggle_menu'); id=btn_unhide_friends>&#8594;</span>"; } if(g_hSelf['show_header'] ) { SetHTML('slim_menu',''); SetHTML('main_menu',sMenuItems); } else { SetHTML('slim_menu',sMenuItems);
 SetHTML('main_menu',''); }}function Logout(fDisconnected ){ UpdateCookieHash(); for(var sK in g_hCk) { if(sK.match(/\x75\x73\x65\x72\x6E\x61\x6D\x65|\x71\x73|\x63\x68\x61\x74\x5F\x65\x6E\x61\x62\x6C\x65\x64/) || g_hC[sK] ) continue; SetCookie(sK,''); } setTimeout(function() { location.href='/'; }, 100 ); return; GetEl('online_friends_tr').style.display='none'; GetEl('offline_friends_tr').style.display='none'; UCR.hRooms = {}; SharedVideoHandler.hSharedVideo = {}; g_bLoginDone = false; g_bFCTYPE_DETAILS_Received = false; FcAddFriend.FriendReset(); FcSessionState.ModelReset(); for(var sK in g_hSelf ) { delete g_hSelf[ sK ]; } for(var nUserId in g_hUsers ) { if(g_hUsers[nUserId]['state'] != w.FCVIDEO_OFFLINE && g_hUsers[nUserId]['state'] ) { delete g_hUsers[nUserId]; } } for (var sK in g_hoPMWindows) {
 try { g_hoPMWindows[sK]['window'].close(); } catch(oError) { Log("Logout error: " + oError.description ); } } for (var sK in g_hWindows) { try { g_hWindows[sK].window.close(); } catch(oError) { Log("Logout Error closing windows: " + oError.description); } } UpdateCookieHash(); LoadPersonalMenu('reset'); LoadLogin(); LoadMenu(); LoadViewers(); Banner.SetMessage(); Load('homepage');}function GetUserIdByUsername(sUsername ){ if(typeof(sUsername ) != 'string' ) { return; } sUsername = sUsername.toLowerCase();
 if(! GetUserIdByUsername.hCache ) { GetUserIdByUsername.hCache = {}; } if(GetUserIdByUsername.hCache[ sUsername ] ) return GetUserIdByUsername.hCache[ sUsername ]; var nFoundUserId; for(var nUserId in g_hUsers ) { var hUser = g_hUsers[ nUserId ]; if(! hUser.username ) { continue; } var sMatchName = hUser.username.toLowerCase(); if(sMatchName == sUsername ) { nFoundUserId = nUserId; break; } if(hUser.access_level == 4 || hUser.friend ) GetUserIdByUsername.hCache[ sMatchName ] = nUserId; } return nFoundUserId;} var Banner = { aHistory: []};Banner.SetMessage = function(sContent, sIcon, bSaveToHistory ){ if(bSaveToHistory ) { var date = new Date(); if(Banner.aHistory.length > 100 ) { Banner.aHistory.shift(); } Banner.aHistory.push({ content: sContent, date: date.getTime() } ); } if ( ! sContent ) { if(g_hSelf['access_level'] == 4 ) { sContent = "You are logged in as a Model"; } else if(g_hSelf['access_level'] == 2 || g_hSelf['access_level'] == 5 ) {
 sContent = "You have <b>" + g_hSelf.tokens + "</b> Tokens"; } else if(g_hSelf['access_level'] == 1 ) { sContent = A('purchase') + "Purchase tokens</a> once to become " + A('faq',{ anchor: 'Premium_Membership'}) + "Premium</a>."; } else { sContent = "You are currently a Guest."; } } sContent = "<span style=\"vertical-align:3px;line-height:16px;\">" + sContent + "</span>"; var sHost = g_mfcImageHost.host(sIcon ); if(sIcon ) { sContent = "<img src=\"http://" + sHost + "/mfc2/images/icons/bw/" + sIcon + "\"> &nbsp;" + sContent; } if(g_hSelf.access_level ) sContent += " <a href="http://www.myfreecams.com/mfc2/static/\&quot;javascript:Banner.LoadHistory();\&quot;"><img src="http://www.myfreecams.com/mfc2/static/\&quot;http://i.mfcimg.com/mfc2/images/icons/scroll.16x16.png?1\&quot;"></a>"; if(GetEl('menu_banner') ) { SetHTML('menu_banner',sContent); }};Banner.LoadHistory = function(){ var sRows = ''; var date = new Date(); for(var a=Banner.aHistory.length-1; a>=0; a-- ) { var nTimeDiff = ( date.getTime() - Banner.aHistory[a].date ) / 1000; if ( nTimeDiff < 60 ) { sTimeAgo = "<b>" + Math.round(nTimeDiff ) + " seconds ago.</b>"; } else if ( nTimeDiff <= 3600 ) { sTimeAgo = "<b>" + Math.round(nTimeDiff / 60 ) + " minutes ago.</b>"; } else if ( nTimeDiff > 7200 ) { sTimeAgo = Math.round(nTimeDiff / 3600 ) + " hours ago."; } else if ( nTimeDiff > 3600 ) { sTimeAgo = Math.round(nTimeDiff / 3600 ) + " hour ago."; } sRows += " <tr> <td class='banner_history_date'> " + sTimeAgo + "</td> <td width=100% class='banner_history_content'> " + Banner.aHistory[a].content + " </td> </tr> "; } if(! sRows )
 { sRows += " <tr> <td style=\"font-style:italic;color:gray;padding:8px;\"> No History </td> </tr> "; } g_oDhtmlPopup.open(" <div class=mini_popup_header>Notification History</div> <hr> <div style=\"overflow:auto;height:300px;width:490px;\"> <table width=470 > " + sRows + " </table> </div> ");};function LoadLogin(sContent){ sContent = sContent || ""; if (!GetEl('login_box')) { return; } var sUsername = A('account',{ title: 'Go to My Account' }) + g_hSelf['username'] + "</a>"; if (!sContent && g_hSelf['access_level'] == 5) { sContent = "Hello <b>" + sUsername + "</b>. (MyFreeCams Admin)</i>"; } else if (!sContent && g_hSelf['access_level'] >= 3) { sContent = "Hello <b>" + sUsername + "</b>. (MyFreeCams Model)"; } else if (!sContent && g_hSelf['access_level'] >= 2) { sContent = "Hello <b>" + sUsername + "</b>. (Premium Member)"; } else if (!sContent && g_hSelf['access_level'] == 1) { sContent = "Hello <b>" + sUsername + "</b>. (Basic Member)"; } if(g_hSelf['access_level'] > 0) { sContent = sContent + " <input type=button value=Logout onClick=\"Load('logout');return false;\" style='font-size:11px;'>";
 } else if (!sContent) { var sUsername = (( g_hCk['username'] && g_hCk['username'].match(/^Guest\d+/)) || ! g_hCk['username'] ) ? '' : g_hCk['username']; nVal = sUsername.charCodeAt(0) || 2; var oTime = new Date(); sTZ = -oTime.getTimezoneOffset() / 60; sContent = " <form name=login_form target=main method=POST action='http://www.myfreecams.com/mfc2/php/login.php' onSubmit=\"ProcessLoginInput();\"> <table cellpadding=0 cellspacing=0 border=0>\n <td nowrap class=login_box_td> <input type=hidden id=submit_login name=submit_login value=" + nVal + "> <input type=hidden name=uid id=login_uid value=\"" + ClientInfo.nUID + "\"> <input type=hidden name=tz id=tz value=\"" + sTZ + "\"> <input type=hidden name=ss id=ss value=\"" + screen.width + "x" + screen.height + "\"> Username:&nbsp;</td> <td nowrap class=login_box_td>" + g.container("top,input_container") + "<input type=text name=username id=username_input value='" + sUsername + "' style=float:right; onChange=ProcessLoginInput(); onKeyUp=ProcessLoginInput(); onClick=ProcessLoginInput(); onPaste=ProcessLoginInput();>" + g.container("bottom,input_container") + " </td> <td nowrap class=login_box_td> &nbsp; Password:&nbsp;</td><td nowrap class=login_box_td>" + g.container("top,input_container") + "<input type=password id=password_input value='' name=password style=float:right; >" + g.container("bottom,input_container") + " </td> <td nowrap class=login_box_td> &nbsp; <input type=submit value=Login style='height:20px;width:36px;'> </td> </table> </form>"; } SetHTML('login_box',sContent); var oEl_username_input = GetEl('username_input'); var oEl_password_input = GetEl('password_input'); if(oEl_username_input && oEl_password_input ) { if(oEl_username_input && oEl_username_input.value) oEl_password_input.focus(); else oEl_username_input.focus(); }}function ProcessLoginInput(){
 var nA = GetEl('username_input').value.charCodeAt(0) || 1; GetEl('submit_login').value = nA;}function Navigation(oCaller) { return ''; var sH = ""; if (oCaller.opener && oCaller.history.length > 0) { sH += "<a href='javascript:history.go(-1)' onMouseout=\"window.status=''; return true;\" onMouseover=\"window.status='Return to the previous page'; return true;\">Back</a> - \n"; } if (oCaller.opener) { sH += "<a href='javascript:window.close()' onMouseout=\"window.status=''; return true;\" onMouseover=\"window.status='Close this window'; return true;\">Close</a> - " + A('help') + "Technical Help</a> - " + A('contact_help') + "Contact Us</a>"; } return "<div class=footer_include style='clear:left;'>" + sH + "</div>";}function Log(sMessage){ if (! g_bDebug ) { return; } if ( g_bDebug && ! Log.bBuildFcTypeMap ) { g_hTypeMap = {}; for (sK in w) { if (sK.indexOf('FCTYPE') == 0) { g_hTypeMap[ w[sK] ] = sK; } } Log.bBuildFcTypeMap = 1; } if(! Log.sLogDump ) Log.sLogDump = ''; if(! Log.nLogCx ) Log.nLogCx = 0; if ( ! Log.oStartLogTime ) { var oTime=new Date(); Log.oStartLogTime = oTime.getTime(); }
 if(Log.sLogDump.length > 7000 ) { Log.sLogDump = Log.sLogDump.substring(5000,Log.sLogDump.length); } var sQS = top.location.search; var aLogAnd = sQS.match(/debug_and=[^&]+/g); for(sK in aLogAnd ) { if(sMessage.indexOf(aLogAnd[sK].replace(/^\w+=/,'') ) == -1 ) { return; } } var aLogNot = sQS.match(/debug_not=[^&]+/g); for(sK in aLogNot ) { if(sMessage.indexOf(aLogNot[sK].replace(/^\w+=/,'') ) > -1 ) { return; } } Log.sLogDump += sMessage + "</b><br>"; var aLogOr = sQS.match(/debug_or=[^&]+/g); var bOrMatch = false; for(sK in aLogOr ) { if(sMessage.indexOf(aLogOr[sK].replace(/^\w+=/,'') ) > -1 ) { bOrMatch = true; } } var oLogFilter = GetEl('log_filter'); if(oLogFilter && oLogFilter.value && sMessage.indexOf(oLogFilter.value ) == -1 && ! bOrMatch ) { return; } var oCurrentLogTime=new Date(); var nTotalTime = (oCurrentLogTime.getTime() - Log.oStartLogTime) / 1000; var sTotalTime = nTotalTime.toString(); while (sTotalTime.length < 7) sTotalTime = sTotalTime += ' '; var nTimeDiff = Log.oLastLogTime ? ((oCurrentLogTime.getTime() - Log.oLastLogTime) / 1000) : 0; var sTimeDiff = nTimeDiff.toString(); while (sTimeDiff.length < 7) sTimeDiff = sTimeDiff += ' '; Log.oLastLogTime = oCurrentLogTime.getTime(); if(Log.bLogPause ) { return; }
 if(window.console && window.console.log ) { window.console.log(Log.nLogCx + " [" + sTotalTime + "] [" + sTimeDiff + "] "+sMessage+"\n" ); } Log.nLogCx++;}function SimulateCommand(nUserId ){ var aTmp = new Array(); for(var nK in aTmp ) { g_oCmdQ.Queue(aTmp[nK]); } if(SimulateCommand.aSequence == undefined ) { SimulateCommand.aSequence = [ ( FCTYPE_ROOMDATA + ' ' + g_nSessionId + ' 0 ' + FCTYPE_ROOMDATA + ' ' + FCRESPONSE_NOTICE + ' {"model":' + nUserId + ',"total":500,"sofar":0,"countdown":true,"src":"add"}' ), ( FCTYPE_ROOMDATA + ' ' + g_nSessionId + ' 0 ' + FCTYPE_ROOMDATA + ' ' + FCRESPONSE_NOTICE + ' {"model":' + nUserId + ',"total":500,"sofar":200,"countdown":true,"src":"notify"}' ), ( FCTYPE_ROOMDATA + ' ' + g_nSessionId + ' 0 ' + FCTYPE_ROOMDATA + ' ' + FCRESPONSE_NOTICE + ' {"model":' + nUserId + ',"total":500,"sofar":400,"countdown":true,"src":"notify"}' ), ( FCTYPE_ROOMDATA + ' ' + g_nSessionId + ' 0 ' + FCTYPE_ROOMDATA + ' ' + FCRESPONSE_NOTICE + ' {"model":' + nUserId + ',"total":1000,"sofar":400,"countdown":true,"src":"adjust","topic":"abc123"}' ), ( FCTYPE_ROOMDATA + ' ' + g_nSessionId + ' 0 ' + FCTYPE_ROOMDATA + ' ' + FCRESPONSE_NOTICE + ' {"model":' + nUserId + ',"total":1000,"sofar":600,"countdown":true,"src":"notify"}' ), ( FCTYPE_ROOMDATA + ' ' + g_nSessionId + ' 0 ' + FCTYPE_ROOMDATA + ' ' + FCRESPONSE_NOTICE + ' {"model":' + nUserId + ',"total":1000,"sofar":800,"countdown":true,"src":"notify"}' ), ( FCTYPE_ROOMDATA + ' ' + g_nSessionId + ' 0 ' + FCTYPE_ROOMDATA + ' ' + FCRESPONSE_NOTICE + ' {"model":' + nUserId + ',"total":1000,"sofar":1000,"countdown":false,"src":"notify"}' ), ]; } if(SimulateCommand.aSequence.length > 0 ) { g_oCmdQ.Queue(SimulateCommand.aSequence.shift() );
 setTimeout(function() { SimulateCommand(nUserId ); }, 5000 ); }}function ParseCommand(sCommand){ g_oCmdQ.Queue(sCommand);}function ParseLine(sCommand){ if ( sCommand == null || sCommand.length < 2 ) { return; } var aPacket = sCommand.split(' ', 5); var nType = parseInt(aPacket[0] ); var nFrom = aPacket[1]; var nTo = aPacket[2]; var nArg1 = aPacket[3]; var nArg2 = aPacket[4]; var sPayload = sCommand.replace(/^\S+ \S+ \S+ \S+ \S+ ?/, ''); if(g_bDebug ) { if(nType == FCTYPE_NULL ) 1; else if(g_hTypeMap && g_hTypeMap[ nType ] ) Log("RX: " + MfcStringUtilities.char_padding(g_hTypeMap[ nType ],20,' ','right') + " " + decodeURIComponent(sCommand) ); else Log("RX: " + MfcStringUtilities.char_padding(('UNKNOWN TYPE: '+ nType) ,20,' ','right') + " " + decodeURIComponent(sCommand) ); } var fUpdateHash = true; if ( nType == FCTYPE_PMESG && nArg1 == FCCHAN_OLDMSG ) { fUpdateHash = false; } var fHistorical = false; if ( nType == FCTYPE_CMESG && nArg2 & FCCHAN_OLDMSG ) { fHistorical = true; 
 } var nUserId = 0; if(sPayload && ( ( nType == FCTYPE_DETAILS && nFrom != FCTYPE_TOKENINC ) || nType == FCTYPE_ADDFRIEND || nType == FCTYPE_ADDIGNORE || nType == FCTYPE_SESSIONSTATE || nType == FCTYPE_CMESG || nType == FCTYPE_PMESG || nType == FCTYPE_TXPROFILE || nType == FCTYPE_USERNAMELOOKUP || nType == FCTYPE_MYCAMSTATE || ( nType == FCTYPE_ROOMHELPER && nArg2 >= 100 ) || ( nType == FCTYPE_JOINCHAN && nArg2 != FCCHAN_PART ) ) ) { nUserId = StoreUserHash(sPayload, { update_hash: fUpdateHash, historical: fHistorical } ) || 0; } switch(nType ) { case FCTYPE_RECOMMEND: { Recommend.Response(sPayload ); } break; case FCTYPE_UEOPT: { UserExtensions.Receive(nArg1, nArg2, sPayload ); } break; case FCTYPE_ADDFRIENDREQ: { if(w.FCRESPONSE_ERROR == nArg1 ) { alert("You have reached the maximum number of friends allowed. Please click Manage Friends and remove some friends before adding more."); } } break; case FCTYPE_STATUSGRP: { nUserId = GetRoomOwnerId(nArg1 );
 g_hGroupShowInitiators[ nUserId ] = sPayload.split(","); var oPlayerWindow; if(oPlayerWindow = WindowHandle.Get('player', nArg1 ) ) { oPlayerWindow.GroupShow.Status(sPayload ); } } break; case FCTYPE_REQUESTGRP: { var nModelId = GetRoomOwnerId(nTo ); var nType = nArg1; var nCode = nArg2; if(nType == FCRESPONSE_ERROR ) { var oPlayerWindow; if(oPlayerWindow = WindowHandle.Get('player', nModelId ) ) { oPlayerWindow.GroupShow.Error(nArg1, nArg2 ); } } } break; case FCTYPE_GROUPCHAT: { nUserId = GetRoomOwnerId(nArg1 ); var nGroupSessId = nArg2; var nPubChan = PublicChannel(nUserId); var nGroupChan = SessionChannel(nUserId); var oPlayerWindow; if(oPlayerWindow = WindowHandle.Get('player', nUserId ) ) { oPlayerWindow.FcAcceptGroupShow(nUserId, nPubChan, nGroupChan, nGroupSessId ); } for(var nLoungeId in g_hLoungeIds ) { var oPlayerWindow; if(oPlayerWindow = WindowHandle.Get('player', nLoungeId ) ) { if(oPlayerWindow.Lounge.nModelId == nUserId ) { oPlayerWindow.FcAcceptGroupShow(nUserId, nPubChan, nGroupChan, nGroupSessId ); } }
 } if(g_hoPMWindows[nUserId] && g_hoPMWindows[nUserId]['window'] ) { try { g_hoPMWindows[nUserId]['window'].FcAcceptGroupShow(nUserId, nPubChan, nGroupChan, nGroupSessId); } catch(oError) { Log("Try Catch Failure #8: " + oError.description ); } } } break; case FCTYPE_CLOSEGRP: { var oPlayerWindow; if(oPlayerWindow = WindowHandle.Get('player', nArg1 ) ) { oPlayerWindow.GroupShow.Shutdown(nArg2); } } break; case FCTYPE_REQUESTPVT: { if(nArg2 == FCRESPONSE_ERROR ) alert("Sorry, the model was unavailable or unable to accept your request for a private session."); } break; case FCTYPE_PMHISTORY: { var oPMWindow; if(oPMWindow = WindowHandle.Get('pm',nArg1) ) oPMWindow.PMHistory.FCHandler(nArg1, nArg2, sPayload ); } break; case FCTYPE_SERVERREFRESH: { FcServerRefresh.Receive(nArg1, nArg2, sPayload ); } break; case FCTYPE_PRIVACY: { g_hSelf['privacy_state'] = nArg2; } break;
 case FCTYPE_SETTING: { FcSetting(nArg1, nArg2, sPayload); } break; case FCTYPE_UCR: { UCR.Receive(nArg1, nArg2, sPayload); } break; case FCTYPE_BWSTATS: { g_hUsers[ nTo ] = g_hUsers[ nTo ] || {}; aGroupedStats = sPayload.split('|'); for(var nK=0; nK < aGroupedStats.length; nK++ ) { aStats = aGroupedStats[nK].split(','); g_hUsers[ aStats[0] ] = g_hUsers[ aStats[0] ] || {}; g_hUsers[ aStats[0] ]['kbps'] = aStats[1]; g_hUsers[ aStats[0] ]['ping'] = aStats[2]; } } break; case FCTYPE_RULEVIOLATION: { if(sPayload.indexOf('{') > -1 || sPayload.indexOf('}') > -1 || sPayload.indexOf(':') > -1 || sPayload.indexOf('"') > -1 || ! sPayload.match(/\w/) || ! sPayload.match(/ /) ) { 1; } else { Load('rule_violation',{ violation: sPayload }); g_hSelf['rule_violation'] = 1; } } break; case FCTYPE_HIDEUSERS:
 { if (sPayload) { var aList = sPayload.split(','); for(var nK=0; nK < aList.length; nK++ ) { g_hUsers[ aList[nK] ] = g_hUsers[ aList[nK] ] || {}; g_hUsers[ aList[nK] ]['hidden'] = 1; } } } break; case FCTYPE_INBOX: { nArg1 = parseInt(nArg1); if(nArg1 >= 0 && nArg1 < 5000 ) { g_hSelf['inbox_count'] = nArg1; InboxAlert(); } } break; case FCTYPE_MODELGROUP: { if(nArg2 == 1 ) { g_bFCTYPE_MODELGROUP_Received = true; } if(g_bFCTYPE_DETAILS_Received && g_bFCTYPE_MODELGROUP_Received && ! g_bLoginDone ) { g_bLoginDone = true; PostLoginProcedures(); } } break; case FCTYPE_SLAVEVSHARE: { if(nArg1 > 0 ) SharedVideoHandler(nArg1, nArg2, sPayload ); else SharedVideoHandler_Batch(nArg1, nArg2, sPayload ); } break; case FCTYPE_NEWSITEM:
 { NewsItem(sPayload); } break; case FCTYPE_GUESTCOUNT: { FcGuestCount(nTo,nArg1); } break; case FCTYPE_ROOMDATA: { RoomData.Receive(nArg1, nArg2, sPayload ); } break; case FCTYPE_ROOMHELPER: { RoomHelper_TopHandlers.Receive(nArg1, nArg2, sPayload ); } break; case FCTYPE_STARTVOYEUR: { StartVoyeur(nArg1, nArg2); } break; case FCTYPE_NULL: { if(nArg1 > 0 ) { g_nNullTimeArg = parseInt(nArg1) - 150; if(g_nNullTimeArg < 0 ) { g_nNullTimeArg = 0; } } if(g_nNullTimeArg && g_nNullTimeArg_Initial == -1 ) { g_nNullTimeArg_Initial = g_nNullTimeArg; } if(! g_bLoginDone || g_nNullTimeArg ) { for(var sK in g_hoPlayerWindows ) { var oPlayerWindow; if(oPlayerWindow = WindowHandle.Get('player', sK ) ) { oPlayerWindow.OnlineBroadcasterList.Refresh('force'); } } }
 } break; case FCTYPE_LOGIN: { FcLogin(nTo, nArg1, nArg2, sPayload ); } break; case FCTYPE_ZBAN: { var hBan = ParseJSON(decodeURIComponent(sPayload ) ); if(typeof(hBan ) != 'object' || ! hBan.event || hBan.event.sid != g_nSessionId ) { return; } if(g_hoPlayerWindows[ hBan.event.model ] ) { if(oPlayerWindow = WindowHandle.Get('player', hBan.event.model ) ) { oPlayerWindow.Banned(); } } else if(g_hWindows[ hBan.event.model ] ) { g_hWindows[ hBan.event.model ].window.alert("The model has temporarily banned you from her room. Your ban will be lifted after a short period of time and you may still access other rooms on our site.\n\n\Please remember to be polite to our models and users to avoid being banned in the future.\n\n If you are a guest, it's possible that the model banned you by accident. Please login or register for your free account to avoid being banned. Thanks, and please contact us if you have any problems."); if(g_hWindows[ hBan.event.model ].window.opener ) g_hWindows[ hBan.event.model ].window.close(); else if(g_hWindows[ hBan.event.model ].window.LoadPlayer ) g_hWindows[ hBan.event.model ].window.LoadPlayer("homepage"); delete g_hWindows[ hBan.event.model ]; } } break; case FCTYPE_BANCHAN: { if (nFrom == 0 && nTo == 0 && nArg1 == 0 && nArg2 == 0) { top.location = "/redirection.html?chat_block=1";
 return; } var nRoomOwnerId = GetRoomOwnerId(nTo); if(g_hoPlayerWindows[nRoomOwnerId] ) { if(oPlayerWindow = WindowHandle.Get('player', nRoomOwnerId ) ) { oPlayerWindow.Banned(); } } else if(g_hWindows[nTo] ) { g_hWindows[nTo].window.alert("The model has temporarily banned you from her room. Your ban will be lifted after a short period of time and you may still access other rooms on our site.\n\n\Please remember to be polite to our models and users to avoid being banned in the future.\n\n If you are a guest, it's possible that the model banned you by accident. Please login or register for your free account to avoid being banned. Thanks, and please contact us if you have any problems."); if(g_hWindows[nTo].window.opener ) g_hWindows[nTo].window.close(); else if(g_hWindows[nTo].window.LoadPlayer ) g_hWindows[nTo].window.LoadPlayer("homepage"); delete g_hWindows[nTo]; } } break; case FCTYPE_ENDSESSION: { var nModelId = nArg1; var nSessionType = nArg2; FcEndSessions(nModelId, nSessionType ); } break; case FCTYPE_TXPROFILE: { var nClientSessionsId = nTo; var nModelId = nArg1; var nBitRate = nArg2; FcTxProfile(nModelId,nBitRate,''); } break; case FCTYPE_CONNECTING: { Log('** CONNECTING *** g_nConnectingMode : ' + nType + ', count -3'); g_nConnectingMode = nType; g_nBroadcasterCount = -3; 
 for(var sK in g_hoPlayerWindows ) { var oPlayerWindow; if(oPlayerWindow = WindowHandle.Get('player', sK ) ) { oPlayerWindow.OnlineBroadcasterList.Refresh('force'); } } if (window.frames['ajaxframe']) { zgw_Server('connecting'); } } break; case FCTYPE_ZGWINVALID: { zgw_Error('Invalid Session'); } break; case FCTYPE_CONNECTED: { Log('** CONNECTING *** g_nConnectingMode : ' + nType + ', count -2'); g_nConnectingMode = nType; g_nBroadcasterCount = -2; for (sK in g_hUsers) { if (g_hUsers[sK]) { g_hUsers[sK]['state'] = FCVIDEO_OFFLINE; } } if (g_sConnectionMode == 'ajax') { sUser = g_hCk['username'] || 'guest'; sPass = g_hCk['passcode'] || 'guest'; if (sPass == 'guest' || sPass == 'undefined') { sUser = sPass = 'guest'; } zgw_TxLogin(sPayload, sUser, sPass); } for(var sK in g_hWindows ) { if(g_hWindows[sK].window && g_hWindows[sK].window.OnlineBroadcasterList ) {
 g_hWindows[sK].window.OnlineBroadcasterList.Refresh('force'); } } } break; case FCTYPE_LOGOUT: { Logout(); alert('You have logged in from a different location, this connection has logged out and will log back in as a guest.'); } break; case FCTYPE_DISCONNECTED: { g_nConnectingMode = nType; for(var sK in g_hWindows ) { if(g_hWindows[sK].window && g_hWindows[sK].window.OnlineBroadcasterList ) { g_hWindows[sK].window.OnlineBroadcasterList.Refresh('force'); } } if(g_fConnected == true ) { g_hUsers = {}; UCR.hRooms = {}; SharedVideoHandler.hSharedVideo = {}; g_nBroadcasterCount = -3; LoadPersonalMenu('disconnected'); zgw_Disconnect(); FcAddFriend.FriendReset(); FcSessionState.ModelReset(); if (window.frames['main'].location.href.match(/player.html/) ) Load('homepage'); for(var sK in g_hWindows ) { if(g_hWindows[sK].window.LoadPlayer && g_hWindows[sK].window.opener ) {
 g_hWindows[sK].window.close(); delete g_hWindows[sK]; } } } } break; case FCTYPE_SHUTDOWN: { g_nConnectingMode = t.FCTYPE_DISCONNECTED; } break; case FCTYPE_ADDFRIEND: { FcAddFriend(nArg1,nArg2); } break; case FCTYPE_TAGS: { FcTags(sPayload ); } break; case FCTYPE_METRICS: { FcMetrics(nTo, nArg1, nArg2, sPayload); } break; case FCTYPE_ADDIGNORE: { FcAddIgnore(nArg1,nArg2); } break; case FCTYPE_ANNOUNCE: { var sMessage = decodeURIComponent(sPayload ); var hMessage = ParseJSON(decodeURIComponent(sMessage ) ); var oPlayerWindow; if(hMessage ) for (var sK in g_hoPlayerWindows) if(oPlayerWindow = WindowHandle.Get('player', sK ) ) oPlayerWindow.ChatAnnounce(hMessage['msg'] ); }
 break; case FCTYPE_MYCAMSTATE: { if (nArg1 == FCCHAN_JOIN) { g_hUsers[nUserId]['webcam_viewer'] = 1; } else if (nArg1 == FCCHAN_PART) { g_hUsers[nUserId]['webcam_viewer'] = 0; } LoadViewers(); } break; case FCTYPE_MYWEBCAM: { MyWebcam.FcType_MyWebcam(nArg1, nArg2 ); } break; case FCTYPE_SESSIONSTATE: { if(typeof(g_hGroupShowInitiators[nArg2]) == 'object' && g_hGroupShowInitiators[nArg2].length ) { var oPlayerWindow; if(oPlayerWindow = WindowHandle.Get('player', nArg2 ) ) { oPlayerWindow.GroupShow.UpdateCounter(); } } if(g_hUsers[ nArg2 ] && g_hUsers[ nArg2 ]['access_level'] == 4 && nArg1 > 90 && g_hUsers[ nArg2 ]['model_history'] ) { ModelHistory.Render(); } if(FcAddFriend.bFriendsLoaded && g_hUsers[ nUserId ] && g_hUsers[ nUserId ]['friend'] ) { LoadFriends(); }
 FcSessionState(nFrom, nArg1, nArg2 == 0 ? nUserId : nArg2); } break; case FCTYPE_TOKENINC: { if(sPayload ) { TipReceived(sPayload ); } else { TokenInc(nArg1); } } break; case FCTYPE_DETAILS: { if (g_nSessionId == nTo) { if (nFrom == FCTYPE_TOKENINC) { var hTokenSessDetail = ParseJSON(decodeURIComponent(sPayload ) ); if(IsTokenSession(hTokenSessDetail.type ) ) { var bActiveTokenSession = false; if(t.g_hoPlayerWindows[ hTokenSessDetail.model ] && IsTokenSession(t.g_hoPlayerWindows[ hTokenSessDetail.model ].presentation_state ) ) { bActiveTokenSession = true; } if(t.g_hoPMWindows[ hTokenSessDetail.model ] && IsTokenSession(t.g_hoPMWindows[ hTokenSessDetail.model ].presentation_state ) ) { bActiveTokenSession = true; } if(! bActiveTokenSession && 0 ) {
 g_oReportBack = new MfcReportBack('FcDetails TokenSess Error'); g_oReportBack.Send('not active on client' , decodeURIComponent(sPayload ) ); var nModelIdentifier; if(g_hUsers[hTokenSessDetail.model] && g_hUsers[hTokenSessDetail.model].sessionid ) nModelIdentifier = g_hUsers[hTokenSessDetail.model].sessionid; else nModelIdentifier = hTokenSessDetail.model; TxCmd(FCTYPE_ENDSESSION, g_nSessionId, 0, nModelIdentifier, 0, 0, null); } } } g_hSelf['tokens'] = ( nArg1 > 2147483647 ) ? ( ( 4294967297 - nArg1 ) * -1 ) : nArg1; g_hSelf['rewards_points'] = ( nArg2 > 2147483647 ) ? ( ( 4294967296 - nArg2 ) * -1 ) : nArg2; TokenInc(g_hSelf['tokens'] ); g_bFCTYPE_DETAILS_Received = true; if(g_bFCTYPE_MODELGROUP_Received && ! g_bLoginDone ) { g_bLoginDone = true; PostLoginProcedures(); } } FcDetails(); } break; case FCTYPE_USERNAMELOOKUP: { FcUsernameLookup.Receiver(parseInt(nArg1), nArg2, ( nArg2 != FCRESPONSE_ERROR ? g_hUsers[ nFrom ] : null ) ); } break; case FCTYPE_PMESG: { var nPmStamp = 0; hArgs = sPayload.split(':'); if(hArgs.length > 8 ) { nPmStamp = hArgs[8].split('/')[0];
 } var sMessage = decodeURIComponent(sPayload ); FcPrivateMessage(nArg1, nArg2, sMessage, nUserId, nPmStamp, nFrom, nTo ); } break; case FCTYPE_CMESG: { var sMessage = decodeURIComponent(sPayload ); FcChannelMessage(nFrom, nTo, nArg1, nArg2, nUserId, sMessage ); } break; case FCTYPE_LISTCHAN: { nPlayerOwnerId = GetRoomOwnerId(nArg2 ); var oPlayerWindow; if(oPlayerWindow = WindowHandle.Get('player', nPlayerOwnerId ) ) { oPlayerWindow.FcListChan(); } } break; case FCTYPE_JOINCHAN: { nPlayerOwnerId = GetRoomOwnerId(( nArg1 == FCRESPONSE_ERROR ) ? nTo : nArg1 ); if(nUserId != g_hSelf.user_id ) { if(! g_hUsers[ nUserId ] ) { g_hUsers[ nUserId ] = {}; } if(! g_hUsers[ nUserId ].rooms ) { g_hUsers[ nUserId ].rooms = {}; } if(typeof g_hUsers[ nUserId ].rooms != 'object' ) { g_hUsers[ nUserId ].rooms = {}; } g_hUsers[nUserId].rooms[ nPlayerOwnerId ] = 1; } var oPlayerWindow; if(oPlayerWindow = WindowHandle.Get('player', nPlayerOwnerId ) ) { if(oPlayerWindow && oPlayerWindow.FcJoinChan ) { var sMessage = decodeURIComponent(sPayload ); oPlayerWindow.FcJoinChan(nFrom, nTo, nArg1, nArg2, sMessage, nUserId, nPlayerOwnerId );
 } } } break; case FCTYPE_ACCEPTPVT: { FcAcceptPrivate(nArg1, nArg2, nUserId ); } break; case FCTYPE_CHATFLASH: { var nUserId = nArg1; var oEl; if(g_hoPMWindows[nUserId] && g_hoPMWindows[nUserId]['window'] ) { try { g_hoPMWindows[nUserId]['window'].ChatFlashReceive(); } catch(oError) { Log("Try Catch Failure #9: " + oError.description ); } } if(oEl = t.GetEl('online_friend_' + nUserId ) ) { oEl.style.backgroundColor = "rgb(255, 255, 0)"; setTimeout(function() { if(oEl.style.backgroundColor=='rgb(255, 255, 0)' ) { oEl.style.backgroundColor = ''; } }, 5000 ); } } break; }}var FcUsernameLookup = { hRequestPool: {}, fCallback: null};FcUsernameLookup.Query = function(sUsername, fCallback, hContext ){ sUsername = sUsername || sUsername; FcUsernameLookup.fCallback = fCallback || function(){}; hContext = hContext || {}; var oNow = new Date(); var nNow = oNow.getTime(); var nReqId = Math.abs(MfcCrc32.prototype.string(sUsername + nNow + JSON.stringify(hContext) ) ); FcUsernameLookup.hRequestPool[ nReqId ] = { sUsername: sUsername, fCallback: fCallback, hContext: hContext };
 TxCmd(FCTYPE_USERNAMELOOKUP, 0, 0, nReqId, 0 , sUsername );};FcUsernameLookup.Receiver = function(nReqId, nErrCode, hUser ){ if(nErrCode == FCRESPONSE_SHUTOFF ) { nErrCode = FCRESPONSE_ERROR; hUser = {}; } var hReq = FcUsernameLookup.hRequestPool[ nReqId ]; if(hReq && hReq.fCallback && typeof(hReq.fCallback) == 'function' ) { hReq.fCallback(nErrCode, hReq.sUsername, hUser, hReq.hContext ); }};var JoinRoomByHash = { nWaitTimer: 0, nTries: 0, nMaxTries: 20};JoinRoomByHash.Request = function(){ if(g_hSelf.access_level > 0 ) UCR.Request(); FcUsernameLookup.Query(g_sHash, JoinRoomByHash.Callback );}; JoinRoomByHash.Callback = function(nErrCode, sUsername, hUser, hContext ){ if(hUser && hUser.user_id ) { JoinRoomByHash.Receive(hUser.user_id ); }};JoinRoomByHash.Receive = function(nUserId ){ if(! UCR.bInitialLoadDone && JoinRoomByHash.nTries++ < JoinRoomByHash.nMaxTries ) { clearTimeout(JoinRoomByHash.nWaitTimer ); JoinRoomByHash.nWaitTimer = setTimeout(function() { JoinRoomByHash.Receive(nUserId ); }, 100 ); return; } JoinRoomByHash.nTries = 0;
 if(g_hUsers[nUserId].username && g_hUsers[nUserId].access_level == 4 ) { Load('player',{ broadcaster_id: nUserId }); } else if(UCR.hRooms[ PublicChannel(nUserId ) ] ) { Load('player',{ broadcaster_id: nUserId }); }};var UserExtensions = { hExtNamesToIds: { model_tip_minimum: { id: 1, type: 'NUM', default_value: 0 }, ucr_create_block: { id: 2, type: 'NUM', default_value: 0 }, allow_user_images: { id: 3, type: 'NUM', default_value: 1 }, toplist_excluded: { id: 4, type: 'NUM', default_value: 0 }, show_personal_menu: { id: 5, type: 'NUM', default_value: 1 }, hd_webcams_first: { id: 7, type: 'NUM', default_value: 0 }, show_room_muting: { id: 10, type: 'NUM', default_value: 0 }, show_room_counts: { id: 11, type: 'NUM', default_value: 0 }, top_header_id: { id: 12, type: 'NUM', default_value: 0 }, chat_bg_color: { id: 13, type: 'STRING', default_value: '' }, show_header: { id: 17, type: 'NUM', default_value: 1 }, show_main_menu: { id: 18, type: 'NUM', default_value: 1 }, lounge_video_cycle_mode: { id: 19, type: 'STRING', default_value: 'all_available' }, lounge_video_cycle_interval: { id: 20, type: 'NUM', default_value: 60 }, model_list_refresh_seconds: { id: 21, type: 'NUM', default_value: 30 }, single_page_scroll: { id: 22, type: 'NUM', default_value: 0 }, show_online_friends: { id: 23, type: 'NUM', default_value: 1 }, extra_menu_mode: { id: 24, type: 'STRING', default_value: '' }, window_mode: { id: 25, type: 'NUM', default_value: 0 }, personal_menu_list_height: { id: 26, type: 'NUM', default_value: -1 }, online_friends_list_height: { id: 27, type: 'NUM', default_value: -1 }, offline_friends_list_height: { id: 28, type: 'NUM', default_value: -1 }, model_list_mode: { id: 29, type: 'STRING', default_value: 'page' }, online_model_pattern_mobile: { id: 32, type: 'NUM', default_value: 6 }, single_page_website_mobile: { id: 33, type: 'NUM', default_value: 1 }, advanced_chat_commands: { id: 34, type: 'NUM', default_value: 0 }, display_pm_inline: { id: 37, type: 'NUM', default_value: 0 }, diplay_whisper_inline: { id: 38, type: 'NUM', default_value: 0 }, new_models_first: { id: 39, type: 'NUM', default_value: 0 }, show_text_list_link: { id: 40, type: 'NUM', default_value: 0 }, auto_next_mode: { id: 41, type: 'STRING', default_value: 'all_available' }, auto_next_seconds: { id: 42, type: 'NUM', default_value: 0 }, online_bookmarked_models_first: { id: 43, type: 'NUM', default_value: 1 },
 show_recommendations_first: { id: 44, type: 'NUM', default_value: 1 }, new_model_days: { id: 46, type: 'NUM', default_value: 7 }, model_list_mre_limit: { id: 47, type: 'NUM', default_value: 10 }, model_list_popular_limit: { id: 48, type: 'NUM', default_value: 10 }, show_popular_rooms_first: { id: 49, type: 'NUM', default_value: 0 }, show_model_history_first: { id: 50, type: 'NUM', default_value: 0 }, model_list_history_limit: { id: 51, type: 'NUM', default_value: 10 }, model_list_icon_bitmask: { id: 53, type: 'NUM', default_value: 3 }, model_list_show_topic: { id: 54, type: 'NUM', default_value: 0 }, hide_model_groups_bitmask: { id: 55, type: 'NUM', default_value: 1 }, hide_video_lounge: { id: 56, type: 'NUM', default_value: 0 }, hide_video_model_rooms: { id: 57, type: 'NUM', default_value: 0 }, model_list_missmfc_first: { id: 58, type: 'NUM', default_value: 0 }, model_list_missmfc_limit: { id: 59, type: 'NUM', default_value: 100 }, omit_camscore_on_profile: { id: 60, type: 'NUM', default_value: 0 }, omit_camscore_in_menu: { id: 61, type: 'NUM', default_value: 0 }, highlight_friends_chat: { id: 62, type: 'NUM', default_value: 0 }, night_mode_color: { id: 66, type: 'STRING', default_value: '' } }, hTypes: { NUM: 0, STRING: 1, DATA: 2, STAMP: 3, REMOVE: 32 }, bInitialized: false};UserExtensions.Initialize = function(){ if(( g_hSelf.access_level == 0 || g_hSelf.user_id > 15149867 ) && ! g_UA.tablet && ! g_UA.mobile ) { UserExtensions.hExtNamesToIds['model_list_mode'].default_value = 'scroll'; } UserExtensions.bInitialized = true;};UserExtensions.Receive = function(sExtensionId, nExtensionType, sPayload ){ Log('UserExtensions.Receive: ' + UserExtensions.GetNameById(sExtensionId ) + '=' + sPayload ); if(! UserExtensions.bInitialized ) { UserExtensions.Initialize(); } var sExtensionName = UserExtensions.GetNameById(sExtensionId ); if(nExtensionType == USEREXT_NUM ) { g_hSelf[ sExtensionName ] = parseInt(sPayload); } else { g_hSelf[ sExtensionName ] = sPayload; } if(( g_UA.tablet || g_UA.mobile ) && sExtensionId == 'online_model_pattern_mobile' )
 g_hSelf.online_model_pattern = sPayload; if(sExtensionName == 'show_main_menu' ) { TogglePersonalMenu.Start({ render_only:true }); }};UserExtensions.Write = function(sExtName, sValue ){ if(! UserExtensions.bInitialized ) { UserExtensions.Initialize(); } g_hSelf[ sExtName ] = typeof sValue == 'string' && sValue.match(/^\d+$/) ? parseInt(sValue ) : sValue; if(! UserExtensions.hExtNamesToIds[ sExtName ] ) { return; } Log('UserExtensions.Write: ' + sExtName + '=' + sValue ); if(typeof sValue != 'string' ) { sValue = sValue.toString(); } var bDefault = ( UserExtensions.hExtNamesToIds[ sExtName ].default_value == sValue ) ? true : false; if(bDefault ) { TxCmd(FCTYPE_UEOPT, g_nSessionId, 0, UserExtensions.hExtNamesToIds[sExtName].id, UserExtensions.hTypes.REMOVE ); } else { TxCmd(FCTYPE_UEOPT, g_nSessionId, 0, UserExtensions.hExtNamesToIds[sExtName].id, UserExtensions.hTypes[ UserExtensions.hExtNamesToIds[sExtName].type ], sValue ); }};UserExtensions.GetNameById = function(nId ){ for(var sK in UserExtensions.hExtNamesToIds ) if(UserExtensions.hExtNamesToIds[ sK ].id == nId ) return sK;};
var RefreshServerConfig = { nInterval: 1800000, oReq: createRequestObject(), nTimer: 0};RefreshServerConfig.Poll = function(){ clearTimeout(RefreshServerConfig.nTimer ); RefreshServerConfig.nTimer = setTimeout(RefreshServerConfig.Request, RefreshServerConfig.nInterval );};RefreshServerConfig.Request = function(){ clearTimeout(RefreshServerConfig.nTimer ); var sUrl = '../data/serverconfig.js?' + Math.random(); RefreshServerConfig.oReq.open('get', sUrl ); RefreshServerConfig.oReq.onreadystatechange = RefreshServerConfig.Response; RefreshServerConfig.oReq.send();};RefreshServerConfig.Response = function(){ if ( RefreshServerConfig.oReq.readyState !== 4 ) { return; } var hNewConfig = ParseJSON(RefreshServerConfig.oReq.responseText ); if(hNewConfig && isArray(hNewConfig.chat_servers) && isArray(hNewConfig.video_servers) && hNewConfig.chat_servers.length > 0 && hNewConfig.video_servers.length > 0 ) { w.hServerConfig = hNewConfig; Log('RefreshServerConfig.Response reloaded hServerConfig from serverconfig.js'); } else { Log('RefreshServerConfig.Response did not see a valid configuration file: ' + RefreshServerConfig.oReq.responseText ); } RefreshServerConfig.Poll();};RefreshServerConfig.ForceRefresh = function(){ nScatterSeconds = Math.round(30 * Math.random() ); setTimeout(RefreshServerConfig.Request, nScatterSeconds );
};var MyWebcam = { sStatus: '', sDisplayedStatus: ''};MyWebcam.FcType_MyWebcam = function(nBroadcastingVideo, nUserId ){ if ( ! g_hUsers[nUserId] ) { return; } g_hUsers[nUserId]['broadcasting_video'] = nBroadcastingVideo; LoadPersonalMenu(); for (sK in g_hoPMWindows) { if(sK == nUserId && g_hoPMWindows[sK]['window'] && g_hoPMWindows[sK]['window'].document ) { try { g_hoPMWindows[sK]['window'].ConfigureUserControls(); if (nBroadcastingVideo > 0) { g_hoPMWindows[sK]['window'].LoadVideoMenu(); g_hoPMWindows[sK]['window'].LoadVideo(); } else { g_hoPMWindows[sK]['window'].LoadVideo('pre_unload'); } } catch(oError) { Log("Try Catch Failure #4: " + oError.description ); } } } var bMyWebcam_in_UCR = false; for(var sK in g_hoPlayerWindows ) { var oPlayerWindow; if(oPlayerWindow = WindowHandle.Get('player', sK ) ) { oPlayerWindow.FcCamState(nUserId ); if(oPlayerWindow.UCRPlayer.bIsLoaded && oPlayerWindow.UCRPlayer.hRoom.video == 1 && oPlayerWindow.UCRPlayer.hRoom.originator_id == g_hSelf.user_id )
 { bMyWebcam_in_UCR = true; } } } if(nUserId == g_hSelf['user_id'] ) { if(bMyWebcam_in_UCR ) MyWebcam.sStatus = 'webcam_in_ucr'; else if(nBroadcastingVideo > 0 ) MyWebcam.sStatus = 'running'; else MyWebcam.sStatus = ''; } LoadViewers(); MyWebcam.DisplayStatus();};MyWebcam.DisplayStatus = function(){ var sControl; if(MyWebcam.sStatus == 'webcam_in_ucr' ) sControl = "Broadcasting"; else if(MyWebcam.sStatus == 'running' ) sControl = A("broadcast",{ session_id: g_nSessionId }) + "<b>Webcam Running</a>"; else sControl = A("broadcast",{ session_id: g_nSessionId }) + "Start My Webcam</a>"; SetHTML('broadcast_status',sControl); var sIcon; if(MyWebcam.sStatus != 'webcam_in_ucr' ) sIcon = A("broadcast",{ session_id: g_nSessionId }); else sIcon = ''; SetHTML('broadcast_status_icon',sIcon,{ 'force': true });};var WindowHandle = {};WindowHandle.Get = function(sType, nMixedId ){ var nUserId; if(sType == 'player' ) { var nUserId = ( nMixedId > 100000000 ) ? GetRoomOwnerId(nMixedId) : nMixedId; var bSuccess = false; if(g_UA.IE ) { try { bSuccess = WindowHandle.Test(g_hoPlayerWindows, nUserId ); } catch(oError) { } } else {
 bSuccess = WindowHandle.Test(g_hoPlayerWindows, nUserId ); } if(bSuccess ) { return g_hoPlayerWindows[nUserId]['window']; } else { return false; } } else if(sType == 'pm' ) { var nUserId = nMixedId; var bSuccess = false; if(g_UA.IE ) { try { bSuccess = WindowHandle.Test(g_hoPMWindows, nUserId ); } catch(oError) { } } else { bSuccess = WindowHandle.Test(g_hoPMWindows, nUserId ); } if(bSuccess ) { return g_hoPMWindows[nUserId]['window']; } else { return false; } }};WindowHandle.CallEach = function(sType, fCallback ){ var aWindows; if(sType == 'player' ) { aWindows = g_hoPlayerWindows; } else if(sType == 'pm' ) { aWindows = g_hoPMWindows; } for(var sK in aWindows ) { var oHandle; if(oHandle = WindowHandle.Get(sType , sK ) ) { fCallback(oHandle ); } }
};WindowHandle.Test = function(hWindows, nWindowId ){ if(hWindows[nWindowId] && hWindows[nWindowId]['window'] && hWindows[nWindowId]['window'].HandleTest && hWindows[nWindowId]['window'].HandleTest() ) { if(hWindows[nWindowId]['window'].HandleTest() ) { return true; } } return false;};function FcGuestCount(nChannelId, nGuestCount ){ var oPlayerWindow; if(oPlayerWindow = WindowHandle.Get('player', nChannelId ) ) { oPlayerWindow.PeopleBox.SetGuestCount(nGuestCount ); }}function FcAcceptPrivate(nArg1, nArg2, nUserId ){ var nUserId = GetRoomOwnerId(nArg1 ); var nPrvSessId = nArg2; var nPubChan = PublicChannel(nUserId); var nPrvChan = SessionChannel(nUserId); var bNoPMWindow = 0; var bNoPlayerWindow = 0; var oPlayerWindow; if(oPlayerWindow = WindowHandle.Get('player', nUserId )) oPlayerWindow.FcAcceptPrivate(nUserId, nPubChan, nPrvChan, nPrvSessId); else bNoPMWindow = 1; var oPMWindow; if(oPMWindow = WindowHandle.Get('pm', nUserId ) ) { oPMWindow.FcAcceptPrivate(nUserId, nPubChan, nPrvChan, nPrvSessId); } else { bNoPlayerWindow = 1; } if(bNoPMWindow
 && bNoPlayerWindow && g_hUsers[nUserId] && g_hUsers[nUserId].sessionid ) { setTimeout(function(){ TxCmd(FCTYPE_ENDSESSION, g_nSessionId, 0, g_hUsers[nUserId].sessionid, 0, 0, null); },2000); }}function RoomTopicHandler(sTopic, nPlayerOwnerId ){ var hTopic = ParseJSON(decodeURIComponent(sTopic ) ); hTopic.msg = hTopic.msg.replace(/<[^>]*>/g,''); if(hTopic && ( oPlayerWindow = WindowHandle.Get('player', nPlayerOwnerId ) ) ) { oPlayerWindow.RoomTopic.set_topic(hTopic.msg ); }}function TokenInc(nTokens ){ g_hSelf['tokens'] = nTokens; if(g_hSelf['access_level'] == 1 && nTokens > 0 ) { g_hSelf['access_level'] = 2; ResetUserState(); } for ( nWindowId in g_hoPlayerWindows ) { var oPlayerWindow; if(oPlayerWindow = WindowHandle.Get('player', nWindowId ) ) { oPlayerWindow.RefreshMessageBar(); } } for(var sK in g_hoPMWindows) { var oPMWindow; if(oPMWindow = WindowHandle.Get('pm',sK) ) { oPMWindow.UpdateControls(); } } if(! g_hSelf.show_header ) { SetHTML('hidden_header_token_count',g_hSelf['tokens']); } FcDetails(); Banner.SetMessage();}function PostLoginProcedures(){ iFrameVideoMasking(true); MenuSizing.SetHeight();
 if(top.location.search.match(/dhtmlwindow/) || g_UA.tablet || g_UA.mobile || ( hUA.FullWidth && hUA.FullHeight ) ) DhtmlWindowMode.Checkbox(); if(g_UA.Maxthon ) { DhtmlWindowMode.Checkbox(); } else if(g_UA.IE_Desktop_Metro ) { DhtmlWindowMode.Checkbox(); if(g_sConnectionMode != 'flash' ) MetroMitigation.ShowTopBarMessage(); } InsertPremiumLounge(); RoomData.Request(); if(g_sConnectionMode == 'flash' ) { if(g_nPingTimer ) { xmls_PingInterval(4000); } } setTimeout(function(){ ClientInfo.Submit(); }, 5000 ); if(g_hSelf.access_level ) { ClientInfo.GetSupplementalData(); } else { t.FcAddFriend.bFriendsLoaded = true; } if(typeof g_hSelf['show_main_menu'] == 'undefined' ) { g_hSelf['show_main_menu'] = 1; } if(typeof g_hSelf['show_personal_menu'] == 'undefined' ) { g_hSelf['show_personal_menu'] = 1; } if(g_hSelf.access_level ) { GetEl('online_friends_tr').style.display=''; } if(g_hSelf.access_level ) { GetEl('offline_friends_tr').style.display=''; } LoadPersonalMenu('reset'); if(g_UA.Linux && g_UA.Firefox ) { TogglePersonalMenu.sDisplay = 'block'; } else if(g_hSelf['show_main_menu'] == 0 ) { TogglePersonalMenu.sDisplay = g_hSelf['show_main_menu'] == 1 ? 'block' : 'none'; } else { TogglePersonalMenu.sDisplay = 'block'; } Banner.SetMessage();
 if(! g_hSelf.show_header ) ToggleHeader({ render_only: true }); WindowCloseDetection(); PrivateMessageListener(); LoadLogin(); LoadMenu(); LoadWindowsList(); HeaderArt.Load(); ToggleMenu.Label('online_friends'); ToggleMenu.Label('offline_friends'); if(g_hSelf.access_level ) { var oEl; if(oEl = GetEl('personal_menu_toggle')) oEl.style.display=''; ToggleMenu.Label('personal_menu'); } for(var nWindowId in g_hoPlayerWindows ) { var oPlayerWindow; if(oPlayerWindow = WindowHandle.Get('player', nWindowId ) ) { oPlayerWindow.OnlineBroadcasterList.Refresh(); oPlayerWindow.ModelMenuBar.Refresh(); } } if(g_hSelf.single_page_website ) { ConfigureForSinglePageWebsiteMode(); } if(g_hQS.snapcheck ) { g_hSelf.snapcheck = g_hQS.snapcheck; g_hSelf.online_model_pattern = 4; setTimeout(function() { SnapCheck.Execute({ mode: g_hQS.snapcheck, sample_size: g_hQS.snapsample }); }, 1500 ); } if(g_hQS.login_alert==2 && g_hQS.load != 'purchase' ) { LoginAlert(); }}
function LoginAlert(){ DhtmlPrompt({ prompt_type: 'alert', message: " You are now logged in as <b>" + g_hSelf.username + "</b>. " });}var SnapCheck = { bError: false, aQueue: []};SnapCheck.Execute = function(hConfig ){ var hConfig = hConfig || {}; SnapCheck.oReq = createRequestObject(); var nTimeDelay = 0; for ( var nUserId in g_hUsers ) { var hUser = g_hUsers[nUserId]; if(hUser['state'] != w.FCVIDEO_TX_IDLE ) { continue; } if(hUser['access_level'] != 4 ) { continue; } if(hConfig.mode == 'hd' && hUser.hdvideo ) SnapCheck.aQueue.push(nUserId ); else if(hConfig.mode == 'h5' && IsH5Video(hUser.videoserver ) ) SnapCheck.aQueue.push(nUserId ); else if(hConfig.mode == 'sd' && ! hUser.hdvideo ) SnapCheck.aQueue.push(nUserId ); else if(hConfig.mode == 'all' ) SnapCheck.aQueue.push(nUserId ); } if(hConfig.sample_size ) { var aTmp=[]; var nCompleted = 0; while(nCompleted < hConfig.sample_size ) { var nStart = Math.floor(Math.random() * SnapCheck.aQueue.length ); aTmp.push(SnapCheck.aQueue.splice(nStart, 1 )[0] ); nCompleted++; } SnapCheck.aQueue = aTmp; } if(! SnapCheck.aQueue.length ) {
 for(var nUserId in g_hoPlayerWindows ) { if(oPlayerWindow = WindowHandle.Get('player', nUserId ) ) { var oEl = oPlayerWindow.GetEl('online_broadcasters_list'); if(oEl ) oEl.innerHTML = 'No models for mode "' + hConfig.mode + '"'; } } return; } SnapCheck.nTotal = SnapCheck.aQueue.length; SnapCheck.Failover_Flag = false; setTimeout(SnapCheck.Failover, 2000 ); SnapCheck.Send();};SnapCheck.Failover = function(){ if(! SnapCheck.Failover_Flag ) { return; } g_hSelf.snapcheck = false; g_hSelf.online_model_pattern = 1; for(var nUserId in g_hoPlayerWindows ) { if(oPlayerWindow = WindowHandle.Get('player', nUserId ) ) { var oEl = oPlayerWindow.GetEl('homepage_update'); if(oEl ) { oEl.style.display = 'block'; oEl.innerHTML = "<div style=\"font-size:17px;padding:30px 0px;\">Snap Check tool unavailable (XSS Failure)</div><br><br>"; } } }};SnapCheck.Send = function(){ if(SnapCheck.aQueue.length == 0 ) { setTimeout(SnapCheck.Complete, 500 ); return; } for(var nUserId in g_hoPlayerWindows ) { if(oPlayerWindow = WindowHandle.Get('player', nUserId ) ) {
 var oEl = oPlayerWindow.GetEl('online_broadcasters_list'); if(oEl ) oEl.innerHTML = 'Requesting CamSnaps... ' + ( SnapCheck.nTotal - SnapCheck.aQueue.length ) + ' of ' + SnapCheck.nTotal ; } } var nUserId = SnapCheck.aQueue.shift(); var sUrl = "http://" + window.location.host + "/mfc2/php/proxy.php?video_server=" + g_hUsers[ nUserId ].videoserver + "&model_id=" + nUserId + "&mode=" + ( IsH5Video(g_hUsers[ nUserId ].videoserver ) ? 'h5' : '' ); SnapCheck.sUrl = sUrl; SnapCheck.oReq.open('get', sUrl ); SnapCheck.oReq.onreadystatechange = function() { SnapCheck.Callback(nUserId ); }; SnapCheck.oReq.onerror = function() { SnapCheck.Failover_Flag = true; }; SnapCheck.oReq.send();};SnapCheck.Callback = function(nUserId ){ if ( SnapCheck.oReq.readyState !== 4 ) { return; } if ( SnapCheck.oReq.response.length < 1500 || SnapCheck.oReq.response.length == 2415 ) { SnapCheck.bError = true; g_hUsers[ nUserId ].broken_camsnap = 1; Log('SnapCheck failure: ' + g_hUsers[nUserId].username + ' (' + nUserId + ') - ' + SnapCheck.oReq.response.length + ' bytes' + "\n" + SnapCheck.sUrl ); if(SnapCheck.oReq.response.length < 300 ) { Log('SnapCheck failure, short response: ' + SnapCheck.oReq.responseText ); } } else { } SnapCheck.Send();};SnapCheck.Complete = function(nUserId ){ for(var nUserId in g_hoPlayerWindows ) { if(oPlayerWindow = WindowHandle.Get('player', nUserId ) )
 { if(SnapCheck.bError ) { oPlayerWindow.OnlineBroadcasterList.Refresh('reset'); } else { var oEl = oPlayerWindow.GetEl('online_broadcasters_list'); if(oEl ) oEl.innerHTML = 'No errors found'; } } }};function ConfigureForSinglePageWebsiteMode(){ var oEl_layout_table = GetEl('layout_table'); if(g_hSelf.single_page_website ) { if(g_hSelf['show_main_menu'] ) document.getElementById("friends").style.width = '174px'; oEl_layout_table.height = ''; oEl_layout_table.style.height = ''; GetEl('outer_body').style.overflowY = "auto"; } else { if(g_hSelf['show_main_menu'] ) document.getElementById("friends").style.width = '188px'; oEl_layout_table.height = '100%'; oEl_layout_table.style.height = '100%'; GetEl('outer_body').style.overflowY = "hidden"; } if(g_bLoginDone ) { for(var nUserId in g_hoPlayerWindows ) { if(oPlayerWindow = WindowHandle.Get('player', nUserId ) ) { oPlayerWindow.OnlineBroadcasterList.Refresh('reset'); } } } if(g_UA.Chrome >= 35) { ResizeHandler(); }
}function ResetUserState(){ var nModelId = 0; for(var sK in g_hoPlayerWindows) { nModelId = sK; } for(var nRemoteUserId in g_hoPlayerWindows ) { TxCmd(FCTYPE_JOINCHAN, g_nSessionId, 0, t.g_hoPlayerWindows[ nRemoteUserId ]['room_channel'] , FCCHAN_PART); } Banner.SetMessage(); LoadViewers(); LoadAll(); LoadLogin(); LoadMenu(); LoadPersonalMenu('reset'); if(nModelId ) { Load('player',{ broadcaster_id: nModelId, target: 'main' }); }}function FcSetting(nArg1, nArg2, sPayload ){ var aMatches = sPayload.match(/([^:]+):(.*)/); if(! aMatches || ! aMatches[1] ) { return; } var sKey = aMatches[1]; g_hSelf[ sKey ] = aMatches[2]; if(typeof(g_hSelf[ sKey ]) == 'string' && g_hSelf[ sKey ].match(/^\d+$/) ) { g_hSelf[ sKey ] = parseInt(g_hSelf[ sKey ] ); } if(g_bLoginDone == false && ( g_UA.tablet || g_UA.mobile ) ) {
 if(sKey == 'video_size' ) { g_hSelf['video_size'] = 1; } else if(sKey == 'video_width' ) { g_hSelf['video_width'] = false; } else if(sKey == 'models_per_page' ) { g_hSelf['models_per_page'] = 100; } else if(sKey == 'hide_people' ) { g_hSelf['hide_people'] = 1; } else if(sKey == 'online_model_order' ) { g_hSelf['online_model_order'] = 0; } } if(sKey == 'models_per_page' && g_hSelf['models_per_page'] == 0 ) { g_hSelf['models_per_page'] = 350; } if(sKey == 'online_model_order' ) { if(g_hSelf['online_model_order'] == 'public_first' ) { g_hSelf['online_model_order'] = 0; } else if(g_hSelf['online_model_order'] == 'private_first' ) { g_hSelf['online_model_order'] = 7; } else if(typeof(g_hSelf['online_model_order']) != 'number' ) { g_hSelf['online_model_order'] = 0; } }}function InboxAlert(){ if(g_hSelf['access_level'] < 2 ) { return; } if(t.GetEl('inbox_alert') ) { if ( g_hSelf['inbox_count'] > 0) { t.GetEl('inbox_alert').style.display='inline'; SetHTML('inbox_alert'," (" + A("message") + "<span style='background-color:yellow;'><b>" + g_hSelf['inbox_count'] + "</b> New</span></a>) "); } else { t.GetEl('inbox_alert').style.display='none'; } }}function LoungeQuickLinks(sMessage, nMessengerId, sMode ){ var hOptions = {}; if(typeof(sMessage ) == 'object' ) { hOptions = sMessage; }
 else { hOptions.message = sMessage; hOptions.user_id = nMessengerId; hOptions.mode = sMode; } var nUserId; var oNow = new Date(); var nNow = oNow.getTime(); for(var nMessengerId in LoungeQuickLinks.hModelByUserTimer ) { for(var nUserId in LoungeQuickLinks.hModelByUserTimer[ nMessengerId ] ) { if(nNow - LoungeQuickLinks.hModelByUserTimer[ nMessengerId ][ nUserId ].time > 300000 ) { delete LoungeQuickLinks.hModelByUserTimer[ nMessengerId ][ nUserId ]; } } } if(! hOptions.raw_message ) { hOptions.raw_message = hOptions.message; } var aFoundUsers=[]; var aMatches = hOptions.raw_message.match(/(\w{4,})/g) || []; for(a=0; a < aMatches.length; a++ ) { var hUser={}; var nUserId; if(nUserId = StoreUserHash.hUsernameMap[ aMatches[a].toLowerCase() ] ) { hUser = g_hUsers[ nUserId ]; } else { continue; } if(hUser['access_level'] != 4 || ( hUser['state'] != FCVIDEO_TX_IDLE && hUser['state'] != FCVIDEO_TX_PVT && hUser['state'] != FCVIDEO_TX_GRP ) || g_hLoungeIds[ nUserId ] || hUser['username'].length < 4 )
 { continue; } var oRE = new RegExp("( )" + hUser['username'] + "( )","i"); hOptions.message = ' ' + hOptions.message + ' '; if(BlockedModelRegionCheck(nUserId ) || hUser['hidden'] ) { if(hOptions.lounge ) { hOptions.message = hOptions.message.replace(oRE,"$1<a href="top.html?cache_id=1423267822&amp;#" onClick=\"Lounge.VideoCycler.Cycle(" + nUserId + "); return false;\"><i><span " + PopupBioHandlerCode(nUserId) + ">" + hUser['username'] + "</span></i></a>$2"); } else { hOptions.message = hOptions.message.replace(oRE,"$1<i>" + hUser['username'] + "</i>$2"); } } else { if(! LoungeQuickLinks.hModelByUserTimer ) LoungeQuickLinks.hModelByUserTimer = {}; if(! LoungeQuickLinks.hModelByUserTimer[ hOptions.user_id ] ) LoungeQuickLinks.hModelByUserTimer[ hOptions.user_id ] = {}; if(! LoungeQuickLinks.hModelByUserTimer[ hOptions.user_id ][ nUserId ] ) LoungeQuickLinks.hModelByUserTimer[ hOptions.user_id ][ nUserId ] = {}; var nLinkFail = 0; if(hOptions.user_id && LoungeQuickLinks.hModelByUserTimer[ hOptions.user_id ][ nUserId ].count > 1 && ( nNow - LoungeQuickLinks.hModelByUserTimer[ hOptions.user_id ][ nUserId ].time < 60000 ) ) { nLinkFail = 1; } else if(hOptions.user_id && LoungeQuickLinks.hModelByUserTimer[ hOptions.user_id ][ nUserId ].count > 2 ) { nLinkFail = 2; } if(hOptions.user_id ) { LoungeQuickLinks.hModelByUserTimer[ hOptions.user_id ][ nUserId ].time = nNow; LoungeQuickLinks.hModelByUserTimer[ hOptions.user_id ][ nUserId ].count = ( LoungeQuickLinks.hModelByUserTimer[ hOptions.user_id ][ nUserId ].count + 1 ) || 1; }
 if(nLinkFail ) { return hOptions.message; } var sLiveSnap = ''; if(hUser['state'] == 0 && ! ( hOptions.lounge && hOptions.lounge.hSettings['lounge_auto_click_link'] & LOUNGE_MASK_NO_CAMSNAPS ) ) { sLiveSnap = "<span " + PopupBioHandlerCode(nUserId, hOptions.mode == 'pm_mode' ? 'pm_livesnap' : 'livesnap' ) + " style=''><i" + "mg class=tiny_livesnap_border height=36 width=48 sr"+"c=" + LiveSnapUrl(nUserId,100) + "></span>"; } if(hOptions.lounge ) { hOptions.message = hOptions.message.replace(oRE,"$1<a href="top.html?cache_id=1423267822&amp;#" onClick=\"Lounge.VideoCycler.Cycle(" + nUserId + "); return false;\"><span " + PopupBioHandlerCode(nUserId) + ">" + hUser['username'] + "</span>" + sLiveSnap + "</a>$2"); if(hOptions.lounge.hSettings['lounge_auto_click_link'] & LOUNGE_MASK_AUTO_CLICK && hOptions.lounge.bIsLoaded && hUser['state'] == 0 && hOptions.lounge.VideoCycler.HaltAutoClick != 1 && hOptions.lounge.nModelId != nUserId ) { clearTimeout(LoungeQuickLinks.oThreshold ); var _nUserId = nUserId; var oLounge = hOptions.lounge; Log('Cycle CALL ' + _nUserId ); LoungeQuickLinks.oThreshold = setTimeout(function() { oLounge.VideoCycler.Cycle(_nUserId ); }, 500 ); } } else if(hOptions.mode == 'pm_mode' ) { hOptions.message = hOptions.message.replace(oRE,"$1" + A('player',{ broadcaster_id: nUserId }) + "<span " + PopupBioHandlerCode(nUserId) + ">" + hUser['username'] + "</span>" + sLiveSnap + "</a>$2"); } } } return hOptions.message;}function LiveSnapUrl(nUserId, nSize ){ var sHost = g_mfcImageHost.host(nUserId ); if(g_hSelf.snapcheck ) { sHost = 'img2.myfreecams.com'; }
 if(g_hLoungeIds[ nUserId ] ) { return "http://" + sHost + "/mfc2/images/misc/lounge_martini.png"; } else if(! g_hUsers[ nUserId ] || ! g_hUsers[ nUserId ]['videoserver'] ) { return "http://" + sHost + "/mfc2/images/misc/NoLiveSnap.jpg"; } else if(g_hUsers[ nUserId ]['state'] == w.FCVIDEO_TX_AWAY ) { return "http://" + sHost + "/mfc2/images/misc/video_notice_away.gif"; } else if(g_hUsers[ nUserId ]['state'] == w.FCVIDEO_TX_GRP ) { return "http://" + sHost + "/mfc2/images/misc/video_notice_group.gif"; } else if(g_hUsers[ nUserId ]['state'] == w.FCVIDEO_TX_PVT && g_hUsers[ nUserId ].truepvt ) { return "http://" + sHost + "/mfc2/images/misc/video_notice_true_private.gif"; } else if(g_hUsers[ nUserId ]['state'] == w.FCVIDEO_TX_PVT ) { return "http://" + sHost + "/mfc2/images/misc/video_notice_private.gif"; } else if(g_hUsers[ nUserId ]['state'] == w.FCVIDEO_OFFLINE ) { return "http://" + sHost + "/mfc2/images/misc/video_notice_problems.gif"; } else { var oDate = new Date(); var nTimeStamp = Math.round(oDate.getTime() / 30000 ); if(g_hQS.snapcheck ) nTimeStamp = Math.round(Math.random()); nSize = nSize || 100; if(IsH5Video(g_hUsers[ nUserId ].videoserver ) ) { var sSize = nSize == 100 ? '100x80' : '320x240'; nVideoServer = nRealVideoServer = g_hUsers[nUserId]['videoserver']; if (nVideoServer > 500 ) { nVideoServer -= 500; } var sUrl = "http://video" + nVideoServer + ".myfreecams.com/single/" + sSize + "/" + PublicChannel(parseInt(nUserId ) ) + "?no-cache=" + nTimeStamp; return sUrl; } else {
 return "http://" + sHost + "/livesnap" + nSize + "/?user=" + PublicChannel(parseInt(nUserId ) ) + "&no-cache=" + nTimeStamp; } }}function LiveSnapImage(nUserId, nSize, nWidth, nHeight ){ nSize = nSize || 100; var aHtml = new Array(); aHtml.push("<i"+"mg "); if(nWidth ) aHtml.push(" width=" + nWidth ); if(nHeight ) aHtml.push(" height=" + nHeight ); aHtml.push(" class=livesnap_border sr"+"c=" + t.LiveSnapUrl(nUserId,nSize) + " onError=\"this.src = ('../images/misc/clear.gif');\" >" ); return aHtml.join('');}function BlockedModelRegionCheck(nUserId ){ var hUser = g_hUsers[nUserId]; if(! hUser ) { return 0; } var nRegion = g_hSelf['online_model_regions']; var sContinent = hUser['continent']; var bResult; if(( bResult = BlockedModelRegionCheck.hCache[ nUserId ] ) != undefined ) { return bResult; } bResult = 0; if ( hUser && ! hUser['friend'] ) { if ( nRegion & ( 1 << 0 ) && sContinent == 'AF' ) { bResult = 1; } else if ( nRegion & ( 1 << 1 ) && sContinent == 'AS' ) { bResult = 1; } else if ( nRegion & ( 1 << 2 ) && sContinent == 'AU' ) { bResult = 1; } else if ( nRegion & ( 1 << 3 )
 && ( sContinent == 'SA' || sContinent == 'CA' ) ) { bResult = 1; } else if ( nRegion & ( 1 << 4 ) && sContinent == 'EU' ) { bResult = 1; } else if ( nRegion & ( 1 << 5 ) && sContinent == 'NA' ) { bResult = 1; } else if ( nRegion & ( 1 << 6 ) && sContinent == 'UK' ) { bResult = 1; } else if ( nRegion & ( 1 << 7 ) && sContinent != 'AF' && sContinent != 'AS' && sContinent != 'AU' && sContinent != 'SA' && sContinent != 'CA' && sContinent != 'EU' && sContinent != 'NA' && sContinent != 'UK' ) { bResult = 1; } } BlockedModelRegionCheck.hCache[ nUserId ] = bResult; return bResult;}BlockedModelRegionCheck.ClearCacheById = function(nUserId ){ delete BlockedModelRegionCheck.hCache[ nUserId ];};BlockedModelRegionCheck.hCache = {};function GetRoomOwnerId(nChannelId ){ var nOwnerId = -1; if (nChannelId >= 1000000000 ) nOwnerId = nChannelId - 1000000000;
 else if (nChannelId >= 400000000 ) nOwnerId = nChannelId - 400000000; else if (nChannelId >= 300000000 ) nOwnerId = nChannelId - 300000000; else if (nChannelId >= 200000000 ) nOwnerId = nChannelId - 200000000; else if (nChannelId >= 100000000 ) nOwnerId = nChannelId - 100000000; return nOwnerId;}function LoadViewers(){ var sViewerHtml = ''; for(var nUserId in g_hUsers ) { if(g_hUsers[nUserId]['webcam_viewer'] ) { sViewerHtml += FriendsList.BuildEntry(nUserId); } } if(! sViewerHtml || g_hUsers[ g_hSelf['user_id'] ]['broadcasting_video'] == 0 ) { t.SetHTML('viewers',""); t.GetEl('viewers').style.display = 'none'; } else { t.GetEl('viewers').style.display = 'block'; SetHTML('viewers'," " + g.container("top","") + " <div class=small_heading style=\"position:relative;\"> Webcam Viewers <div style='position:absolute;top:-3px;right:-1px;'> <div class='sprite-icons sprite-binocs'></div> </div> </div> <div class='chat_friends friends_private_messages' style=\"font-size:11px;padding:6px;\"> " + sViewerHtml + " </div> " + g.container("bottom","") + " "); }}FcServerRefresh = {};FcServerRefresh.Receive = function(nArg1, nArg2, sPayload ){ var hPayload = ParseJSON(decodeURIComponent(sPayload) );
 if(! hPayload || typeof(hPayload ) != 'object' ) { return; } if(hPayload.hasOwnProperty('reload_config') && hPayload.reload_config === 1 ) { FcServerRefresh.ReloadConfig(); } else if(hPayload.hasOwnProperty('reload_client') && hPayload.reload_client != undefined ) { FcServerRefresh.ReloadClient(hPayload.reload_client ); } };FcServerRefresh.ReloadConfig = function(){ RefreshServerConfig.ForceRefresh();};FcServerRefresh.ReloadClient = function(nDelay ){ Log('FcServerRefresh.ReloadClient triggered '); for(var sK in g_hoPlayerWindows) { if (t.g_hoPlayerWindows[ sK ].presentation_state == w.EVSESSION_PRIVATE ) { setTimeout(FcServerRefresh.ReloadClient,5000); return; } } for(var sK in g_hoPMWindows) { if (t.g_hoPMWindows[ sK ].presentation_state == w.EVSESSION_PRIVATE ) { setTimeout(FcServerRefresh.ReloadClient,5000); return; } } var sPlayerModel=''; for(var nUserId in g_hoPlayerWindows) { var oPlayerWindow; if ( oPlayerWindow = WindowHandle.Get('player', nUserId ) ) { var nBroadcasterId; if(nBroadcasterId = oPlayerWindow.g_nBroadcasterId ) { sPlayerModel = g_hUsers[ nBroadcasterId ].username; }
 break; } } var nRandomDelay; if(nDelay === 0 ) nRandomDelay = 0; else nRandomDelay = parseInt(Math.random() * ( nDelay * 1000 ) ); setTimeout(function(){ top.location = '/?no-cache=' + Math.random() + "#" + sPlayerModel; }, parseInt(Math.random() * 600000 ) );};function FcLogin(nSession, nResult, nUserId, sName ){ g_nNullTimeArg = 0; g_nNullTimeArg_Initial = -1; for(var nK in g_hUsers ) { if(g_hUsers[nK]['access_level'] == 4 && ! g_hLoungeIds[ nK ] ) { g_hUsers[nK] = {}; } } g_nSessionId = nSession; g_bLoginDone = false; if(g_sConnectionMode == 'ajax' ) { var oAjaxFrame; if(( oAjaxFrame = window.frames['ajaxframe'] ) && oAjaxFrame.ajaxGw ) oAjaxFrame.ajaxGw.nSessionId = g_nSessionId; } SharedVideoHandler.hSharedVideo = {}; g_nConnectingMode = FCTYPE_CONNECTED; g_nBroadcasterCount = -1; if ( nResult == FCRESPONSE_ERROR ) { DhtmlPrompt({ prompt_type: 'alert', message: " We were unable to log you in.<br><br> Please try clearing cookies, then log in again.<br><br>\
 " + t.A('contact') + "Contact Support</a> if the problem persists. " }); SetCookie('passcode',''); SetCookie('user_id',''); } else if ( nResult == FCRESPONSE_SUCCESS ) { g_hSelf['username'] = sName; if (nUserId > 0) { g_hSelf['user_id'] = nUserId; } else { g_hSelf['user_id'] = g_nSessionId; g_hSelf['access_level'] = 0; } if (window.frames['ajaxframe']) zgw_Server('connected'); } for(var nUserId in g_hoPlayerWindows) { if ( oPlayerWindow = WindowHandle.Get('player', nUserId ) ) { oPlayerWindow.OnlineBroadcasterList.Refresh(); } } if(g_sHash && g_sHash != 'homepage' ) { JoinRoomByHash.Request(); } TogglePersonalMenu.Start({ render_only: true });}function RefreshOnlineBroadcasterLists(sMode ){ for(var nUserId in g_hoPlayerWindows ) { var oPlayerWindow; if ( oPlayerWindow = WindowHandle.Get('player', nUserId ) ) { oPlayerWindow.OnlineBroadcasterList.Refresh(sMode ); } }
}function FcParseErrorType(nErrorCode) { nErrorCode = parseInt(nErrorCode ); switch(nErrorCode ) { case FCERRTYPE_INVALIDUSER: return "That username is invalid. Check the spelling and try again."; case FCERRTYPE_NOACCESS: return "You cannot ignore that user."; case FCERRTYPE_NOSPACE: return "No space to add more, try removing some first."; } return "Unknown FcErrorType, code " + nErrorCode; } function FcTxProfile(nModelId,nBitRate,sBitRateDescription){ if(g_hUsers[nModelId] ) { g_hUsers[nModelId]['kbps'] = nBitRate; if(g_hUsers[nModelId]['videoserver'] > 0 ) { var oPlayerWindow; if(oPlayerWindow = WindowHandle.Get('player', nModelId ) ) { oPlayerWindow.LoadVideo(); } var oPMWindow; if(oPMWindow = WindowHandle.Get('pm',nModelId) ) { oPMWindow.LoadVideo(); } } }}function FcTags(sPayload ){ var hModelTagBatch = {}; if (typeof(sPayload) === "object") hModelTagBatch = sPayload; else hModelTagBatch = ParseJSON(decodeURIComponent(sPayload) );
 for(var nUserId in hModelTagBatch ) { if(g_hUsers[ nUserId ] == undefined ) { g_hUsers[ nUserId ] = {}; } var hUser = g_hUsers[ nUserId ]; if(hUser.aTags == undefined ) { hUser.aTags = new Array(); } if(hUser.aTags[0] == undefined ) { for(var nTag in hModelTagBatch[nUserId] ) { var sTag = hModelTagBatch[nUserId][nTag]; if(FcTags.hTagCounts[ sTag ] == undefined ) FcTags.hTagCounts[ sTag ] = 0; FcTags.hTagCounts[ sTag ]++; } } for(var nTag in hModelTagBatch[nUserId] ) { hUser.aTags[ nTag ] = hModelTagBatch[nUserId][nTag].toLowerCase(); } }}FcTags.hTagCounts = {};function InitializeModelList(){ FcSessionState.bModelsLoaded = true; var aMatches = top.location.search.match(/search=([\w ]+)/); var sSearch = aMatches ? aMatches[1] : ''; for(var nUserId in g_hoPlayerWindows ) { var oPlayerWindow; if(oPlayerWindow = WindowHandle.Get('player', nUserId ) ) { oPlayerWindow.ModelMenuBar.Message.Set(); if(sSearch ) { oPlayerWindow.ModelMenuBar.Search.sQuery = sSearch; oPlayerWindow.ModelMenuBar.Search.Execute(); } oPlayerWindow.OnlineBroadcasterList.Refresh('force');
 } } ExtraMenuSelector.Initialize(); ExtraMenuSelector.Load(g_hSelf.extra_menu_mode || 'default' ); ModelHistory.Render();}function FcMetrics(nType, nStart, nEnd, sPayload){ if (nType == FCTYPE_SESSIONSTATE) { if (sPayload) { var hPayload = ParseJSON(decodeURIComponent(sPayload)); if (hPayload && hPayload.fileno) { g_sModelLoadMethod = 'object'; var sUrl; if(top.location.search.match(/dummy_models=1/) ) sUrl = '../lib/dummy_mobj_data.js'; else sUrl = '/mfc2/php/mobj.php?f=' + hPayload.fileno + '&s=' + SelectChatServer.sHost; FetchRemoteModelObject(sUrl); } } if (nStart == 0 && nEnd > 0) { FcSessionState.ModelReset(); FcSessionState.nLoadingMax = nEnd; } else if (nStart == nEnd && g_sModelLoadMethod == 'chat') { InitializeModelList(); } } else if (nType == FCTYPE_ADDFRIEND) { if (nStart == 0 && nEnd > 0) { FcAddFriend.FriendReset(); FcAddFriend.nLoadingMax = nEnd; Log('LOADING: friend strean started, max is ' + FcAddFriend.nLoadingMax); } else if (nStart == nEnd) { Log('LOADING: friend stream DONE!');
 FcAddFriend.bFriendsLoaded = true; if(g_bLoginDone ) { for (sK in g_hWindows) { if(g_hWindows[sK].window && g_hWindows[sK].window.OnlineBroadcasterList && FcSessionState.bModelsLoaded ) { g_hWindows[sK].window.OnlineBroadcasterList.Refresh(t.FcSessionState.nLoadingCount > 50 ? 'force' : '' ); } } } } }}function FetchModelsFromChatServer(){ g_sModelLoadMethod = 'chat'; TxCmd(FCTYPE_MODELGROUP, g_nSessionId, 1, 1, FCCHAN_PART);}function FetchRemoteModelObject(sUrl){ var bTimedOut = false; var oMReq = createRequestObject(); oMReq.open('get', sUrl); oMReq.onreadystatechange = function() { if ( oMReq.readyState !== 4 ) return; if ( bTimedOut ) return; if ( oMReq.status === 200 ) { clearTimeout(nTimeoutTimer); try { if ( oMReq.responseText.substring(0,20) !== 'var g_hModelData = {' ) throw "invalid response"; var script = document.createElement('script'); script.setAttribute('type', 'text/javascript'); script.text = "try { " + oMReq.responseText + " } catch (e) { console.log(e); FetchModelsFromChatServer(); }"; document.getElementsByTagName('head')[0].appendChild(script); } catch (e) {
 console.log(e); FetchModelsFromChatServer(); } } else { FetchModelsFromChatServer(); } }; oMReq.send(null); var nTimeoutTimer = setTimeout(function() { bTimedOut = true; oMReq.abort(); FetchModelsFromChatServer(); }, 8000);}function LoadModelsFromObject(oModels){ var nX = 0, nTags = 0; var hTags = {}; if (oModels == null) { FetchModelsFromChatServer(); return; } for (sModel in oModels) { if (sModel.substring(0,5) === "tags_") { hTags[parseInt(sModel.substring(5))] = oModels[sModel]; nTags++; continue; } nX++; var nUserId = StoreUserHash(oModels[sModel], { update_hash: true, from_cache: true } ); var nRoomCount; if(nRoomCount = LoadModelsFromObject.hRoomCounts[ nUserId ] ) { g_hUsers[nUserId].room_count = nRoomCount; } FcSessionState(0, 0, nUserId);
 } if (nTags > 0) FcTags(hTags); FcMetrics(FCTYPE_SESSIONSTATE, nX, nX); InitializeModelList();}LoadModelsFromObject.hRoomCounts = {};function FcAddFriend(nRemoteUserID,nMode){ if ( g_hLoungeIds[ nRemoteUserID ] ) { return; } FcAddFriend.bHasFriends = true; if ( ! g_hUsers[ nRemoteUserID ] ) { return; } if (FcAddFriend.bFriendsLoaded == false) { FcAddFriend.nLoadingCount++; var nNow = Math.floor(new Date().getTime() / 1000); if (nNow > FcAddFriend.nLastFriendProgress) { LoadPersonalMenu(); FcAddFriend.nLastFriendProgress = nNow + (FcAddFriend.nLoadingMax > 1000 ? 1 : 0); } } if ( nMode == FCCHAN_JOIN ) { g_hUsers[nRemoteUserID]['friend'] = true; if ( g_bLoginDone && FcAddFriend.bFriendsLoaded ) { if(g_hUsers[ nRemoteUserID ]['state'] == FCVIDEO_OFFLINE ) { for(var sK in g_hUsers[nRemoteUserID] ) { if(sK != 'user_id' && sK != 'username' && sK != 'access_level' && sK != 'state' && sK != 'friend' )
 { delete g_hUsers[ nRemoteUserID ][ sK ]; } } } var sStateMessage; var sIcon; if ( g_hUsers[nRemoteUserID]['sessionid'] ) { sStateMessage = "has signed in"; sIcon = "bw.person.16x16.png"; } if(g_hUsers[nRemoteUserID] && g_hUsers[nRemoteUserID]['sessionid'] ) { if(g_hUsers[nRemoteUserID].access_level == 4 && g_hSelf['sound_model_friend_login'] ) { Sound('sound_model_friend_login'); } else if(g_hUsers[nRemoteUserID].access_level != 4 && g_hSelf['sound_user_friend_login'] ) { Sound('sound_user_friend_login'); } Notification("<a href="http://www.myfreecams.com/mfc2/static/\&quot;javascript:popUserMenu.open(&quot;+nRemoteUserID+&quot;,g_oDhtmlPopup);\&quot;"><b>" + g_hUsers[nRemoteUserID]['username'] + "</b></a> " + sStateMessage + ".", sIcon ); } } } else if(nMode == FCCHAN_PART || g_hUsers[nRemoteUserID]['sessionid'] == '0' ) { g_hUsers[nRemoteUserID]['friend'] = false; } var oPMWindow; if(oPMWindow = WindowHandle.Get('pm',nRemoteUserID) ) { oPMWindow.FriendNotify(g_hUsers[nRemoteUserID]['state']); } if(BlockedModelRegionCheck && BlockedModelRegionCheck.ClearCacheById ) { BlockedModelRegionCheck.ClearCacheById(nRemoteUserID); } for(var sK in g_hoPlayerWindows ) {
 var oPlayerWindow; if(oPlayerWindow = WindowHandle.Get('player', sK ) ) { oPlayerWindow.mfcBroadcasterDisplay.ClearBroadcasterHtmlCacheById(nRemoteUserID); } } if(! FcAddFriend.bFriendsLoaded ) { return; } LoadFriends(); if(g_bLoginDone ) { for(var nUserId in g_hoPlayerWindows ) { var oPlayerWindow; if(oPlayerWindow = WindowHandle.Get('player', nUserId ) ) { oPlayerWindow.LoadPlayerMenu(); oPlayerWindow.HighlightChat(); } } } Update_popUserMenu(nRemoteUserID );}function HighlightUserChat(nUserId ){ if(HighlightUserChat.hUsers[ nUserId ] ) delete HighlightUserChat.hUsers[ nUserId ]; else HighlightUserChat.hUsers[ nUserId ] = HighlightUserChat.cColors[ HighlightUserChat.nColorRotation++ % 10 ]; for(var nBroadcasterId in g_hoPlayerWindows ) { var oPlayerWindow; if(oPlayerWindow = WindowHandle.Get('player', nBroadcasterId ) ) oPlayerWindow.HighlightChat('reset'); }}HighlightUserChat.nColorRotation = 0;HighlightUserChat.hUsers = {};HighlightUserChat.cColors = { 0: '#DDDDFF', 1: '#BBEEBB', 2: '#FFDDDD', 3: '#BBBBEE', 4: '#99CC99', 5: '#EEAAAA',
 6: '#FFD700', 7: '#FFB6C1', 8: '#FFEE88', 9: '#FFEEEE'};FcAddFriend.LoadingMessage = function(){ if(t.FcAddFriend.bModelsLoaded || g_hSelf['access_level'] < 1 ) { return; } var nCur = t.FcAddFriend.nLoadingCount; var nMax = t.FcAddFriend.nLoadingMax; var nVal = Math.round((nCur * 100) / nMax); if (nVal > 100) nVal = 100; g_oFriendsProgressBar.Initialize({ initial_value: FcAddFriend.LoadingMessage.nPreviousValue, final_value: t.FcAddFriend.nLoadingMax, width:130, completion_callback: function() { SetHTML('online_friends_control_message',''); } }); var sProgressBar = g_oFriendsProgressBar.DrawProgressBar(); sHtml = "<br>Loading Friends...<br>" + sProgressBar; SetHTML('online_friends_control_message', sHtml); g_oFriendsProgressBar.Update(t.FcAddFriend.nLoadingCount ); if (nCur == 100) { setTimeout(FcAddFriend.LoadingMessage, 500); } FcAddFriend.LoadingMessage.nPreviousValue = t.FcAddFriend.nLoadingCount;};FcAddFriend.LoadingMessage.nPreviousValue = 0;FcAddFriend.FriendReset = function(){ FcAddFriend.nLoadingMax = 0; FcAddFriend.nLoadingCount = 0; FcAddFriend.bFriendsLoaded = false; FcAddFriend.nLastFriendProgress = 0;};FcAddFriend.FriendReset();function FcAddIgnore(nArg1,nArg2){ var nIgnoredUser = nArg1;
 if(! g_hUsers[nIgnoredUser] ) { g_hUsers[nIgnoredUser] = {}; } if(nArg2 == FCCHAN_PART ) { g_hUsers[ nIgnoredUser ].ignored = 0; } else if(nArg2 == FCCHAN_JOIN ) { g_hUsers[ nIgnoredUser ].ignored = 1; } if(! FcAddFriend.bFriendsLoaded ) { return; } if(g_hWindows['user_settings'] && g_hWindows['user_settings'].window && g_hWindows['user_settings'].window.AddIgnoreResponse ) { g_hWindows['user_settings'].window.AddIgnoreResponse(nArg1, nArg2 ); } for(var nRemoteUserID in g_hoPMWindows) { var oPMWindow; if(oPMWindow = WindowHandle.Get('pm',nRemoteUserID) ) { oPMWindow.ConfigureUserControls(); } } Update_popUserMenu(nIgnoredUser );}function StoreUserHash(mixedPayload, hOptions ){ hOptions = hOptions || {}; var hMap = {}; var hUser = {}; var nUserId = 0; if ( ! mixedPayload ) return; if ( typeof mixedPayload === 'string' ) { sPayload = decodeURIComponent(mixedPayload); if(sPayload.charAt(0) == '[' ) { sPayload = sPayload.substr(1,sPayload.length - 2 ); aPayload = sPayload.split(',');
 hUser['lv'] = 0; hUser['nm'] = "Guest" + MfcStringUtilities.char_padding(aPayload[0],5,0); hUser['sid'] = aPayload[1]; hUser['ts'] = 0; hUser['uid'] = 0; hUser['vs'] = 90; } if(! hUser['sid'] ) hUser = ParseJSON(sPayload ); } else if ( typeof mixedPayload === 'object' ) { hUser = mixedPayload; } try { if (hUser && hUser.sid != null && hUser.sid != undefined) { if(hUser['uid'] == 100 && ! top.g_sClearCode ) hUser['vs'] = w.FCVIDEO_OFFLINE; nUserId = parseInt(hUser.uid); hMap['username'] = hUser.nm; hMap['sessionid'] = hUser.sid; hMap['user_id'] = hUser.uid; hMap['access_level'] = hUser.lv; hMap['state'] = hUser.vs; hMap['lastupdated'] = hUser.ts; if (hUser.u) { hMap['videoserver'] = hUser.u.camserv; hMap['chat_text_color'] = hUser.u.chat_color; hMap['chat_text_font'] = hUser.u.chat_font; hMap['photos'] = hUser.u.photos; hMap['aboutme'] = hUser.u.blurb ? hUser.u.blurb.replace(/<[^>]*>/g,'') : undefined; hMap['active'] = hUser.u.profile; hMap['city'] = hUser.u.city ? hUser.u.city.replace(/<[^>]*>/g,'') : undefined; hMap['country'] = hUser.u.country ? hUser.u.country.replace(/<[^>]*>/g,'') : undefined; hMap['ethnic'] = hUser.u.ethnic ? hUser.u.ethnic.replace(/<[^>]*>/g,'') : undefined; hMap['blurb'] = hUser.u.blurb ? hUser.u.blurb.replace(/<[^>]*>/g,'') : undefined;
 hMap['lastlogin'] = hUser.u.lastlogin; hMap['creation_date'] = hUser.u.creation || 0 ; hMap['avatars'] = hUser.u.avatar; hMap['age'] = hUser.u.age; hMap['occupation'] = hUser.u.occupation ? hUser.u.occupation.replace(/<[^>]*>/g,'') : undefined; hMap['chat_background_id'] = hUser.u.chat_bg; hMap['chat_opts'] = hUser.u.chat_opt; if(! hMap['chat_opts'] && ! g_hUsers[ nUserId ] ) { hMap['chat_opts'] = w.FCOPT_NONE; } if(hMap['access_level'] >= 2 && typeof(hMap['chat_opts']) != 'undefined' ) { hMap['bold'] = hMap['chat_opts'] & w.FCOPT_BOLD ? 1 : 0; hMap['italic'] = hMap['chat_opts'] & w.FCOPT_ITALICS ? 1 : 0; hMap['cam2cam'] = hMap['chat_opts'] & w.FCOPT_CAM2CAM ? 1 : 0; } } if (hUser.m) { hMap['lastnews'] = hUser.m.lastnews; hMap['topic'] = hUser.m.topic ? hUser.m.topic.replace(/<[^>]*>/g,'') : undefined; hMap['missmfc'] = hUser.m.missmfc; hMap['missmfc_rank'] = hUser.m.rank; hMap['model_group'] = hUser.m.mg; hMap['continent'] = hUser.m.continent; hMap['kbps'] = hUser.m.kbit; hMap['rating'] = hUser.m.camscore; hMap['cam_score'] = hUser.m.camscore; hMap['rating_count'] = hUser.m.totrating; hMap['avg_rating'] = hUser.m.avgrating; hMap['new_model'] = hUser.m.new_model; hMap['model_settings'] = hUser.m.flags; hMap['hide_cam_score'] = hUser.m.hidecs; if ( hUser.m.rc !== undefined && ! hOptions.from_cache ) hMap['room_count'] = hUser.m.rc; hMap['ping'] = 0; hMap['rating'] = 1; if (hMap['model_settings'] !== undefined) { hMap['remote_private'] = hMap['model_settings'] & w.FCOPT_REMOTEPVT ? 1 : 0; hMap['truepvt'] = hMap['model_settings'] & w.FCOPT_TRUEPVT ? 1 : 0; hMap['model_sw'] = hMap['model_settings'] & w.FCOPT_MODELSW ? 1 : 0; hMap['guests_muted'] = hMap['model_settings'] & w.FCOPT_GUESTMUTE ? 1 : 0; hMap['basics_muted'] = hMap['model_settings'] & w.FCOPT_BASICMUTE ? 1 : 0; if (g_hQS['hdspec'] === 'onlyh5')
 hMap['hdvideo'] = IsH5Video(hUser.u.camserv) ? 1 : 0; else hMap['hdvideo'] = hMap['model_settings'] & w.FCOPT_HDVIDEO ? 1 : 0; } } hMap['italic'] = 0; hMap['static_record'] = 0; } else { Log('DBG: CMESG hUser not eval ok: ' + mixedPayload ); } } catch(e) { Log('DBG: StoreUserHash() failed evaling: ' + mixedPayload + ', e:' + e.description); return; } hMap['previous_state'] = (g_hUsers[ nUserId ] ) ? g_hUsers[ nUserId ]['state'] : null; if ( nUserId == 0 && hMap['sessionid'] > 0 ) { nUserId = hMap['sessionid']; } var fSaveFriend = false; var fSetFriend = false; var nPreviousState = FCVIDEO_OFFLINE; if ( hOptions.historical && g_hUsers[nUserId]) { nPreviousState = g_hUsers[nUserId]['state']; } if (g_hUsers[ nUserId ] && g_hUsers[ nUserId ]['friend']) { fSaveFriend = g_hUsers[nUserId]['friend']; } if ( ! g_hUsers[ nUserId ] && hMap['access_level'] == 4 ) { g_hUsers[nUserId] = {}; } if(hMap.access_level == 4 && ! hMap.new_model ) {
 var nModelAge = Math.abs(( ( StoreUserHash.nNow / 1000 ) - hMap.creation_date ) / 86400 ); if(nModelAge <= 90 ) hMap.new_model = nModelAge; if(g_hSelf.online_model_sort == 'random' ) hMap.random = Math.random(); } if(typeof hMap.model_sw == 'undefined' && typeof StoreUserHash.hValuesBySession[ hMap.sessionid ] != 'undefined' && typeof StoreUserHash.hValuesBySession[ hMap.sessionid ].model_sw != 'undefined' ) { hMap.model_sw = StoreUserHash.hValuesBySession[ hMap.sessionid ].model_sw; } else if(typeof hMap.model_sw != 'undefined' ) { if(! StoreUserHash.hValuesBySession[ hMap.sessionid ] ) { StoreUserHash.hValuesBySession[ hMap.sessionid ] = {}; } StoreUserHash.hValuesBySession[ hMap['sessionid'] ].model_sw = hMap.model_sw; } if(hOptions.historical && nUserId == g_hSelf['user_id'] ) { hOptions.update_hash = false; } if(hMap.access_level == 4 && hMap.model_sw == 0 && g_hUsers[ hMap.user_id ].model_sw == 1 ) { hOptions.update_hash = false; } var bResetUserState_after_update = 0; if(nUserId == g_hSelf['user_id'] && hMap['access_level'] == 2 && g_hSelf['access_level'] == 1 ) { bResetUserState_after_update = 1; } if (g_hUsers[nUserId] && typeof(g_hUsers[nUserId]['truepvt']) == 'number' && typeof(hMap['truepvt']) == 'number') { if (hMap['truepvt'] != g_hUsers[nUserId]['truepvt'])
 { if (g_hoPlayerWindows[nUserId]) { var oPlayerWindow; if(oPlayerWindow = WindowHandle.Get('player', nUserId ) ) oPlayerWindow.SetTruePvt(hMap['truepvt'] == 1 ? true : false); } } } if ( hOptions.update_hash ) { var nUserId = nUserId; if ( ! g_hUsers[ nUserId ] || ! g_hUsers[ nUserId ].user_id ) { if ( g_hUsers[ nUserId ] ) for ( var sK in g_hUsers[ nUserId ] ) { hMap[ sK ] = g_hUsers[ nUserId ][ sK ]; } g_hUsers[ nUserId ] = hMap; } else { for(var sK in hMap) { if(hMap[sK] == 0 && sK != 'chat_text_color' ) { hMap[sK] = 0; } if(hMap[sK] != undefined && hMap[sK] != null && ( sK != 'tokens' || hMap[sK] >= 0 ) ) { g_hUsers[ nUserId ][ sK ] = hMap[ sK ]; } } } var hDefaults = { 'chat_text_font': 0, 'bold': 0, 'italic': 0, 'cam2cam': 0 }; for(var sK in hDefaults ) {
 if(nUserId == g_hSelf['user_id'] ) { if ( g_hSelf[sK] == null || g_hSelf[sK] == undefined ) { g_hSelf[sK] = hDefaults[sK]; } } if ( g_hUsers[nUserId][sK] == null || g_hUsers[nUserId][sK] == undefined ) { g_hUsers[nUserId][sK] = hDefaults[sK]; } } if ( nUserId == g_hSelf['user_id'] ) { for(var sK in hMap) { if(( sK != 'tokens' || hMap[sK] > 0 ) && sK != 'user_id' && hMap[sK] != null && hMap[sK] != undefined ) { g_hSelf[sK] = hMap[sK]; } } if(g_hSelf.online_model_selection == 'feeds' && ! g_UA.tablet && ! g_UA.mobile ) g_hSelf.online_model_selection = 'custom'; if(typeof(g_hSelf['online_model_order'] ) != 'number' ) g_hSelf['online_model_order'] = 0; if(top.location.search.match(/use_pages/) ) { g_hSelf['model_list_mode'] = 'page'; } else if(top.location.search.match(/use_scroll/) ) { g_hSelf['model_list_mode'] = 'scroll'; } else if(! g_hSelf['model_list_mode'] ) { if(( g_hSelf['access_level'] == 0 || g_hSelf['user_id'] > 15149867 ) && ! g_UA.tablet && ! g_UA.mobile ) g_hSelf['model_list_mode'] = 'scroll'; else g_hSelf['model_list_mode'] = 'page';
 } if(top.location.search.match(/fixed_height/) ) { g_hSelf.single_page_website = 0; } else if(g_UA.tablet || g_UA.mobile ) { if(g_hSelf.single_page_website_mobile != undefined ) { g_hSelf.single_page_website = g_hSelf.single_page_website_mobile; } else { g_hSelf.single_page_website = 1; } } if(top.location.search.match(/no_single_page_website/) ) { g_hSelf.single_page_website = 0; } else if(top.location.search.match(/single_page_website/) ) { g_hSelf.single_page_website = 1; } if(g_UA.tablet || g_UA.mobile ) { g_hSelf.hide_people = 1; g_hSelf.model_list_refresh_seconds = 120; if(g_hSelf.online_model_pattern_mobile ) { g_hSelf.online_model_pattern = g_hSelf.online_model_pattern_mobile; } else { g_hSelf.online_model_pattern = 6; } } else if(! g_hSelf.online_model_pattern ) { g_hSelf.online_model_pattern = 1; } for(var sExt in UserExtensions.hExtNamesToIds ) if(g_hSelf[sExt] == undefined ) g_hSelf[sExt] = UserExtensions.hExtNamesToIds[sExt].default_value; if(g_hSelf.models_per_page == 1000 ) { g_hSelf.models_per_page = 500; } else if(g_hSelf.models_per_page == 350 ) { g_hSelf.models_per_page = 300; } else if(g_hSelf.models_per_page == 250 ) { g_hSelf.models_per_page = 200; } else if(g_hSelf.models_per_page == 150 ) { g_hSelf.models_per_page = 100; } } } else { if (hMap['username'] != null && hMap['username'] != undefined) { g_hUsers[nUserId]['username'] = hMap['username'];
 } } if(fSaveFriend != false ) { g_hUsers[nUserId]['friend'] = fSaveFriend; } else if(! g_hUsers[nUserId]['friend'] ) { g_hUsers[nUserId]['friend'] = 0; } if(nPreviousState != FCVIDEO_OFFLINE ) { g_hUsers[nUserId]['state'] = nPreviousState; } if(g_hUsers[nUserId]['state'] != FCVIDEO_TX_PVT && g_hUsers[nUserId]['truepvt'] ) { g_hUsers[nUserId]['truepvt'] = 0; } if(bResetUserState_after_update ) { ResetUserState(); } if(hMap['username'] && typeof(hMap['username']) == 'string' ) StoreUserHash.hUsernameMap[ hMap['username'].toLowerCase() ] = nUserId; return nUserId;}StoreUserHash.hUsernameMap = {};StoreUserHash.hValuesBySession = {};StoreUserHash.nNow = new Date().getTime();function Notification(sMessage, sIcon ){ if(! sIcon ) { sMessage = "&#8594;&nbsp&nbsp;" + sMessage; } Banner.SetMessage(sMessage, sIcon, true ); setTimeout(function() { Banner.SetMessage(); }, 15000 );}function SortedUserKeys(sMode, bReverse, aSubset ){ if(! sMode ) { sMode = 'username'; }
 var i = 0; var aTmp = new Array(); var aResult = new Array(); var bIsString; var aIdSet = new Array(); if(aSubset ) { aIdSet = aSubset; } else { for(var nUserId in g_hUsers ) { aIdSet.push(nUserId ); } } for(var nK = 0; nK < aIdSet.length; nK++ ) { var nUserId = aIdSet[nK]; if(nUserId > 0 && g_hUsers[nUserId][ sMode ] != undefined ) { bIsString = typeof(g_hUsers[nUserId][ sMode ] ) == 'string' ? 1 : 0; break; } } for(var nK = 0; nK < aIdSet.length; nK++ ) { var nUserId = aIdSet[nK]; if(g_hUsers[nUserId] && g_hUsers[nUserId][sMode] != undefined ) { if(bIsString && g_hUsers[nUserId][ sMode ].toLowerCase ) { aTmp[i++] = g_hUsers[nUserId][ sMode ].toLowerCase() + ':' + nUserId; } else { aTmp[i++] = MfcStringUtilities.char_padding(g_hUsers[nUserId][ sMode ], 5, 0 ) + ':' + nUserId; } } } aTmp.sort(); if(bReverse ) { aTmp.reverse(); } for(var nK=0; nK < aTmp.length; nK++ ) { aResult.push(aTmp[nK].split(':')[1] ); } return aResult;}function LoadPersonalMenu(sMode)
{ if(LoadPersonalMenu.SuspendUpdates || TogglePersonalMenu.sDisplay == 'none' ) { return; } if(sMode == 'suspend' ) { LoadPersonalMenu.Lock = 1; setTimeout(function(){ LoadPersonalMenu.Lock=0 },3000); return; } else if ( LoadPersonalMenu.Lock > 0 ) { LoadPersonalMenu.CallTimeout = setTimeout(function(){ LoadPersonalMenu(sMode ); }, 1000 ); return; } else { clearTimeout(LoadPersonalMenu.CallTimeout ); } sMode = sMode || ''; if(! sMode ) { clearTimeout(LoadPersonalMenu.oFriendsLimit ); LoadPersonalMenu.oFriendsLimit = setTimeout(function(){ LoadPersonalMenu('load'); },100); return; } try { for(var nRemoteUserID in g_hoPMWindows) { var oPMWindow; if(oPMWindow = WindowHandle.Get('pm',nRemoteUserID) ) { oPMWindow.ConfigureUserControls(); } } } catch(oError) { Log("Try Catch Failure #14: " + oError.description ); } if (sMode == 'disconnected') { SetHTML('friends_private_messages',"\n <div style='position:relative;'>\n <div id=windows_list class=chat_private_message_list></div>\n You have been disconnected from the server. We are attempting to reconnect. \n ");
 if(g_hSelf['access_level'] > 0 ) { SetHTML('friends_private_messages',"\n <div class=chat_friends_list style='white-space:nowrap;'>\n " + A("toggle_menu") + "Hide Friends Menu</a><br>\n </div>\n "); } SetHTML('online_friends_list',""); SetHTML('offline_friends_list',""); return; } else if(g_hSelf.access_level == 0 ) { var aMenu = DrawPersonalMenu(); SetHTML('friends_private_messages', "<div id=windows_list class=chat_private_message_list style='overflow-x:hidden;width:140px;'></div>" + "<div id=personal_menu_list_wrapper style=\"overflow-y:auto;overflow-x:hidden;\">" + DrawGuestMenu() + aMenu.join('') + "</div>" ); LoadPersonalMenu.SuspendUpdates = 1; } else if ( ! GetEl('windows_list') || sMode == 'reset' ) { var aMenu = DrawPersonalMenu(); var sH; sH = "\n <div style='position:relative;'>\n <div id=windows_list class=chat_private_message_list style='display:none;width:140px;''></div> <div id=personal_menu_list_wrapper style=\"overflow-y:auto;overflow-x:hidden;padding-bottom:2px;\"> " + aMenu.join('') + " </div> </div> </div> "; SetHTML('friends_private_messages',sH); ToggleMenu.Label('personal_menu'); MyWebcam.DisplayStatus(); }
 LoadFriends(); LoadWindowsList(); InboxAlert(); MenuSizing.SetHeight();}function DrawPersonalMenu(){ var aMenu = new Array(); var aMenuOrder = new Array(); if(g_hSelf['access_level'] == 0 ) { aMenuOrder.push('top_rooms'); aMenuOrder.push('miss_mfc'); aMenuOrder.push('model_explorer'); aMenuOrder.push('model_tags'); aMenuOrder.push('topic_tags'); aMenuOrder.push('news_feed'); } else if(g_hSelf['access_level'] == 4 ) { aMenuOrder.push('my_account'); aMenuOrder.push('user_settings'); if ( g_hSelf['active'] ) aMenuOrder.push('my_profile'); else aMenuOrder.push('create_profile'); aMenuOrder.push('line_break'); aMenuOrder.push('news_feed'); aMenuOrder.push('message'); aMenuOrder.push('chat_logs'); aMenuOrder.push('line_break'); aMenuOrder.push('top_rooms'); aMenuOrder.push('miss_mfc'); aMenuOrder.push('model_explorer'); aMenuOrder.push('model_tags'); aMenuOrder.push('topic_tags'); aMenuOrder.push('line_break'); aMenuOrder.push('user_tags'); aMenuOrder.push('user_created_rooms'); aMenuOrder.push('member_webcams');
 } else if(g_hSelf['access_level'] == 2 || g_hSelf['access_level'] == 5 ) { aMenuOrder.push('my_account'); aMenuOrder.push('user_settings'); if ( g_hSelf['active'] ) aMenuOrder.push('my_profile'); else aMenuOrder.push('create_profile'); aMenuOrder.push('line_break'); aMenuOrder.push('lounge'); if(g_hUsers[ g_hLoungeIds['Lounge1000'] ] && g_hSelf['rewards_points'] >= 1000 ) aMenuOrder.push('lounge1000'); if(g_hUsers[ g_hLoungeIds['Lounge10000'] ] && g_hSelf['rewards_points'] >= 10000 ) aMenuOrder.push('lounge10000'); aMenuOrder.push('line_break'); aMenuOrder.push('news_feed'); aMenuOrder.push('message'); aMenuOrder.push('chat_logs'); if ( g_hSelf['rewards_points'] >= 20 ) { aMenuOrder.push('exclusive_gallery'); } aMenuOrder.push('group_shows_board'); aMenuOrder.push('line_break'); aMenuOrder.push('top_rooms'); aMenuOrder.push('miss_mfc'); aMenuOrder.push('model_explorer'); aMenuOrder.push('model_tags'); aMenuOrder.push('topic_tags'); aMenuOrder.push('model_recommendations'); if(g_hSelf.has_bookmarks ) aMenuOrder.push('bookmarks'); aMenuOrder.push('line_break'); aMenuOrder.push('user_tags'); aMenuOrder.push('user_created_rooms'); aMenuOrder.push('member_webcams'); aMenuOrder.push('line_break');
 aMenuOrder.push('broadcast'); } else if(g_hSelf['access_level'] == 1 ) { aMenuOrder.push('my_account'); aMenuOrder.push('user_settings'); aMenuOrder.push('my_profile'); aMenuOrder.push('line_break'); aMenuOrder.push('news_feed'); aMenuOrder.push('line_break'); aMenuOrder.push('top_rooms'); aMenuOrder.push('miss_mfc'); aMenuOrder.push('model_explorer'); aMenuOrder.push('model_tags'); aMenuOrder.push('topic_tags'); aMenuOrder.push('model_recommendations'); if(g_hSelf.has_bookmarks ) aMenuOrder.push('bookmarks'); aMenuOrder.push('line_break'); aMenuOrder.push('user_tags'); aMenuOrder.push('user_created_rooms'); aMenuOrder.push('premium_features'); aMenuOrder.push('tour_lounge'); aMenuOrder.push('tour_archives'); aMenuOrder.push('tour_private_gallery'); aMenuOrder.push('tour_mail'); aMenuOrder.push('tour_my_webcam'); aMenuOrder.push('tour_group_shows_board'); aMenuOrder.push('tour_member_webcams'); } for(var n=0; n < aMenuOrder.length; n++ ) { switch(aMenuOrder[n] ) { case 'line_break': { aMenu.push("<div style=\"padding-top:2px;margin-bottom:5px;border-bottom:1px solid #DDDDDD;font-size:1px;\">&nbsp;</div>"); } break; case 'premium_features': { aMenu.push("<div style=\"padding-top:15px;padding-bottom:5px;\">" + A('faq',{ anchor: 'Premium_Membership'}) + "Premium</a> Members:</div>"); } break;
 case 'bookmarks': { aMenu.push(DrawMenuItem({ label: 'Bookmarks', a: A('bookmarks'), icon: 'png/bookmark.16x16.png' })); } break; case 'my_account': { aMenu.push(DrawMenuItem({ label: 'My Account', a: A('account'), sprite_css: 'sprite-icons sprite-my_account16x16', icon: 'png/my_account.16x16.png' })); } break; case 'user_settings': { aMenu.push(DrawMenuItem({ label: 'Personal Options', a: A('user_settings'), sprite_css: 'sprite-icons sprite-user_settings16x16', icon: 'png/user_settings.16x16.png' })); } break; case 'my_profile': { aMenu.push(DrawMenuItem({ label: 'Profiles', a: A('profiles'), sprite_css: 'sprite-icons sprite-my_profile16x16', icon: 'png/my_profile.16x16.png', extra: ( "[" + A('my_profile',{ username: g_hSelf['username'] }) + "Mine</a>] [" + A('edit_profile',{ user_id: g_hSelf['user_id'] }) + "Edit</a>]" ) })); } break; case 'create_profile': { aMenu.push(DrawMenuItem({ label: 'Create Your Profile', a: A('create_profile',{ user_id: g_hSelf['user_id'] }), sprite_css: 'sprite-icons sprite-my_profile_small', icon: 'my_profile_small.gif' })); } break; case 'top_rooms': { aMenu.push(DrawMenuItem({ label: 'Most Popular Rooms', a: A("top_rooms"), sprite_css: 'sprite-icons sprite-top_rooms16x16', icon: 'png/top_rooms.16x16.png' })); } break; case 'user_created_rooms': { aMenu.push(DrawMenuItem({
 label: 'Member Rooms', a: A("user_created_rooms"), sprite_css: 'sprite-icons sprite-ucr16x16', icon: 'ucr.16x16.png' })); } break; case 'model_explorer': { aMenu.push(DrawMenuItem({ label: 'Model Explorer', a: A("model_explorer"), sprite_css: 'sprite-icons sprite-model_matrix-sm', icon: 'model_matrix-sm.png' })); } break; case 'model_tags': { aMenu.push(DrawMenuItem({ label: 'Model Tags', a: A("model_tags"), sprite_css: 'sprite-icons sprite-tag_model16x16', icon: 'tag_model.16x16.png' })); } break; case 'topic_tags': { aMenu.push(DrawMenuItem({ label: 'Model Topics', a: A("model_topics"), icon: 'svg/topics.svg' })); } break; case 'model_recommendations': { aMenu.push(DrawMenuItem({ label: 'Models You May Like', a: A("model_recommendations"), sprite_css: 'sprite-icons sprite-model_recommendations16x16', icon: 'png/model_recommendations.16x16.png' })); } break; case 'user_tags': { aMenu.push(DrawMenuItem({ label: 'Member Tags', a: A("user_tags"), sprite_css: 'sprite-icons sprite-tag_user16x16', icon: 'tag_user.16x16.png' })); } break; case 'miss_mfc': { aMenu.push(DrawMenuItem({ label: 'Miss MyFreeCams', a: A("miss_mfc"), sprite_css: 'sprite-icons sprite-crown16x16',
 icon: 'crown.16x16.png' })); } break; case 'premium_members': { aMenu.push(DrawMenuItem({ label: 'Premium Members', a: A('faq',{ anchor: 'Premium_Membership'}), icon: '' })); } break; case 'tour_lounge': { aMenu.push(DrawMenuItem({ tour: 1, label: 'Lounge', a: A('tour',{ anchor: 'lounge' }), sprite_css: 'sprite-icons sprite-martini_316x16', icon: 'martini_3.16x16.gif' })); } break; case 'tour_archives': { aMenu.push(DrawMenuItem({ tour: 1, label: 'Archives', a: A('tour',{ anchor: 'archives' }), sprite_css: 'sprite-icons sprite-archive', icon: 'archive.gif' })); } break; case 'tour_private_gallery': { aMenu.push(DrawMenuItem({ tour: 1, label: 'Private Gallery', a: A('tour',{ anchor: 'private_gallery' }), sprite_css: 'sprite-icons sprite-camera', icon: 'camera.gif' })); } break; case 'tour_mail': { aMenu.push(DrawMenuItem({ tour: 1, label: 'MFC Mail', a: A('tour',{ anchor: 'mail' }), sprite_css: 'sprite-icons sprite-message16x16', icon: 'png/message.16x16.png' })); } break; case 'tour_my_webcam': { aMenu.push(DrawMenuItem({ tour: 1, label: 'My Webcam',
 a: A('tour',{ anchor: 'my_webcam' }), sprite_css: 'sprite-icons sprite-webcam_medium', icon: 'webcam_medium.gif' })); } break; case 'tour_group_shows_board': { aMenu.push(DrawMenuItem({ tour: 1, label: 'Group Shows', a: A("group_shows_board"), sprite_css: 'sprite-icons sprite-group_show_boardsmall', icon: 'group_show_board.small.png' })); } break; case 'tour_member_webcams': { aMenu.push(DrawMenuItem({ tour: 1, label: 'Member Webcams', a: A('tour',{ anchor: 'member_webcams' }), sprite_css: 'sprite-icons sprite-member_webcams16x16', icon: 'member_webcams.16x16.png' })); } break; case 'lounge': { aMenu.push(DrawMenuItem({ label: 'Lounge', a: A("player",{ broadcaster_id: g_hLoungeIds['Lounge'], target: 'main', title: 'Go to the Lounge' }), sprite_css: 'sprite-icons sprite-lounge16x16', icon: 'png/lounge.16x16.png', extra: A("player",{ broadcaster_id: g_hLoungeIds['Lounge'], target: 'new_window', title: 'Open the Lounge in a popup window' }) + "<span class='sprite-link sprite-icons sprite-popup12x12' style='display:inline-block;vertical-align:middle;margin:0px;'></span></a>" })); } break; case 'lounge1000': { aMenu.push(DrawMenuItem({ label: 'Lounge1000', a: A("player",{ broadcaster_id: g_hLoungeIds['Lounge1000'], target: 'main', title: 'Go to the Lounge1000' }), sprite_css: 'sprite-icons sprite-lounge100016x16', icon: 'png/lounge1000.16x16.png', extra: A("player",{ broadcaster_id: g_hLoungeIds['Lounge1000'], target: 'new_window', title: 'Open the Lounge1000 in a popup window' }) + "<span class='sprite-link sprite-icons sprite-popup12x12' style='display:inline-block;vertical-align:middle;margin:0px;'></span></a>" })); } break; case 'lounge10000': { aMenu.push(DrawMenuItem({ label: 'Lounge10000', a: A("player",{ broadcaster_id: g_hLoungeIds['Lounge10000'], target: 'main', title: 'Go to the Lounge10000' }), sprite_css: 'sprite-icons sprite-lounge1000016x16', icon: 'png/lounge10000.16x16.png', extra: A("player",{ broadcaster_id: g_hLoungeIds['Lounge10000'], target: 'new_window', title: 'Open the Lounge10000 in a popup window' }) + "<span class='sprite-link sprite-icons sprite-popup12x12' style='display:inline-block;vertical-align:middle;margin:0px;'></span></a>" })); } break;
 case 'message': { aMenu.push(DrawMenuItem({ label: 'MFC Mail', a: A('message'), sprite_css: 'sprite-icons sprite-message16x16', icon: 'png/message.16x16.png', extra: "<span id=inbox_alert style='display:none;'></span>" })); } break; case 'chat_logs': { aMenu.push(DrawMenuItem({ label: 'Archives', a: A('chat_logs'), sprite_css: 'sprite-icons sprite-archive16x16', icon: 'png/archive.16x16.png' })); } break; case 'exclusive_gallery': { aMenu.push(DrawMenuItem({ label: 'Private Gallery', a: A('exclusive_gallery'), sprite_css: 'sprite-icons sprite-exclusive_gallery16x16', icon: 'png/exclusive_gallery.16x16.png' })); } break; case 'group_shows_board': { aMenu.push(DrawMenuItem({ label: 'Group Shows', a: A("group_shows_board"), sprite_css: 'sprite-icons sprite-group_show_boardsmall', icon: 'group_show_board.small.png' })); } break; case 'news_feed': { aMenu.push(DrawMenuItem({ label: 'News Feed', a: A("news_feed"), sprite_css: 'sprite-icons sprite-newsfeed16x16', icon: 'newsfeed.16x16.png' })); } break; case 'member_webcams': { aMenu.push(DrawMenuItem({ label: 'Member Webcams', a: A("member_webcams"), sprite_css: 'sprite-icons sprite-member_webcams16x16', icon: 'png/member_webcams.16x16.png' })); } break; case 'broadcast': {
 aMenu.push(DrawMenuItem({ label: 'Start My Webcam', a: A("broadcast"), sprite_css: 'sprite-icons sprite-broadcast16x16', icon: 'png/broadcast.16x16.png', special_icon: '<span id=broadcast_status_icon></span>', special_label: '<span id=broadcast_status>', extra: '</span>' })); } break; } } return aMenu;}function LoadFriends() { FriendsList.Load(); }FriendsList = { aChatIconEvaluationList: []};FriendsList.Load = function(){ if(! LoadFriends.bCompress ) { LoadFriends.bCompress = true; LoadFriends.nCompressTimer = setTimeout(function() { LoadFriends.bCompress = false; }, 1000 ); } else { clearTimeout(LoadFriends.nCompressCall); LoadFriends.nCompressCall = setTimeout(function(){ LoadFriends(); }, 1000 ); return; } var aMenu = new Array(); if(g_hSelf.access_level == 0 ) { SetHTML('online_friends_list',"\n <div style='font-size:10px'> Your online models and friends are shown here. </div> ");
 SetHTML('offline_friends_list',"\n <div style='font-size:12px'> You can message your offline friends too! </div> "); } else { var aList = SortedUserKeys('username'); var haOnline = { members: new Array(), models: new Array() }; for(var nK=0; nK < aList.length; nK++ ) { nRemoteUserID = aList[nK]; if(g_hUsers[nRemoteUserID] && g_hUsers[nRemoteUserID]['friend'] == true && g_hUsers[nRemoteUserID]['state'] != FCVIDEO_OFFLINE && typeof(g_hUsers[nRemoteUserID]['state'] ) != 'undefined' ) { var sType = g_hUsers[nRemoteUserID].access_level == 4 ? 'models' : 'members'; haOnline[ sType ].push(FriendsList.BuildEntry(nRemoteUserID ) ); } } var nOfflineLimit = 0; var aOffline = new Array(); var aList = SortedUserKeys('lastlogin'); aList = SortedUserKeys('username', false, aList.splice(0,50) ); for(var nK=0; nK < aList.length; nK++ ) { nRemoteUserID = aList[nK]; if ( g_hUsers[nRemoteUserID] && g_hUsers[nRemoteUserID]['friend'] == true ) { if ( g_hUsers[nRemoteUserID]['state'] != FCVIDEO_OFFLINE ) { continue; } if(nOfflineLimit >= 50 ) { aOffline.push("...<br><br>This list is limited to the 50 friends who have most recently logged on."); break; } aOffline.push(FriendsList.BuildEntry(nRemoteUserID ) ); nOfflineLimit++;
 } } var aOnline = new Array(); if(t.g_hSelf['away_state'] ) { aOnline.push(" <div style='white-space:nowrap;background-color:yellow;padding:2px 0px;margin-bottom:7px;'> Status: <b>Away</b> <span style='font-size:10px;'>(<a href="top.html?cache_id=1423267822&amp;#" onClick=\"ResetAwayStatus();\">I'm back</a>)</span> </div> "); } var nSpecifiedHeight = 0; if(mfcClickDrag.hSpecifiedDimension.online_friends_scroll ) { nSpecifiedHeight = mfcClickDrag.hSpecifiedDimension.online_friends_scroll.height; } else if(g_hSelf.online_friends_list_height && ! g_UA.mobile && ! g_UA.tablet ) { nSpecifiedHeight = g_hSelf.online_friends_list_height; } aOnline.push("<div id=online_friends_scroll style=\"overflow-y:auto;overflow-x:hidden;" + ( nSpecifiedHeight ? ('height:' + nSpecifiedHeight + ';') : '' ) + "\">" ); for(var n=0; n < haOnline.models.length; n++ ) { aOnline.push(haOnline.models[n] ); } if(haOnline.members.length ) { aOnline.push("<div style=\"padding:14px 0px 4px 0px;text-align:center;font-style:italic;\">Member Friends</div>"); } for(var n=0; n < haOnline.members.length; n++ ) { aOnline.push(haOnline.members[n] ); } if ( g_bLoginDone && haOnline.members.length == 0 && haOnline.models.length == 0 ) aOnline.push(" No friends online currently."); if ( g_bLoginDone && aOffline.length == 0 ) { aOffline.push("Your offline friends will appear in this box."); } aOnline.push("</div>"); aOnline.push("<div id=online_friends_control_message></div>"); aOnline.push("<br>" + A("pm_prompt") + "Send Private Message</a>"); aOnline.push("<br>" + A("manage_friends2") + "Manage / Add Friends</a>"); SetHTML('online_friends_list',aOnline.join('')); SetHTML('offline_friends_list',aOffline.join(''));
 if(FcAddFriend.bHasFriends && ( ! FcAddFriend.bFriendsLoaded || ( FcAddFriend.LoadingMessage.nPreviousValue != t.FcAddFriend.nLoadingMax ) ) ) { FcAddFriend.LoadingMessage(); } if(g_UA.Chrome ) { for(var sK in g_hWindows ) { if(g_hWindows[sK].window && g_hWindows[sK].window.ChatBox ) { g_hWindows[sK].window.ChatBox.ScrollToBottom('friends_list'); } } } FriendsList.RefreshChatIcons(); }};FriendsList.BuildEntry = function(nUserId ){ var aBio = new Array(); var hUser = g_hUsers[nUserId]; var sStyle = 'display:inline-block;'; if(hUser['state'] == FCVIDEO_OFFLINE ) { if (g_UA.IE ) sStyle += "filter:progid:DXImageTransform.Microsoft.Alpha(opacity=50);"; else sStyle += "-moz-opacity:0.5;opacity:0.5;"; } if(g_UA.tablet || g_UA.mobile ) aBio.push("&nbsp;&nbsp;"); aBio.push("<a href="top.html?cache_id=1423267822&amp;#" onClick=\"popUserMenu.open(" + nUserId + ",g_oDhtmlPopup); return false;\" title=\"" + ("Show Options Menu for "+hUser['username']+".") + "\" style='vertical-align:-25%;'>"); if(hUser.avatars ) { aBio.push(""); var sSrc;
 if(hUser['broken_avatar'] ) sSrc = '../images/misc/generic_avatar.20x20.gif'; else sSrc = AvatarUrl(nUserId,20); aBio.push("<img sr"+"c='" + sSrc + "' class='tiny_avatar_border' height=16 width=16 onError=\" this.src = ('http://a.mfcimg.com/mfc2/images/icons/people/small_woman_1.png'); t.g_hUsers[" + nUserId + "]['broken_avatar'] = 1; \" " + t.PopupBioHandlerCode(nUserId ) + " >"); } else { aBio.push("<span class='sprite-link " + popUserMenu.people_icon_sprite_css(nUserId ) + "' style=\"" + sStyle + "\"></span>") } aBio.push("</a>"); if(hUser['broadcasting_video'] > 0 || hUser['state'] == w.FCVIDEO_TX_IDLE || hUser['state'] == w.FCVIDEO_TX_RESET || hUser['state'] == w.FCVIDEO_TX_PVT || hUser['state'] == w.FCVIDEO_TX_GRP ) { if(g_UA.tablet || g_UA.mobile ) aBio.push("&nbsp;&nbsp;"); var sCamLink = A("pm_friend",{user_id:hUser['user_id'],username:hUser['username'],load_video:true,title:("View Webcam of " + hUser.username + " in PM window.")}); aBio.push(sCamLink + "<span class='sprite-link sprite-icons sprite-webcam_medium' style='display:inline-block;vertical-align:middle;'></span></a>"); } if (IsBroadcastState(hUser['state'] )) { var sIcon; sTitle = "Enter Chat Room of " + hUser.username + "."; if (hUser['state'] == w.FCVIDEO_TX_IDLE ) { sIcon = 'sprite-icons sprite-open_door'; } else if(hUser['state'] == w.FCVIDEO_TX_GRP ) { sIcon = 'sprite-icons sprite-closed_door_g'; sTitle += " She is in a Group Show."; } else if(hUser['state'] == w.FCVIDEO_TX_PVT ) { if(hUser['truepvt'] ) { sIcon = 'sprite-icons sprite-closed_door_locked'; sTitle += " She is in a True Private Session.";
 } else { sIcon = 'sprite-icons sprite-closed_door'; sTitle += " She is in a Private Session."; } } else { sIcon = 'sprite-icons sprite-faded_door'; sTitle += " She is away from her cam."; } if(g_UA.tablet || g_UA.mobile ) aBio.push("&nbsp;&nbsp;"); aBio.push(A('player',{ broadcaster_id: nUserId, target: 'main',title: sTitle}) + "<span class='sprite-link " + sIcon + "' style='display:inline-block;vertical-align:middle;'></span></a>"); } if ( g_hUsers[ nUserId ]['notes'] ) { aBio.push('&nbsp;' + A('user_notepad',{ load_user_id: nUserId, target:'new_window' }) + "<span class='sprite-link sprite-icons sprite-notes' style='display:inline-block;vertical-align:middle;'></span></a> "); } var sSpacing=''; if(g_UA.mobile ) { sSpacing = "height:32px;"; } else if(g_UA.tablet ) { sSpacing = "height:25px;"; } else { sSpacing = "height:22px;"; } if (hUser['state'] != FCVIDEO_OFFLINE) { var sStatusClass; var sStyle = ''; if (IsSessionState(hUser['state'])) { sStatusClass = 'friend_sessionbroadcast'; } else { sStatusClass = 'friend_sessionbroadcast friend_active'; } sStyle += MfcCustomFonts.prototype.get_style(hUser ); return "<div id=online_friend_" + nUserId + " class=" + sStatusClass + " style='position:relative;white-space:nowrap;vertical-align:middle;" + sSpacing +"' >" + A("pm_friend",{ user_id: hUser['user_id'], username: hUser['username'], style: sStyle }) + "<div class=online_friend_chat_icon id=online_friend_chat_bubble_" + nUserId + "></div>" + "<span style=\"" + sStyle + "\" " + PopupBioHandlerCode(nUserId) + ">" + hUser['username'] + "</span></a> " + aBio.join('') + "</div>";
 } else { var sStyle = MfcCustomFonts.prototype.get_style(hUser ); return "<div class=friend_offline style='position:relative;white-space:nowrap;" + sSpacing + "'>" + A("pm_friend",{user_id:hUser['user_id'],username:hUser['username']}) + "<span style=\"" + sStyle + "\">" + hUser['username'] + "</span></a> " + aBio.join('') + "</div>"; }};FriendsList.RefreshChatIcons = function(nUserId ){ if(nUserId ) { FriendsList.aChatIconEvaluationList.push(nUserId ); } for(var nPMUserId in g_hoPMWindows ) { FriendsList.aChatIconEvaluationList.push(nPMUserId ); } for(var a=0; a < FriendsList.aChatIconEvaluationList.length; a++ ) { var nPMUserId = FriendsList.aChatIconEvaluationList[a]; g_hoPMWindows[nPMUserId]; var oEl; if(oEl = GetEl('online_friend_chat_bubble_' + nPMUserId ) ) { if(g_hoPMWindows[nPMUserId] ) { if(g_hoPMWindows[nPMUserId].blinking ) oEl.innerHTML = "<img src='../../ico/chat_bubble_orange.svg'>"; else oEl.innerHTML = "<img src='../../ico/chat_bubble.svg'>"; } else { oEl.innerHTML = ""; } } }};function DrawMenuItem(hItem ){ var sStyle = ''; if(g_UA.mobile ) { sStyle = "height:30px;"; } else if(g_UA.tablet ) { sStyle = "height:23px;"; } var sTpl = " <div class=pmenu %PMENU_TAG% style='white-space:nowrap;" + sStyle + "'>\
 <div class=pmenu_icon> %SPECIAL_ICON% %A%%ICON%</a> </div> %SPECIAL_LABEL% %A%%LABEL%</a> %EXTRA% </div> "; var sHost = g_mfcImageHost.host(hItem.label ); if ( hItem.sprite_css ) hItem.icon = "<div class='menu-item-icon sprite-link " + hItem.sprite_css + "'></div>"; else if ( hItem.icon && ( hItem.icon.indexOf('svg/') == 0 ) ) hItem.icon = "<i"+"mg sr"+"c=/mfc2/images/icons/" + hItem.icon + " height=16 style='vertical-align:middle;margin:1px;'>"; else hItem.icon = "<i"+"mg sr"+"c=http://" + sHost + "/mfc2/images/icons/" + hItem.icon + " style='vertical-align:middle;margin:1px;'>"; hItem.extra = hItem.extra || ''; hItem.special_icon = hItem.special_icon || ''; hItem.special_label = hItem.special_label || ''; if(hItem.tour ) { hItem.PMENU_TAG = " style='margin-left:10px;' "; } return MfcStringUtilities.parse_template(sTpl,hItem);}function DrawGuestMenu(){ var aMenu = new Array(); var sGuestName = g_hSelf['username'] || '...'; if(! g_hSelf['guest_username'] ) { aMenu.push("\n You are <b>" + g_hSelf['username'] + "</b><br><br> <form onSubmit=\" return GuestSignup.SubmitGuestName(); \"> <div style=\"text-align:center;\"> <input type=text id=guest_username value=\"Create Username\" onKeyUp=\"GuestSignup.CheckGuestName_Queue(this.value);\" style=\"font-size:13px;width:140px;\" onClick=\"if(this.value=='Create Username') this.value='';\"> <div id=username_status>&nbsp;</div> <input type=button value=\"Create Account\" id=username_change_submit style=\"font-size:13px;width:120px;\" disabled=true onClick=\"GuestSignup.SubmitGuestName()\"> </div> </form> "); } else { aMenu.push("\
 <b>" + g_hSelf['guest_username'] + "</b> has been reserved for you. <br> <span style='font-size:10px;'>[<a href="http://www.myfreecams.com/mfc2/static/\&quot;#\"" onClick=\" LoadPersonalMenu.SuspendUpdates = 0; GuestSignup.ResetGuestName(); return false;\">Reset Username</a>]</span> <br><br> <form onSubmit='return GuestSignup.Submit();'> Enter your e-mail below to create your account free.<br><br> <div style=\"text-align:center;\"> <input type=text id=guest_email style=\"font-size:13px;width:140px;\" onKeyUp=GuestSignup.Validate() value=\"E-mail Address\" onClick=\"if(this.value=='E-mail Address') this.value='';\"> <input type=button id=guest_signup_submit value=\"Create Account\" style=\"font-size:13px;\" disabled=true onClick=\"GuestSignup.Submit()\"> </div> </form> "); } aMenu.push("\n <br> Members use this toolbar to access:<br> <br> - " + A('tour',{ anchor:'instant_message' }) + "instant messages</a><br> - " + A('tour',{ anchor:'special_features' }) + "special features</a><br> - " + A('tour',{ anchor:'my_webcam' }) + "your own webcam</a><br><br> " + A('register',{ target: 'new_window' }) + "Become a member free</a><br><br> " + A('login')+"Log in to your account</a> <br><br> "); return aMenu.join('');}var GuestSignup = { sNewUsername: '', oCheckGuestNameReq: false, bUsernameAvailable: false};GuestSignup.Validate = function(){ var sEmail = GetEl('guest_email').value; if (sEmail.length > 5 && sEmail.match(/\w@.+\.\w+/)) GetEl('guest_signup_submit').disabled = false; else GetEl('guest_signup_submit').disabled = true;};GuestSignup.Submit = function(){ if(GetEl('guest_signup_submit').disabled == true ) return false;
 if(ValidateEmail ) { GetEl('guest_email').value = GetEl('guest_email').value.replace(/ /g,''); var sErr; if(sErr = ValidateEmail(GetEl('guest_email').value ) ) { alert(sErr); return false; } } var sQS = "submit_signup=1&mode=side_bar&username=" + g_hSelf['guest_username'] + "&email=" + encodeURIComponent(GetEl('guest_email').value ); window.open('../php/signup.php?' + sQS ,'account','height=550,width=800,status=0,resizable=33'); return false;};GuestSignup.CheckGuestName_Queue = function(sUsername){ var oEl_guest_username; if(oEl_guest_username = GetEl('guest_username') ) { sUsername = oEl_guest_username.value; } sUsername = sUsername.replace(/\W/,''); sUsername = sUsername.substr(0,20); if(oEl_guest_username ) { oEl_guest_username.value = sUsername; } if(! sUsername.match(/\w{5,}/) && ( oEl_guest_username = GetEl('username_change_submit') ) ) { GuestSignup.bUsernameAvailable = false; oEl_guest_username.disabled = true; SetHTML('username_status',"&nbsp;"); return; } GuestSignup.sNewUsername = sUsername; clearTimeout(GuestSignup.oCheckGuestName_Timeout ); GuestSignup.oCheckGuestName_Timeout = setTimeout(function(){ GuestSignup.CheckGuestName(sUsername)},500);};GuestSignup.CheckGuestName = function(sUsername){ if(sUsername.match(/adm.n|staff|mfc|myfreecams|supp.rt|tech|manage|system|server/i) ) { GuestSignup.bUsernameAvailable = false; SetHTML('username_status',"[<span style='color:red;'>Not permitted</span>]");
 GetEl('username_change_submit').disabled = false; return; } if(! GuestSignup.oCheckGuestNameReq ) { GuestSignup.oCheckGuestNameReq = createRequestObject(); } GuestSignup.oCheckGuestNameReq.open("get","../php/signup.php?check_username=1&potential_username="+sUsername+"&" + Math.random()); GuestSignup.oCheckGuestNameReq.onreadystatechange = GuestSignup.CheckGuestName_Response; GuestSignup.oCheckGuestNameReq.send(null);};GuestSignup.CheckGuestName_Response = function(){ if ( GuestSignup.oCheckGuestNameReq.readyState != 4) { return; } if ( GuestSignup.oCheckGuestNameReq.responseText == -1) { GuestSignup.bUsernameAvailable = true; SetHTML('username_status',"[<span style='color:green;'>Username available</span>]"); GetEl('username_change_submit').disabled = false; } else { GuestSignup.bUsernameAvailable = false; SetHTML('username_status',"[<span style='color:red;'>" + GuestSignup.oCheckGuestNameReq.responseText.replace(/ +$/,'') + "</span>]" ); GetEl('username_change_submit').disabled = true; }};GuestSignup.ResetGuestName = function(sMode ){ g_hSelf['guest_username'] = ''; LoadPersonalMenu('reset');};GuestSignup.SubmitGuestName = function(sMode ){ if(GuestSignup.bUsernameAvailable != true || GetEl('username_change_submit').disabled == true ) return false; LoadPersonalMenu.SuspendUpdates = 0; g_hSelf['guest_username'] = GuestSignup.sNewUsername; LoadPersonalMenu('reset'); return false;
};var CheckPmUsername = { oTimeout: null, sUsername: '', oRequest: null};CheckPmUsername.Queue = function(){ PmUsernamePrompt.nUserId = 0; var sUsername = document.getElementById('pm_username_lookup').value; sUsername = sUsername.replace(/\W/,''); sUsername = sUsername.substr(0,20); SetHTML('username_recognized',"&nbsp;"); if(! sUsername.match(/\w{4,}/) ) { return; } CheckPmUsername.sUsername = sUsername; if ( CheckPmUsername.oTimeout ) { clearTimeout(CheckPmUsername.oTimeout); CheckPmUsername.oTimeout = setTimeout(function(){ CheckPmUsername.Check(sUsername)},500); } else { CheckPmUsername.Check(sUsername ); CheckPmUsername.oTimeout = setTimeout(function(){},500); }};CheckPmUsername.Check = function(sUsername){ FcUsernameLookup.Query(sUsername, CheckPmUsername.Response );};CheckPmUsername.Response = function(nErrCode, sUsername, hUser, hContext ){ if ( hUser ) { PmUsernamePrompt.nUserId = hUser.user_id; g_bUsernameAvailable = false; SetHTML('username_recognized'," <span style='color:green;'>Username found!</span> (<a href="top.html?cache_id=1423267822&amp;#" onClick=\"popUserMenu.open(" + PmUsernamePrompt.nUserId + ",g_oDhtmlPopup); return false;\">Menu</a>) ");
 clearTimeout(PmUsernamePrompt.oTimer); var oEl = document.getElementById('pm_username_lookup_submit'); if(oEl ) { oEl.disabled = false; } } else { g_bUsernameAvailable = true; try { SetHTML('username_recognized',"[<span style='color:red;'>We can't find a user by this name</span>]"); } catch(oError) {} try { document.getElementById('pm_username_lookup_submit').disabled = true; } catch(oError) {} }};function ResetAwayStatus(){ g_hSelf['away_state'] = false; TxCmd(FCTYPE_PRIVACY, g_hSelf['sessionid'], 0, g_hSelf['user_id'], g_hSelf['privacy_state'] , null ); LoadFriends();}function PopupBioHandlerCode(nUserId, sMode ){ if(g_UA.tablet || g_UA.mobile ) { return; } if ( ! g_hUsers[nUserId] ) { return; } var sH = " name=user"+ nUserId +" onMouseOver=\" t.PopupBio_onMouseOver(g_oDhtmlPopup," + nUserId + ",'" + sMode + "'); \" onMouseOut=\" t.PopupBio_onMouseOut(g_oDhtmlPopup); \" "; return sH;}function onMouseDown_Handler(e ){ var bRightClick; if (!e) var e = window.event; if (e.which) bRightClick = (e.which == 3);
 else if (e.button) bRightClick = (e.button == 2); if(bRightClick ) { oEvent = ( navigator.appName == "Microsoft Internet Explorer" && event && event.clientX ) ? event : e; if(oEFP = document.elementFromPoint(oEvent.clientX,oEvent.clientY) ) { for(var nCounter=0; nCounter<5; nCounter++ ) { if(oEFP && oEFP.getAttribute('name') ) { break; } else { oEFP = oEFP.parentNode; } } } if(oEFP && oEFP.getAttribute('name') && oEFP.getAttribute('name').match(/user(\d+)/) ) { popUserMenu.open(RegExp.$1,g_oDhtmlPopup); } }}function PopupBio_onMouseOver(oDhtmlPopup, nUserId, sMode ){ if(( sMode == 'livesnap'|| sMode == 'livesnap_over_text' || sMode == 'pm_livesnap' ) && oDhtmlPopup ) { if(sMode == 'pm_livesnap' ) { oDhtmlPopup.open(t.LiveSnapImage(nUserId,320,160,120), 'child,no_close_button,hover_offset:50,height:120,width:160' ); } else { sExtraStyle = MfcCustomFonts.prototype.get_style(g_hUsers[nUserId] ); oDhtmlPopup.open("<span style=\"font-size:14px;" + sExtraStyle + "\"\><b>" + g_hUsers[nUserId].username + "</b></span><br>" + t.LiveSnapImage(nUserId,320,320,240), 'height:260,width:320,child,no_close_button,' + ( ( sMode == 'livesnap_over_text' ) ? 'hover_over_text' : 'hover' ) ); }
 }}function PopupBio_onMouseOut(oDhtmlPopup ){ if(oDhtmlPopup ) { oDhtmlPopup.close('popup_child','hover,no_fade'); }}function StateMessage(sUsername, nModelState, nPresentationState ){ var sStateMsg=''; if(nPresentationState == t.EVSESSION_PRIVATE && nModelState == t.FCVIDEO_TX_PVT) { sStateMsg = "Private Show with " + sUsername; } else if(nPresentationState == t.EVSESSION_GROUP && nModelState == t.FCVIDEO_TX_GRP) { sStateMsg = "Group Show with " + sUsername; } else if(nPresentationState == t.EVSESSION_VOYEUR) { sStateMsg = "You are Spying on " + sUsername; } else { if ( nModelState == t.FCVIDEO_TX_IDLE ) sStateMsg = sUsername + " is in public chat"; else if ( nModelState == t.FCVIDEO_TX_PVT ) sStateMsg = sUsername + " is in a Private Show"; else if ( nModelState == t.FCVIDEO_TX_GRP ) sStateMsg = sUsername + " is in a Group Show"; else if ( nModelState == t.FCVIDEO_OFFLINE ) sStateMsg = sUsername + " is offline"; else if ( nModelState == t.FCVIDEO_RX_IDLE ) sStateMsg = sUsername + " Webcam is Off"; else if ( nModelState == t.FCVIDEO_TX_AWAY ) sStateMsg = sUsername + " is temporarily away"; } return sStateMsg;}function GetStateMessage(nUserId, nPresentationState, sUsername ){ if(! t.g_hUsers[ nUserId ] ) { return ''; } var sStateMsg=''; var nModelState = g_hUsers[ nUserId ].state; sUsername = sUsername ? sUsername : g_hUsers[ nUserId ].username; if(nPresentationState == t.EVSESSION_PRIVATE && nModelState == t.FCVIDEO_TX_PVT ) { sStateMsg = "Private Show with " + sUsername; } else if(nPresentationState == t.EVSESSION_GROUP && nModelState == t.FCVIDEO_TX_GRP ) { sStateMsg = "Group Show with " + sUsername; } else if(nPresentationState == t.EVSESSION_VOYEUR ) { sStateMsg = "You are Spying on " + sUsername;
 } else { if(g_hUsers[ nUserId ].new_model && g_hUsers[ nUserId ].new_model <= g_hSelf.new_model_days ) sUsername = " <b>*NEW*</b> " + sUsername; if ( nModelState == t.FCVIDEO_TX_IDLE ) sStateMsg = sUsername + " is in public chat"; else if ( nModelState == t.FCVIDEO_TX_PVT && g_hUsers[ nUserId ]['truepvt'] ) sStateMsg = sUsername + " is in a TruePrivate Show"; else if ( nModelState == t.FCVIDEO_TX_PVT ) sStateMsg = sUsername + " is in a Private Show"; else if ( nModelState == t.FCVIDEO_TX_GRP ) sStateMsg = sUsername + " is in a Group Show"; else if ( nModelState == t.FCVIDEO_OFFLINE ) sStateMsg = sUsername + " is offline"; else if ( nModelState == t.FCVIDEO_RX_IDLE ) sStateMsg = sUsername + " Webcam is Off"; else if ( nModelState == t.FCVIDEO_TX_AWAY ) sStateMsg = sUsername + " is temporarily away"; } return sStateMsg;}function HideModel(nModelId,hOptions){ hOptions = hOptions || {}; if(hOptions['batch'] ) { for(nK in hOptions['batch'] ) { var hUser = g_hUsers[ hOptions['batch'][nK] ]; if(hUser ) { hUser.hidden = hOptions['unhide'] ? 0 : 1; } } TxCmd(t.FCTYPE_HIDEUSERS, g_nSessionId, 0, nModelId , hOptions['unhide'] ? FCCHAN_PART : FCCHAN_JOIN, "[" + hOptions['batch'].join(',') + "]" ); } else { var hUser = g_hUsers[ nModelId ]; if(hUser ) { hUser.hidden = hOptions['unhide'] ? 0 : 1; } TxCmd(t.FCTYPE_HIDEUSERS, g_nSessionId, 0, nModelId , hOptions['unhide'] ? FCCHAN_PART : FCCHAN_JOIN ); } for(var sK in g_hWindows) { if(! g_hWindows[sK].window ) { continue; } if(g_hWindows[sK].window.ConfigureUserControls ) { g_hWindows[sK].window.ConfigureUserControls(); } if(g_hWindows[sK].window.OnlineBroadcasterList ) { g_hWindows[sK].window.OnlineBroadcasterList.Refresh('force'); } if(g_hWindows[sK].window.LoadHiddenModelsList ) { g_hWindows[sK].window.LoadHiddenModelsList(); } } if(! hOptions.pm_window ) { g_oDhtmlPopup.close(); } Update_popUserMenu(nModelId ); PopularRooms.Render();}function ParseJSON(sObject ){ if (!sObject) return null; try { return JSON.parse(sObject ); }
 catch(oError ) { Log("JSON Error: " + oError + ", " + oError.description ); } return null;}function FcChannelMessage(nFrom, nTo, nArg1, nArg2, nUserId, sMessage ){ if ( g_bLoadChat > 0 && nUserId != g_hSelf['user_id'] ) { LoadChat(); return; } if (nArg1 == FCRESPONSE_ERROR) { if (nArg2 == FCCHAN_ERR_NOCHANNEL) { alert("channel does not exist"); } else if (nArg2 == FCCHAN_ERR_GUESTMUTE) { nPlayerOwnerId = GetRoomOwnerId(nTo ); if(g_hoPlayerWindows[ nPlayerOwnerId ] ) { if (g_hSelf['access_level'] == 1) sMessage = "Basic members have been temporarily muted by the model. Buy tokens once to become a Premium Member for life."; else
 sMessage = "Guests have been temporarily muted by the model. Members can still chat normally. Please " + A('login') + "login</a> or " + A('register') + "register free</a> to chat."; var oPlayerWindow; if(oPlayerWindow = WindowHandle.Get('player', nPlayerOwnerId ) ) oPlayerWindow.ChatQueue.Format_Append(sMessage, 0 ); } } return; } nPlayerOwnerId = GetRoomOwnerId(nTo ); if(( g_hSelf['mute_guests'] == 1 && g_hUsers[nUserId] && g_hUsers[nUserId]['access_level'] == 0) || (g_hSelf['mute_regs'] == 1 && g_hUsers[nUserId] && g_hUsers[nUserId]['access_level'] == 1) ) { Log('CMESG mute guests/regs on skip'); return; } if(nArg2 & FCCHAN_OLDMSG && g_hUsers[nUserId] && g_hUsers[nUserId]['state'] == FCVIDEO_OFFLINE ) { g_hUsers[nUserId]['oldmsg'] = 1; } else if(g_hUsers[nUserId] && g_hUsers[nUserId]['state'] != FCVIDEO_OFFLINE ) { g_hUsers[nUserId]['oldmsg'] = 0; } if(nArg2 == FCCHAN_WELCOME ) { RoomTopicHandler(sMessage, nPlayerOwnerId ); } if(! g_hoPlayerWindows[ nPlayerOwnerId ] ) { Log('CMESG routing cmesg to '+nPlayerOwnerId+' but it doesnt exist'); return; } var hMsg = null; try { hMsg = ParseJSON(sMessage ); } catch(e) { Log("FCTYPE_CMESG parsing error");
 return; } for(var sK in hMsg ) { if(typeof(hMsg[sK] ) == "string" ) { hMsg[sK] = decodeURIComponent(hMsg[sK] ); } } if(! g_hUsers[nUserId] ) { Log("FCTYPE_CMESG called without any user association"); return; } if(hMsg == null ) { Log("FCTYPE_CMESG called without any json code"); return; } var sMessage = hMsg['msg']; var hOptions = { 'room_owner_id': nPlayerOwnerId, 'type': 'player', 'obj': sMessage, 'from': nUserId, 'oldmsg': ( nArg2 == FCCHAN_OLDMSG ? 1 : 0 ), 'welcome': ( nArg2 == FCCHAN_WELCOME ? 1 : 0 ) }; if(nArg2 == FCCHAN_OLDMSG || ( g_hUsers[nUserId] && g_hUsers[nUserId]['oldmsg'] == 1 && g_hUsers[nUserId]['state'] == FCVIDEO_OFFLINE ) ) { hOptions['oldmsg'] = 1; } if(hMsg.lv === 0 ) { hOptions.userDetails = { sessionid: hMsg.sid, username: hMsg.nm, access_level: hMsg.lv };
 } if(nPlayerOwnerId ) { hOptions['broadcaster_id'] = nPlayerOwnerId; } var oPlayerWindow; if(oPlayerWindow = WindowHandle.Get('player', nPlayerOwnerId ) ) { oPlayerWindow.ChatQueue.Format_Append(sMessage, nUserId, hOptions ); if(nPlayerOwnerId && ! hOptions['oldmsg'] && g_hUsers[ nUserId ]['access_level'] == 4 && ! g_hSelf['access_level'] ) { oPlayerWindow.g_nModelToGuestChatCount++; } }}function Sound(sMode, nSound ){ if ( g_hSelf['access_level'] < 1 ) { return; } var sSound; if (sMode == 'sound_model_friend_login') sSound = 'gling'; else if (sMode == 'sound_user_friend_login') sSound = 'notify'; else if (sMode == 'sound_new_model_login') sSound = 'diamond'; else if (sMode == 'sound_model_friend_private') sSound = 'heartput'; else { nSound = nSound || g_hSelf['pm_sound_type'] || 5; sSound = "ding" + nSound + "_" + sMode; } if(! hUA.FlashAvailable || g_UA.Chrome >= 32 ) { Log('Sound(' + sMode + ') w/flash ' + sSound ); if(! Sound.hElements ) { Sound.hElements = {}; } if(! Sound.hElements[ sSound ] ) { var sFile = g_UA.IE ? ('mp3/' + sSound + '.mp3') : ( sSound + '.wav' ); Sound.hElements[ sSound ] = document.createElement('audio');
 Sound.hElements[ sSound ].setAttribute('src', '/mfc2/sounds/' + sFile ); Sound.hElements[ sSound ].volume = 0.2; } Sound.hElements[ sSound ].play(); } else { Log('Sound(' + sMode + ') w/audio ' + sSound ); var oFlashUtilities = getFlashObject('flash_utilities'); if(oFlashUtilities && typeof(oFlashUtilities.SetVariable) != 'undefined' ) { oFlashUtilities.SetVariable("/:g_sSound", sSound ); oFlashUtilities.SetVariable("/:g_sAction", "play_sound"); } }}function getFlashObject(sFlashId,oD,oW){ var oW = oW || window; var oD = oD || document; if (oW.document[sFlashId]) { return oW.document[sFlashId]; } if (navigator.appName.indexOf("Microsoft Internet")==-1) { if (oD.embeds && oD.embeds[sFlashId]) { return oD.embeds[sFlashId]; } } else { return oD.getElementById(sFlashId); }}function FriendLimiter(oCaller){ return; oCaller = oCaller || this; var nFriendCount = 0; for(var sK in g_hUsers) {
 if(g_hUsers[sK]['friend'] ) { nFriendCount++; } } if(g_hSelf['access_level'] == 1 && nFriendCount > 2000 ) { oCaller.alert("Sorry, only premium members can have more than 2000 friends at a time!\n \n \nYou can remove some from the Set Chat Options window, or purchase some tokens to become a premium member."); return true; } else { return false; }}function Update_popUserMenu(nUserId ){ popUserMenu.update(); try { for(var sWindow in g_hWindows ) { if(g_hWindows[sWindow].window && g_hWindows[sWindow].window.popUserMenu && g_hWindows[sWindow].window.popUserMenu.nCurrentUserId == nUserId ) { g_hWindows[sWindow].window.popUserMenu.update(g_hUsers[nUserId] ); } } } catch(oError ) { Log("Update_popUserMenu error: " + oError.description ); } } function TxAddRemove(sType, sMixedId, sAction, hOptions ){ hOptions = hOptions || {}; var nFC_TYPE_CODE; var bNumericId = sMixedId.match(/^\d+$/) ? true : false;
 if(sType == 'friend' ) { nFC_TYPE_CODE = FCTYPE_ADDFRIENDREQ; if(sAction == 'add' && FriendLimiter(this) ) return; } else if(sType == 'ignore' ) { nFC_TYPE_CODE = FCTYPE_ADDIGNORE; if (hOptions['with_alert']) { alert("You will no longer see " + g_hUsers[nIgnoreUserId]['username'] + "'s messages.\n\n You can un-ignore this user at a later time in the 'My Friends & Options' ignore settings. "); } } sMixedId = new String(sMixedId); sMixedId = sMixedId.replace(/\W/g,'').substr(0,32); if(sType == 'friend' && sMixedId.length < 2 ) { alert("Please check the username of the friend you are attempting to add."); return; } if(bNumericId ) { var nMode = ''; if(sAction == 'add') nMode = FCCHAN_JOIN; else nMode = FCCHAN_PART; TxCmd(nFC_TYPE_CODE, g_nSessionId, 0, sMixedId , nMode ); } else { TxCmd(nFC_TYPE_CODE, g_nSessionId, 0, 0 , FCCHAN_JOIN, sMixedId ); } if(sType == 'ignore' ) { g_hUsers[ sMixedId ].ignored = sAction == 'add' ? 1 : 0; for(var nUserId in g_hoPlayerWindows ) {
 var oPlayerWindow; if(oPlayerWindow = WindowHandle.Get('player', nUserId ) ) { if(g_hUsers[ sMixedId ].ignored ) oPlayerWindow.PeopleBox.RemoveUser(sMixedId); } } } if(bNumericId ) { Update_popUserMenu(sMixedId ); }} var PmUsernamePrompt = { nUserId: 0, oTimer: {}};PmUsernamePrompt.Form = function(hOptions){ hOptions = hOptions || {}; g_oDhtmlPopup.open(" <div style=\"width:230px;height:100px;padding-top:20px;\"> <form onSubmit=\"PmUsernamePrompt.Submit(); return false;\"> Enter the username of the user you wish to message:<br><br> <input type=text name=pm_username_lookup id=pm_username_lookup onKeyUp=\"CheckPmUsername.Queue();\"> <input type=submit id=pm_username_lookup_submit value=\"Done\" disabled=true> <div id=username_recognized style=padding:5px;>&nbsp;</div> </form> </div> ",'no_close_on_mouseout,provide_close_button'); setTimeout(function(){ GetEl('pm_username_lookup').focus(); }, 100 ); };PmUsernamePrompt.Submit = function(){ if ( ! PmUsernamePrompt.nUserId ) return false; if ( ! g_hoPMWindows[PmUsernamePrompt.nUserId] ) { A_Click('pm_friend' + PmUsernamePrompt.nUserId, ( top.g_sClearCode ? 'pm.'+top.g_sClearCode+'.html' : 'pm.html' ) + "?remote_user_id=" + PmUsernamePrompt.nUserId, "height=450,width=570,menubar=0,resizable=1,scrollbars=1,titlebar=0,toolbar=0,status=0", '', '', 'pm_friend' ); }
 ClickFriend(PmUsernamePrompt.nUserId); PmUsernamePrompt.nUserId = 0; g_oDhtmlPopup.close(); return false;};PmUsernamePrompt.InputListener = function(){ if(document.getElementById('pm_username_lookup') ) { if(document.getElementById('pm_username_lookup').value.length > 5 && document.getElementById('pm_username_lookup').value != CheckPmUsername.sUsername ) { clearTimeout(PmUsernamePrompt.oTimer); CheckPmUsername.Queue(document.getElementById('pm_username_lookup').value ); } if(! PmUsernamePrompt.nUserId ) { PmUsernamePrompt.oTimer = setTimeout(function() { PmUsernamePrompt.InputListener(); }, 1000); } } };function ClosePMWindow(nRemoteUserID ){ var sGenericWindowKey = 'pm_friend' + nRemoteUserID; if(g_hWindows[ sGenericWindowKey ] && g_hWindows[ sGenericWindowKey ].type == 'dhtml_window' ) { g_hWindows[ sGenericWindowKey ].close(); } else { var oPMWindow; if(oPMWindow = WindowHandle.Get('pm',nRemoteUserID) ) { oPMWindow.g_bCloseWindow = 1; oPMWindow.AssertTop(); } } delete g_hoPMWindows[ nRemoteUserID ];
 LoadWindowsList(); return;}function ClickFriend(nRemoteUserID,hOptions){ var hOptions = hOptions || {}; if(! nRemoteUserID ) { return; } if(! g_hoPMWindows[nRemoteUserID] ) { g_hoPMWindows[nRemoteUserID] = {}; g_hoPMWindows[nRemoteUserID]['window'] = 0; g_hoPMWindows[nRemoteUserID]['offline_message_rx'] = 0; PrivateMessageBlinker.Stop(nRemoteUserID ); } if(! g_hoPMWindows[nRemoteUserID]['window'] ) { if(g_hUsers[nRemoteUserID] && g_hUsers[nRemoteUserID]['state'] == FCVIDEO_OFFLINE ) { if(! g_hoPMWindows[nRemoteUserID]['offline_message_rx'] ) { g_hoPMWindows[nRemoteUserID]['offline_message_rx']++; ReceivePrivateMessage({ 'msg': g_hUsers[nRemoteUserID]['username'] + " is offline. " + g_hUsers[nRemoteUserID]['username'] + " will receive your message the next time they login, depending on their privacy settings.", 'from': nRemoteUserID, 'msguid': 0 }); } } else if(g_hUsers[nRemoteUserID] && g_hoPMWindows[nRemoteUserID] && ( ! g_hoPMWindows[nRemoteUserID]['message_buffer'] || ! g_hoPMWindows[nRemoteUserID]['message_buffer'][nRemoteUserID] ) ) { ReceivePrivateMessage({ 'msg': g_hUsers[nRemoteUserID]['username'] + " is online.", 'from': nRemoteUserID,
 'msguid': 0 }); } } if(! g_hoPMWindows[nRemoteUserID]['listing'] ) { LoadWindowsList(); if(g_hoPMWindows[nRemoteUserID] ) { g_hoPMWindows[nRemoteUserID]['listing'] = GetEl('private_message_list_'+nRemoteUserID); } } var oPMWindow; if(oPMWindow = WindowHandle.Get('pm',nRemoteUserID) ) { oPMWindow.focus(); } return;}function FcPrivateMessage(nArg1, nArg2, sMessage, nUserId, nPmStamp, nFrom, nTo ){ if ( ! nArg1 ) { nPmStamp = nArg2; } var hPmesg = ParseJSON(sMessage ); for(var sK in hPmesg ) { if(typeof(hPmesg[sK] ) == "string" ) { hPmesg[sK] = decodeURIComponent(hPmesg[sK] ); } } if (hPmesg == null) return; if ( ! hPmesg['msg'] && nArg1 == w.FCRESPONSE_ERROR ) { ReceivePrivateMessage({ 'msg': "This user is offline and will receive your message the next time he/she logs in.", 'from': nArg2, 'msguid': 0
 }); return; } else if ( g_bLoadChat > 0 && nUserId != g_hSelf['user_id'] && Rate() > .1 ) { LoadChat(); return; } else if ( nArg1 == w.FCRESPONSE_NOTICE ) { var nWindow = nUserId; var nNotice = 1; if (hPmesg['msg'] && hPmesg['msg'].indexOf("(Auto Reply)") == 0 && nFrom == 0) { nNotice = 0; if (nUserId == g_hSelf['user_id']) { nWindow = nUserId; nUserId = nArg2; } } ReceivePrivateMessage({ 'type': 'pm', 'msg': hPmesg['msg'], 'from': nUserId, 'window': nWindow, 'pmstamp': nPmStamp, 'notice': nNotice }); } else if (nArg1 == w.FCCHAN_OLDMSG) { ReceivePrivateMessage({ 'type': 'pm', 'msg': hPmesg['msg'], 'from': nUserId, 'offline': true, 'offline_date': nArg2, 'pmstamp': nArg2 }); } else {
 ReceivePrivateMessage({ 'type': 'pm', 'msg': hPmesg['msg'], 'from': nUserId, 'pmstamp': nPmStamp }); }}function SendPrivateMessage(hChatParams ){ if(g_hoPMWindows[ hChatParams.to ] && g_hoPMWindows[ hChatParams.to ]['window'] && g_hoPMWindows[ hChatParams.to ]['window'].Send_LocalEcho ) { g_hoPMWindows[ hChatParams.to ]['window'].Send_LocalEcho(hChatParams.msg ); } else { EstablishPMWindowEntry(hChatParams.to, g_hSelf.user_id ); g_hoPMWindows[ hChatParams.to ]['message_buffer'][ g_hSelf.user_id ].push({ msg: hChatParams.msg }); } TxCmd(FCTYPE_PMESG, g_nSessionId, hChatParams.to, 0, 0, hChatParams.msg );}function EstablishPMWindowEntry(nPMOwnerId, nMessagingUserId ){ if(! g_hoPMWindows[ nPMOwnerId ] ) g_hoPMWindows[ nPMOwnerId ] = {}; if(! g_hoPMWindows[ nPMOwnerId ]['message_buffer'] ) g_hoPMWindows[ nPMOwnerId ]['message_buffer'] = {}; if(! g_hoPMWindows[ nPMOwnerId ]['message_buffer'][ nMessagingUserId ] ) g_hoPMWindows[ nPMOwnerId ]['message_buffer'][ nMessagingUserId ] = new Array();}function ReceivePrivateMessage(hChatParams ){ var nUserId = hChatParams['from']; var sMessage = hChatParams['msg'] || ''; var nMessagingUserID = hChatParams['msguid']; var nWindow = hChatParams['window'] || nUserId;
 if (nWindow != nUserId) nMessagingUserID = nWindow; nMessagingUserID = (nMessagingUserID == undefined)? nUserId : nMessagingUserID; if(hChatParams['msguid'] == undefined ) { hChatParams['msguid'] = nMessagingUserID; } var bChatRoomPM = false; var oPlayerWindow; for(var nBroadcasterId in g_hoPlayerWindows ) { if(oPlayerWindow = WindowHandle.Get('player', nBroadcasterId ) ) { if(oPlayerWindow.ChatCommandHandlers && oPlayerWindow.ChatCommandHandlers.pm_response ) { bChatRoomPM = oPlayerWindow.ChatCommandHandlers.pm_response(nUserId, sMessage ); } } } if(! g_hoPMWindows[nUserId] ) { g_hoPMWindows[nUserId] = {}; } if(sMessage.indexOf('is online') == -1 && ( g_hSelf['pm_sound_mode'] == 'rx' || g_hSelf['pm_sound_mode'] == 'txrx' || ! g_hSelf['pm_sound_mode'] || (g_hSelf['pm_sound_mode'] == 'on_first' && g_hoPMWindows[nUserId] && ! g_hoPMWindows[nUserId]['alerted']) ) ) { Sound('down'); if(g_hoPMWindows[nUserId]) g_hoPMWindows[nUserId]['alerted'] = true;
 } if(! g_hoPMWindows[nUserId]['message_buffer'] ) { g_hoPMWindows[nUserId]['message_buffer'] = {}; } if(g_hoPMWindows[nUserId]['message_buffer'][nMessagingUserID] == undefined) { g_hoPMWindows[nUserId]['message_buffer'][nMessagingUserID] = new Array(); } if(! g_hoPMWindows[nUserId]['listing'] ) { LoadWindowsList(); if(g_hoPMWindows[nUserId] ) { g_hoPMWindows[nUserId]['listing'] = GetEl('private_message_list_'+nUserId); } } if(sMessage && ! bChatRoomPM && hChatParams.msguid > 0 ) { PrivateMessageBlinker.Start(nUserId ); } if(sMessage ) { g_hoPMWindows[nUserId]['message_buffer'][ nMessagingUserID ].push(hChatParams ); } if(TogglePersonalMenu.sDisplay == 'none' && ! bChatRoomPM ) { MenuRevealBlinker.Start(nUserId ); }}var MenuRevealBlinker = { nInterval: 0, oTimer: null};MenuRevealBlinker.Start = function(){
 MenuRevealBlinker.nInterval = 1; MenuRevealBlinker.Blink();};MenuRevealBlinker.Stop = function(){ MenuRevealBlinker.nInterval = 0;};MenuRevealBlinker.Blink = function(){ var oEl = GetEl('btn_unhide_friends'); if(MenuRevealBlinker.nInterval == 0 ) { if(oEl ) { oEl.style.backgroundColor = ''; oEl.style.color = ''; } MenuRevealBlinker.nInterval = 0; clearTimeout(MenuRevealBlinker.oTimer); } else if(MenuRevealBlinker.nInterval % 2 == 0 ) { if(oEl ) { oEl.style.backgroundColor = 'yellow'; oEl.style.color = 'black'; } MenuRevealBlinker.nInterval++; MenuRevealBlinker.oTimer = setTimeout(MenuRevealBlinker.Blink,700); } else if(MenuRevealBlinker.nInterval % 2 == 1 ) { if(oEl ) { oEl.style.backgroundColor = ''; oEl.style.color = ''; } MenuRevealBlinker.nInterval++; MenuRevealBlinker.oTimer = setTimeout(MenuRevealBlinker.Blink,700); }};function PrivateMessageListener(){ for(var nUserId in g_hoPMWindows) {
 for(var key_nUserId in g_hoPMWindows[ nUserId ]['message_buffer'] ) { if(g_hoPMWindows[ nUserId ]['message_buffer'][ key_nUserId ] ) { var oPMWindow; if(oPMWindow = WindowHandle.Get('pm',nUserId) ) { for(var sK in g_hoPMWindows[ nUserId ]['message_buffer'][ key_nUserId ] ) { var hChatLine = g_hoPMWindows[ nUserId ]['message_buffer'][ key_nUserId ][sK]; if(g_hSelf.user_id == key_nUserId ) { oPMWindow.Send_LocalEcho(hChatLine.msg ); } else { oPMWindow.Receive(hChatLine ); } } g_hoPMWindows[ nUserId ]['message_buffer'][ key_nUserId ] = new Array(); } } } } if(PrivateMessageListener.oPMListenerTimeout ) clearTimeout(PrivateMessageListener.oPMListenerTimeout); PrivateMessageListener.oPMListenerTimeout = setTimeout(PrivateMessageListener,1000);}function WindowCloseDetection(){ var nPopupCount = 0; if ( g_hSelf['access_level'] > 0 && ! document.cookie.match(/passcode=[^;]+;/) ) { top.location.reload(); return; } var bReloadWindowsList = false; for(var sK in g_hWindows ) { if ( g_hWindows[sK] && sK != '-1' ) {
 if(g_hWindows[sK] && ! g_hWindows[sK].evaluation_counter ) { g_hWindows[sK].evaluation_counter = 0; } try { var nDeadWindow = 0; if ( ! g_hWindows[sK] ) { nDeadWindow = 10; } if ( g_hWindows[sK].is_loaded && ! nDeadWindow && g_hWindows[sK].window && ! g_hWindows[sK].window.document ) { nDeadWindow = 11; } else if ( g_hWindows[sK].window.document ) { g_hWindows[sK].is_loaded = true; } if(! nDeadWindow && g_hWindows[sK].is_loaded ) { if ( g_hWindows[sK].closed ) nDeadWindow = 12; else if ( ! g_hWindows[sK].window ) nDeadWindow = 13; else if ( g_hWindows[sK].window && g_hWindows[sK].window.closed ) nDeadWindow = 14; } if(nDeadWindow ) { Log("WindowCloseDetection kill reference to g_hWindows based on criteria (" + nDeadWindow + ") " + sK ); delete g_hWindows[sK]; bReloadWindowsList = true; } } catch(oError) { Log("WindowCloseDetection error: " + oError.description + " name: " + oError.name ); if(g_hWindows[sK] && ( g_hWindows[sK].is_loaded || g_hWindows[sK].evaluation_counter > 0 ) ) { Log("WindowCloseDetection error: window existed, but no longer available"); delete g_hWindows[sK]; bReloadWindowsList = true;
 } } if(g_hWindows[sK] ) { g_hWindows[sK].evaluation_counter++; } } } for(var nRemoteUserId in g_hoPMWindows ) { var nDeadWindow = 0; try { if(! g_hoPMWindows[ nRemoteUserId ] ) nDeadWindow = 20; if(! nDeadWindow && g_hoPMWindows[ nRemoteUserId ]['closed'] ) nDeadWindow = 21; if(! nDeadWindow && g_hoPMWindows[ nRemoteUserId ]['document'] && ! g_hoPMWindows[ nRemoteUserId ]['document'].body ) nDeadWindow = 22; if(! nDeadWindow && g_hoPMWindows[ nRemoteUserId ]['window'] && ! g_hoPMWindows[ nRemoteUserId ]['window'].document ) nDeadWindow = 23; } catch(oError) { nDeadWindow = 24; Log("g_hoPMWindows WindowCloseDetection exception: " + oError); } if(nDeadWindow ) { Log("WindowCloseDetection kill reference to g_hoPMWindows based on criteria (" + nDeadWindow + ") " + nRemoteUserId ); try { if(t.g_hoPMWindows[ nRemoteUserId ] && g_hUsers[ nRemoteUserId ] && t.g_hoPMWindows[nRemoteUserId]['pm_video'] == true ) { TxCmd(FCTYPE_PREVIEWCHAN, t.g_hSelf['sessionid'], 0, FCCHAN_PART, nRemoteUserId ); if ( t.g_hoPMWindows[ nRemoteUserId ] && t.g_hoPMWindows[ nRemoteUserId ].presentation_state && IsTokenSession(g_hoPlayerWindows[ nRemoteUserId ].presentation_state ) && ( ! t.g_hoPlayerWindows[nRemoteUserId] || ! t.g_hoPlayerWindows[nRemoteUserId].presentation_state || ! IsTokenSession(g_hoPlayerWindows[ nRemoteUserId ].presentation_state ) ) ) { TxCmd(FCTYPE_ENDSESSION, g_nSessionId, 0, g_hUsers[nRemoteUserId]['sessionid'], 0, 0, null);
 } } } catch(oError) { Log("PM Close window and video error: " + oError.description ); if(g_hUsers[ nRemoteUserId ] ) { TxCmd(FCTYPE_ENDSESSION, g_nSessionId, 0, g_hUsers[ nRemoteUserId ]['sessionid'], 0, 0, null); } } delete g_hoPMWindows[nRemoteUserId]; bReloadWindowsList = true; FriendsList.RefreshChatIcons(nRemoteUserId); } } for(var nBroadcasterId in g_hoPlayerWindows ) { try { if(g_hoPlayerWindows[ nBroadcasterId ]['window'] && g_hoPlayerWindows[ nBroadcasterId ]['window'].opener != null ) { g_hoPlayerWindows[ nBroadcasterId ].bIsPopup = true; } } catch(oError ) { Log("g_hoPlayerWindows WindowCloseDetection popup test exception: " + oError.description); } var nDeadWindow = 0; try { if(! g_hoPlayerWindows[ nBroadcasterId ] ) { nDeadWindow = 1; } if(! nDeadWindow && g_hoPlayerWindows[ nBroadcasterId ]['closed'] ) { nDeadWindow = 2; }
 if(! nDeadWindow && ! g_hoPlayerWindows[ nBroadcasterId ]['window'] ) { nDeadWindow = 3; } if(! nDeadWindow && ! g_hoPlayerWindows[ nBroadcasterId ]['window'].g_bPlayerHTMLLoaded ) { nDeadWindow = 4; } if(! nDeadWindow && g_hoPlayerWindows[ nBroadcasterId ]['window'].g_nBroadcasterId && g_hoPlayerWindows[ nBroadcasterId ]['window'].g_nBroadcasterId != nBroadcasterId ) { nDeadWindow = 5; } if(! nDeadWindow && g_hoPlayerWindows[ nBroadcasterId ].bIsPopup && g_hoPlayerWindows[ nBroadcasterId ]['window'] && g_hoPlayerWindows[ nBroadcasterId ]['window'].opener == null ) { nDeadWindow = 6; } } catch(oError) { nDeadWindow = 7; Log("g_hoPlayerWindows WindowCloseDetection exception: " + oError.description); if(g_hUsers[ nBroadcasterId ] ) { TxCmd(FCTYPE_ENDSESSION, g_nSessionId, 0, g_hUsers[ nBroadcasterId ]['sessionid'], 0, 0, null); } } if(nDeadWindow && location.search.indexOf('disable_window_close_detection') == -1 ) { Log("WindowCloseDetection kill reference to g_hoPlayerWindows based on criteria (" + nDeadWindow + ") " + nBroadcasterId ); TxCmd(FCTYPE_JOINCHAN, g_nSessionId, 0, t.g_hoPlayerWindows[ nBroadcasterId ]['room_channel'] , FCCHAN_PART); if(t.g_hoPlayerWindows[nBroadcasterId] ) { if (
 t.g_hoPlayerWindows[nBroadcasterId].presentation_state && IsTokenSession(t.g_hoPlayerWindows[ nBroadcasterId ].presentation_state ) && g_hUsers[ nBroadcasterId ] && g_hUsers[ nBroadcasterId ].sessionid ) { TxCmd(FCTYPE_ENDSESSION, g_nSessionId, 0, g_hUsers[ nBroadcasterId ].sessionid, 0, 0, null); } } if ( t.g_hoPMWindows[nBroadcasterId] ) { if ( t.g_hoPlayerWindows[nBroadcasterId].presentation_state && IsTokenSession(t.g_hoPlayerWindows[nBroadcasterId].presentation_state ) && ( ! t.g_hoPMWindows[nBroadcasterId] || ! t.g_hoPMWindows[nBroadcasterId].presentation_state || ! IsTokenSession(t.g_hoPMWindows[nBroadcasterId].presentation_state ) ) ) { if(g_hUsers[ nBroadcasterId ] ) { TxCmd(FCTYPE_ENDSESSION, g_nSessionId, 0, g_hUsers[ nBroadcasterId ]['sessionid'], 0, 0, null); } } } delete g_hoPlayerWindows[ nBroadcasterId ]; bReloadWindowsList = true; } } if(bReloadWindowsList ) { LoadWindowsList(); } if(typeof(WindowCloseDetection.oTimer) != 'undefined' ) { clearTimeout(WindowCloseDetection.oTimer); } WindowCloseDetection.oTimer = setTimeout(WindowCloseDetection, nPopupCount > 1 ? 500 : 1000 );}function InitializePlayerWindowHash(nId ){ g_hoPlayerWindows[ nId ] = {};}function IsTokenSession(nState ){ if(nState == t.EVSESSION_VOYEUR || nState == t.EVSESSION_PRIVATE || nState == t.EVSESSION_GROUP
 ) { return true; } return false;}function CloseDhtmlWindow(sWindowKey ){ var nLookForPlayerWindow = parseInt(sWindowKey ); var nPlayerWindowId = 0; if(nLookForPlayerWindow > 0 ) { nPlayerWindowId = ( nLookForPlayerWindow % 100000000 ); } if(nPlayerWindowId && g_hoPlayerWindows[ nPlayerWindowId ] ) { delete g_hoPlayerWindows[sWindowKey]; } else if(sWindowKey.match(/pm_friend(\d+)/) ) { delete g_hoPMWindows[ RegExp.$1 ]; } delete g_hWindows[sWindowKey]; LoadWindowsList();}DhtmlWindowManager = { nCounter: 0};DhtmlWindowManager.Open = function(sWindowKey, sPage, sNewWindowParams, sLoadEvent, sTarget, sResource ){ var hDhtmlWindowParams = { oCloseWindowHandler: oCloseWindowHandler, MfcMouseTracker: g_oMouseTracker, MfcClickDrag: mfcClickDrag, MfcMousePress: mfcMousePress, icon_url: DhtmlWindowManager.GetIconUrl(sWindowKey, sResource ), icon_sprite_css: DhtmlWindowManager.GetIconSpriteCss(sWindowKey, sResource ), title: DhtmlWindowManager.GetTitle(sWindowKey, sResource ), maximize_iframe: g_hSelf.single_page_website, containing_div_id: 'dhtml_window_boundry' }; hDhtmlWindowParams.url = sPage + ( ( sPage.indexOf("?") > -1 ) ? '&' : '?' ) + 'dhtml_window=1'; if(sResource == 'pm_friend' && sPage && sPage.indexOf('full_video=') == -1 ) { hDhtmlWindowParams.height = 340; }
 if(sNewWindowParams ) { if(sNewWindowParams.match(/height=(\d+)/) ) { hDhtmlWindowParams.height = parseInt(RegExp.$1); } if(sNewWindowParams.match(/width=(\d+)/) ) { hDhtmlWindowParams.width = parseInt(RegExp.$1); } } var viewportWidth = window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth; if(hDhtmlWindowParams.width > 800 && viewportWidth < 1000 ) { hDhtmlWindowParams.width = viewportWidth - 200; } var oCloseWindowHandler; if(t.WindowCloseDetection ) { oCloseWindowHandler = function() { t.CloseDhtmlWindow(sWindowKey ); } } if(sResource == 'pm_friend' || sResource == 'user_settings' || sResource == 'chat_logs' || sResource == 'user_notepad' ) { hDhtmlWindowParams.use_plain_container = 1; } if ( g_UA.mobile || g_UA.tablet ) { if(sResource == 'tip' ) { hDhtmlWindowParams.left = Math.round(viewportWidth * 0.35 ); hDhtmlWindowParams.width = Math.round(viewportWidth * 0.65 ) - 85; } else if(g_hSelf['show_main_menu'] ) { hDhtmlWindowParams.left = 20; hDhtmlWindowParams.width = viewportWidth - 200; } else { hDhtmlWindowParams.width = viewportWidth - 80; hDhtmlWindowParams.left = Math.round(( viewportWidth - 30 ) - hDhtmlWindowParams.width ) / 2; } } else { if(hDhtmlWindowParams.width < 800 && hDhtmlWindowParams.height < 500 ) { var dQuadX = g_oMouseTracker.dQuadX; if(g_hSelf['show_main_menu'] ) { dQuadX = dQuadX * 1.4; }
 hDhtmlWindowParams.left = g_oMouseTracker.clientX - parseInt(hDhtmlWindowParams.width * dQuadX ); hDhtmlWindowParams.top = g_oMouseTracker.clientY - parseInt(hDhtmlWindowParams.height * g_oMouseTracker.dQuadY ); } else { hDhtmlWindowParams.top = g_oMouseTracker.clientY - parseInt(hDhtmlWindowParams.height * g_oMouseTracker.dQuadY ); if(g_hSelf['show_main_menu'] ) { if(hDhtmlWindowParams.width > ( viewportWidth - 260 ) ) { hDhtmlWindowParams.width = viewportWidth - 260; } hDhtmlWindowParams.left = ( viewportWidth - hDhtmlWindowParams.width - 160 ) / 2; } } hDhtmlWindowParams.left += ( ( DhtmlWindowManager.nCounter % 3 ) * 30 ) - 30; hDhtmlWindowParams.top_add = ( ( DhtmlWindowManager.nCounter % 3 ) * 30 ) - 60; } if(! hDhtmlWindowParams.width ) { hDhtmlWindowParams.width = 800; } if(! hDhtmlWindowParams.height ) { hDhtmlWindowParams.height = 600; } oDW = new MfcDhtmlWindow(hDhtmlWindowParams ); DhtmlWindowManager.nCounter++; return oDW;};DhtmlWindowManager.PeopleIconNumber = function(hUser ){ if(hUser.username.match(/^..[abc1]/i) ) return 1; else if(hUser.username.match(/^..[def2]/i) ) return 2; else if(hUser.username.match(/^..[ghi3]/i) ) return 3; else if(hUser.username.match(/^..[jkl4]/i) ) return 4; else if(hUser.username.match(/^..[mno5]/i) ) return 5; else if(hUser.username.match(/^..[pqr6]/i) ) return 6; else if(hUser.username.match(/^..[stu7]/i) ) return 7; else if(hUser.username.match(/^..[vwxy]/i) ) return 8; else if(hUser.username.match(/^..[z890_]/i) ) return 9;};DhtmlWindowManager.PeopleIconGender = function(hUser ){ return hUser.access_level == 4 ? 'woman' : 'man';};DhtmlWindowManager.GetIconSpriteCss = function(sWindowKey, sResource ){ if(typeof(sWindowKey) == 'string' && sWindowKey.match(/pm_friend(\d+)/) )
 { var nUserId = RegExp.$1; if(g_hUsers[nUserId] ) { var nIcon = DhtmlWindowManager.PeopleIconNumber(g_hUsers[nUserId]); var sGender = DhtmlWindowManager.PeopleIconGender(g_hUsers[nUserId]); return 'sprite-icons sprite-small_' + sGender + '_' + nIcon; } } else if(typeof(sWindowKey) == 'string' && sWindowKey.match(/^\d{7,10}$/) ) { var nRoomOwnerId = sWindowKey % 100000000; if(nRoomOwnerId == g_hLoungeIds.Lounge ) { return 'sprite-icons sprite-lounge16x16'; } else if(nRoomOwnerId == g_hLoungeIds.Lounge1000 ) { return 'sprite-icons sprite-lounge100016x16'; } else if(nRoomOwnerId == g_hLoungeIds.Lounge10000 ) { return 'sprite-icons sprite-lounge1000016x16'; } } else if(g_hResources[ sWindowKey ] && g_hResources[ sWindowKey ].sprite_css ) { return g_hResources[ sWindowKey ].sprite_css; } else if(g_hResources[ sResource ] && g_hResources[ sResource ].sprite_css ) { return g_hResources[ sResource ].sprite_css; } return 'sprite-icons sprite-popup12x12';};DhtmlWindowManager.GetIconUrl = function(sWindowKey, sResource ){ var sIconFile; if(typeof(sWindowKey) == 'string' && sWindowKey.match(/pm_friend(\d+)/) ) { var nUserId = RegExp.$1; if(g_hUsers[nUserId] ) { var nIcon = DhtmlWindowManager.PeopleIconNumber(g_hUsers[nUserId]); var sGender = DhtmlWindowManager.PeopleIconGender(g_hUsers[nUserId]); sIconFile = 'people/small_' + sGender + '_' + nIcon + '.png'; } } else if(typeof(sWindowKey) == 'string' && sWindowKey.match(/^\d{7,10}$/) ) { var nRoomOwnerId = sWindowKey % 100000000; if(nRoomOwnerId == g_hLoungeIds.Lounge ) { sIconFile = 'png/lounge.16x16.png'; } else if(nRoomOwnerId == g_hLoungeIds.Lounge1000 ) { sIconFile = 'png/lounge1000.16x16.png'; }
 else if(nRoomOwnerId == g_hLoungeIds.Lounge10000 ) { sIconFile = 'png/lounge10000.16x16.png'; } } else if(g_hResources[ sWindowKey ] && g_hResources[ sWindowKey ].sm_icon ) { sIconFile = g_hResources[ sWindowKey ].sm_icon; } else if(g_hResources[ sResource ] && g_hResources[ sResource ].sm_icon ) { sIconFile = g_hResources[ sResource ].sm_icon; } if(! sIconFile ) { sIconFile = 'png/popup.12x12.png'; } return 'http://' + g_mfcImageHost.host(sIconFile ) + '/mfc2/images/icons/' + sIconFile;};DhtmlWindowManager.GetTitle = function(sWindowKey, sResource ){ var sTitle; if(typeof(sWindowKey) == 'string' && ( sWindowKey.match(/pm_friend(\d+)/) || sWindowKey.match(/(\d{8,10})/) ) ) { var nRoomOwnerId = RegExp.$1 % 100000000; sTitle = g_hUsers[ nRoomOwnerId ].username; } else if(g_hResources[ sWindowKey ] && g_hResources[ sWindowKey ].title ) { sTitle = g_hResources[ sWindowKey ].title; } else if(g_hResources[ sResource ] && g_hResources[ sResource ].title ) { sTitle = g_hResources[ sResource ].title; } if(! sTitle ) { if(sResource ) { sTitle = sResource.replace(/_/,' '); } else if(sWindowKey ) { sTitle = sWindowKey.replace(/_/,' '); } }
 return sTitle;};function LoadWindowsList(){ var oEl; if(! ( oEl = GetEl('windows_list') ) ) { return; } var sWindowList = ""; for(var sWindowId in g_hWindows ) { if(g_hWindows[sWindowId].type != 'dhtml_window' || sWindowId.substr(0,9) == 'pm_friend' ) { continue; } var sTitle = DhtmlWindowManager.GetTitle(sWindowId ); var sImageUrl = DhtmlWindowManager.GetIconUrl(sWindowId ); var sImageSpriteCss = DhtmlWindowManager.GetIconSpriteCss(sWindowId ); sWindowList += " <div class=window_button_container> <div class='window_button' id=private_message_list_"+nUserId+" > <div class=window_button_label > <a href="top.html?cache_id=1423267822&amp;#" onClick=\"javascript:g_hWindows['"+sWindowId+"'].restore();\"> " + sTitle + " </a> </div> <div class=window_button_x onClick=\"g_hWindows['"+sWindowId+"'].close();\"> "; if(1 ) sWindowList += "<div class='sprite-icons sprite-window_menu_x_2'></div>"; else sWindowList += "<img src=http://j.mfcimg.com/mfc2/styles/mfc/images/misc/window_menu_x_2.png>"; sWindowList += " </div> </div> <div style='position:absolute;left:0px;top:4px;width:16px;'> <a href="top.html?cache_id=1423267822&amp;#" onClick=\"javascript:g_hWindows['"+sWindowId+"'].restore();\">"; if(sImageSpriteCss ) { sWindowList += "<div class='sprite-link " + sImageSpriteCss + "'></div>"; } else { sWindowList += "<i"+"mg style=\"" + sStyle + "\" sr"+"c=" + sImageUrl + " style='vertical-align:bottom;margin:0px;'>"; } sWindowList += "</a> </div> </div>\
 "; } var sPMList = ""; for(var nUserId in g_hoPMWindows) { var hUser; if(! ( hUser = g_hUsers[nUserId] ) ) { continue; } var sStyle=''; var nIconLeft = 0; var sWebcam = ""; if(hUser['state'] == FCVIDEO_OFFLINE ) { if ( g_UA.IE ) sStyle = "filter:progid:DXImageTransform.Microsoft.Alpha(opacity=50);"; else sStyle = "-moz-opacity:0.5;opacity:0.5;"; } else if(IsBroadcastState(hUser['state'] ) && hUser['state'] != FCVIDEO_TX_AWAY ) { nIconLeft = -6; sWebcam = "<div class='sprite-icons sprite-tiny_webcam' style='position:absolute;top:3px;left:9px;'></div>"; } sPMList += " <div class=window_button_container> <div class='window_button' id=private_message_list_"+nUserId+" > " + A('pm_friend',{user_id:nUserId,username:hUser['username']}) + " <div class=window_button_label id=private_message_blinker_"+nUserId+"  > " + A('pm_friend',{user_id:nUserId,username:hUser['username']}) + " <span " + PopupBioHandlerCode(nUserId) + "> " + hUser['username'] + " </span> </a> </div> <div class=window_button_x onClick=\"ClosePMWindow(" + nUserId + ");\"> "; if(1 ) sPMList += "<div class='sprite-icons sprite-window_menu_x_2'></div>"; else sPMList += "<img src=http://k.mfcimg.com/mfc2/styles/mfc/images/misc/window_menu_x_2.png>"; sPMList += " </div> </div> <div style='position:absolute;left:" + nIconLeft + ";top:4px;width:16px;'> <div class='sprite-link " + popUserMenu.people_icon_sprite_css(nUserId ) + "' onClick='popUserMenu.open("+nUserId+",g_oDhtmlPopup);' ></div> </div> " + sWebcam + " </div>\
 "; } if(sWindowList || sPMList ) { sPMList += "<div style='font-size:10px;'>&nbsp;</div>"; SetHTML('windows_list', sWindowList + sPMList, { 'force': true } ); oEl.style.display = "block"; } else { oEl.style.display = "none"; }}function ToggleHeader(hOptions){ hOptions = hOptions || {}; if(g_hSelf['show_header'] == undefined ) g_hSelf['show_header'] = 1; if(! hOptions['render_only'] ) { g_hSelf['show_header'] = g_hSelf['show_header'] == 1 ? 0 : 1; UserExtensions.Write('show_header', g_hSelf['show_header'] ); } if(GetEl('header') && GetEl('header_wrapper') ) { if(! g_hSelf['show_header'] ) { if(! g_UA.tablet && ! g_UA.mobile && ! g_UA.Maxthon ) { SlideHeader('shrink'); } else { GetEl('header').style.top = "-81px"; GetEl('header_wrapper').style.height = "19px"; GetEl('header_id').style.height = "19px"; GetEl('reveal_header').style.display = "block"; GetEl('slim_menu').style.display = "block"; GetEl('y_foot').style.display = "none"; } } else
 { if(! g_UA.tablet && ! g_UA.mobile && ! g_UA.Maxthon ) { SlideHeader('grow'); } else { GetEl('header').style.top = "0px"; GetEl('header_wrapper').style.height = "79px"; GetEl('header_id').style.height = "79px"; GetEl('reveal_header').style.display = "none"; GetEl('slim_menu').style.display = "none"; GetEl('y_foot').style.display = "block"; } } } var oFrame = window.frames['main']; if(oFrame && oFrame.LayoutSizing && oFrame.LayoutSizing.size_chat_area && oFrame.RefreshMessageBar ) { oFrame.LayoutSizing.size_chat_area(); oFrame.RefreshMessageBar(); } if(g_UA.Chrome >= 35) { ResizeHandler(); } if(oFrame.OnResizeHandler ) { oFrame.OnResizeHandler(); } LoadMenu();}function SlideHeader(sMode,bLoopCall){ if(typeof(SlideHeader.bHeaderLock) == 'undefined' ) SlideHeader.bHeaderLock = false; if(typeof(SlideHeader.nHeaderWrapper) == 'undefined' ) SlideHeader.nHeaderWrapper = 79; if(typeof(SlideHeader.nHeader) == 'undefined' ) SlideHeader.nHeader = 0; if(SlideHeader.bHeaderLock && ! bLoopCall ) return; SlideHeader.bHeaderLock = true; if(sMode == 'shrink') {
 if (SlideHeader.nHeaderWrapper <= 20 || SlideHeader.nHeader <= -80) { SlideHeader.bHeaderLock = false; GetEl('header').style.top = "-81px"; GetEl('reveal_header').style.display = "block"; GetEl('slim_menu').style.display = "block"; GetEl('y_foot').style.display = "none"; return; } else { SlideHeader.nHeaderWrapper = SlideHeader.nHeaderWrapper - 10; SlideHeader.nHeader = SlideHeader.nHeader - 10; } } else if(sMode == 'grow') { if (SlideHeader.nHeaderWrapper >= 79 || SlideHeader.nHeader >= 0) { SlideHeader.bHeaderLock = false; GetEl('header').style.top = "0px"; GetEl('reveal_header').style.display = "none"; GetEl('slim_menu').style.display = "none"; GetEl('y_foot').style.display = "block"; return; } else { SlideHeader.nHeaderWrapper = SlideHeader.nHeaderWrapper + 10; SlideHeader.nHeader = SlideHeader.nHeader + 10; } } GetEl('header').style.top = SlideHeader.nHeader + "px"; GetEl('header_wrapper').style.height = SlideHeader.nHeaderWrapper + "px"; GetEl('header_id').style.height = SlideHeader.nHeaderWrapper + "px"; setTimeout(function() { SlideHeader(sMode,1); } ,10 );}var PrivateMessageBlinker = {};PrivateMessageBlinker.Start = function(nUserId ){ g_hoPMWindows[nUserId].blinking = true; FriendsList.RefreshChatIcons(nUserId ); PrivateMessageBlinker.Execute(nUserId, 1 );};PrivateMessageBlinker.Stop = function(nUserId ){
 g_hoPMWindows[nUserId].blinking = false; if(g_hoPMWindows[nUserId]['blinker_phase'] != 0 ) FriendsList.RefreshChatIcons(nUserId ); PrivateMessageBlinker.Execute(nUserId, -1 );};PrivateMessageBlinker.Execute = function(nUserId, nSetPhase ){ if(! g_hoPMWindows[nUserId] ) return; if(typeof(g_hoPMWindows[nUserId]['blinker_phase'] ) == 'undefined' ) g_hoPMWindows[nUserId]['blinker_phase'] = 0; if(nSetPhase == 1 && g_hoPMWindows[nUserId]['blinker_phase'] == 3) { return; } else if(nSetPhase == 1) { g_hoPMWindows[nUserId]['blinker_phase'] = 2; } else if(nSetPhase) { g_hoPMWindows[nUserId]['blinker_phase'] = nSetPhase; } if(g_hoPMWindows[nUserId]['blinker_phase'] == -1) { g_hoPMWindows[nUserId]['blinker_phase'] = 0; try { GetEl('private_message_list_'+nUserId).className = 'window_button window_button_off'; } catch(oError) { Log("PM Blinker error: " + oError.description ); } return; } else if(g_hoPMWindows[nUserId]['blinker_phase'] == 2) { g_hoPMWindows[nUserId]['blinker_phase'] = 3; try {
 GetEl('private_message_list_'+nUserId).className = 'window_button window_button_on'; } catch(oError) { Log("PM Blinker error #2: " + oError.description ); } } else if(g_hoPMWindows[nUserId]['blinker_phase'] == 3) { g_hoPMWindows[nUserId]['blinker_phase'] = 2; try { GetEl('private_message_list_'+nUserId).className = 'window_button window_button_off'; } catch(oError) { Log("PrivateMessageBlinker error: " + oError.description); } } setTimeout(function(){ PrivateMessageBlinker.Execute(nUserId) }, 1700 );};function NewsFeed_InChatHTML(sType,sMsg,nUserId,sUsername){ var sHtml=''; if(nUserId == MYFREECAMS_NEWS_USER_ID ) { sHtml = " <div style=\"margin:25px 6px 25px 0px;padding:0px;background-color:#FFFFFF;border:2px solid #aaaaaa;font-size:15px;font-weight:bold;border-radius:5px;-moz-border-radius:5px;-webkit-border-radius:5px;\"> <div style=\"background-color:#FFFF22;color:#000000;font-size:11px;padding:4px;font-weight:normal;border-radius:5px;-moz-border-radius:5px;-webkit-border-radius:5px;\"><b> "; } else { sHtml = " <div style=\"margin:10px 6px 10px 0px;padding:0px;background-color:#FFFFFF;border:2px solid #E5AAAA;border-radius:5px;-moz-border-radius:5px;-webkit-border-radius:5px;\"> <div style=\"background-color:#EEEEEE;color:#000000;font-size:11px;padding:4px;border-radius:3px;-moz-border-radius:3px;-webkit-border-radius:3px;\"><b> "; } var nAccessLevel; if(nUserId == MYFREECAMS_NEWS_USER_ID ) { nAccessLevel = 5; sHtml += A('news_feed',{ user_id: nUserId, username_search: sUsername, token: g_hSelf.token }) + "News Feed</a></b> message from <b>" + sUsername + "</b>"; 
 } else if(g_hUsers[ nUserId ] ) { nAccessLevel = g_hUsers[nUserId]['access_level']; sHtml += A('news_feed',{ user_id: nUserId, username_search: g_hUsers[nUserId].username, token: g_hSelf.token }) + "News Feed</a></b> message from <b>" + "<a href="http://www.myfreecams.com/mfc2/static/\&quot;javascript:popUserMenu.open(&quot;+nUserId+&quot;,g_oDhtmlPopup);\&quot;">" + sUsername + "</a></b>" + " - " + A('news_feed',{ mode:'hidden',manual_username:sUsername,popup_menu:1 }) + "<span style='color:#999999;text-decoration:none;'>Ignore</span></a>"; } sMsg = ParseEmoteOutput.prototype.Parse(sMsg, { allow_user_images: g_hSelf['allow_user_images'], access_level: nAccessLevel, onload_code: "if(typeof(ChatBox) != 'undefined' && ChatBox.SmoothScroll && ! this.doOnce ) { this.doOnce=1; ChatBox.SmoothScroll('img_onload'); } ", onclick_code: "t.EnlargeImage.open(( g_oDhtmlPopup != undefined ? g_oDhtmlPopup : null ) ,'%IMAGE%','%SHORTCUT%')" } ); sHtml += "</div> <div style=\"padding:10px;color:#000000;font-size:13px;\">" + sMsg + "</div> </div> "; return sHtml;}function FormatChat(sMsg, nUserId, hOptions ){ hOptions = hOptions || {}; var bEmote = false; var sExtraClass_Name = ''; var sExtraClass_Chat = ''; var sExtraStyle = ''; var sExtraStyle = ''; var sExtraContainerStyle = ''; var sContainerClass = ''; if(! sMsg ) return ''; if(nUserId != g_hSelf['user_id'] && nUserId != 0 ) { sMsg = sMsg.replace(/&#?\w+;?/,''); }
 if(nUserId != 0 ) { sMsg = sMsg.replace(/</g,'&lt;'); sMsg = sMsg.replace(/`/g,' '); } var sSep = ":"; var hUserDetails = { access_level:0 }; if ( nUserId == g_hSelf['user_id'] ) { hUserDetails = g_hSelf; for ( sK in g_hSelf ) { hUserDetails[sK] = g_hSelf[sK]; } } else { for ( sK in g_hUsers[nUserId] ) { hUserDetails[sK] = g_hUsers[nUserId][sK]; } } for(sK in hOptions.userDetails ) hUserDetails[sK] = hOptions.userDetails[sK]; if(hUserDetails.access_level >= 2 && ( ! g_UA.IE || g_UA.IE >= 10 ) && sMsg.substr(0,9) == '*sarcasm*' ) { sExtraClass_Chat += 'sarcasm '; sMsg = sMsg.substr(10); } if(hUserDetails['access_level'] >= 2 && sMsg.substr(0,9) == '{*emote*}' ) { bEmote = true; sMsg = sMsg.substr(10,1024); } if(sType == 'system' && sMsg.match(/(has tipped \w+ \d+ tokens: '.{170})/) ) { sMsg = sMsg.replace(/has tipped \w+ \d+ tokens: .*/, RegExp.$1 ) + "...'"; }
 if(nUserId != 0 && sMsg.match(/(http:[^ "']+)/) ) { var sUrl = RegExp.$1; sUrl.match(/http:\/\/([^\/]+)/); var sDomain = RegExp.$1; var sConfirm = ''; if(sDomain != 'www.youtube.com' && sDomain != 'www.myfreecams.com' && sDomain != 'profiles.myfreecams.com' && sDomain != 'www.myfreecamswiki.com' ) { sConfirm = " onClick=\" if(! confirm('Warning: you are accessing a site not affiliated with MyFreeCams.com. Beware of scams and exercise caution if asked to provide personal information such as your password or email address.')) { return false; }\" "; } if(hUserDetails['access_level'] >= 2 ) { sMsg = sMsg.replace(/http:[^ "']+/,"<a target=_blank href=\"" + sUrl.replace(/"/,'') + "\" " + sConfirm + "><span style=\"font-weight:bold;font-size:10px;\">" + sUrl + "</span></a>"); } else { sMsg = sMsg.replace(/http:[^ ]*/,""); } } sMsg = ParseEmoteOutput.prototype.Parse(sMsg, { allow_user_images: g_hSelf['allow_user_images'], access_level: hUserDetails['access_level'], offline: hOptions['offline'], onload_code: "if(typeof(ChatBox) != 'undefined' && ChatBox.SmoothScroll && ! this.doOnce ) { this.doOnce=1; ChatBox.SmoothScroll('img_onload'); } ", onclick_code: "t.EnlargeImage.open(( g_oDhtmlPopup != undefined ? g_oDhtmlPopup : null ),'%IMAGE%','%SHORTCUT%')" } ); var sMode = ''; if(hOptions['mode'] ) { sMode = hOptions['mode'] + "_"; } var sSelf_Or_Other = ''; if(hOptions['user'] ) { sSelf_Or_Other = hOptions['user']; }
 else if(nUserId && g_hUsers[nUserId] && IsBroadcastState(g_hUsers[nUserId]['state']) ) { sSelf_Or_Other = 'model'; } else if(nUserId == g_hSelf['user_id'] ) { sSelf_Or_Other = 'self'; } else { sSelf_Or_Other = 'other'; } if(hOptions['extra_class'] ) { sExtraClass_Name += hOptions['extra_class'] + '_name '; sExtraClass_Chat += hOptions['extra_class'] + '_chat '; } var sType = ""; if ( hOptions['promo'] ) sType = "promo"; else if ( hOptions['chat_style'] ) sType = hOptions['chat_style']; else if ( hUserDetails['access_level'] == '5' ) sType = "admin"; else if ( hUserDetails['access_level'] == '4' ) sType = "model"; else if ( hUserDetails['access_level'] == '2' ) sType = "premium"; else if ( hUserDetails['access_level'] == '1' ) sType = "registered"; else if ( hUserDetails['access_level'] == '-1' ) sType = "system"; else if ( hUserDetails['sessionid'] > 0 ) sType = "guest"; else if ( hUserDetails['user_id'] == 0 ) sType = "system"; else sType = "system"; var sOfflineMsg = ''; var sH = ''; var sDate = ''; if(hOptions['date'] ) { sDate = "<span style=\"width:70px;white-space:nowrap;padding:0px 10px 0px 20px;font-size:10px;color:#33aa33;"; if (! g_UA.IE ) sDate += "padding-left:0px;"; sDate += "\">" + hOptions['date'] + "</span>"; } if(g_hSelf['access_level'] > 0 && g_hUsers[nUserId] && g_hUsers[nUserId]['access_level'] > 0 ) sContainerClass += "user" + nUserId + " "; if(hOptions && hOptions['mode'] && hOptions['mode'] == 'private' ) { sExtraClass_Name += " pmname "; sExtraClass_Chat += " pmchat "; }
 else if(hOptions['offline'] ) { var then = new Date(hOptions['offline_date'] * 1000); var hours = then.getHours(); var min = then.getMinutes(); if (hours < 10) hours = "0" + hours; if (min < 10) min = "0" + min; sOfflineMsg = " <font style='font-size:10px;'>[" + (then.getMonth()+1) + "-" + then.getDate() + " " + hours + ":" + min + "]</font> "; sH = "<i>"; } if(! g_hSelf['chat_text_ignore'] ) { sExtraStyle = MfcCustomFonts.prototype.get_style(g_hUsers[nUserId] ); } var ATag = ''; if(hOptions['mode'] != 'private' || bEmote ) { if(hOptions.user_menu_a_tag ) { ATag = hOptions.user_menu_a_tag; } else if(g_hSelf['access_level'] > 0 ) { ATag = "<a href="top.html?cache_id=1423267822&amp;#" onClick=\"popUserMenu.open('" + nUserId + "',g_oDhtmlPopup,{ broadcaster_id: 0" + hOptions.broadcaster_id + " }); return false;\" style=\"text-decoration:none;\">"; } else if(g_hSelf['access_level'] == 0 ) { ATag = A("members_feature",{supress_decoration:true}); } } var sExtraMouseCode=''; sExtraMouseCode += PopupBioHandlerCode(nUserId ); if (hUserDetails['access_level'] > 0 && hOptions['mode'] != 'private') sExtraMouseCode += "onMouseover=\"this.style.textDecoration = 'underline';\" onMouseout=\"this.style.textDecoration = 'none';\" "; if (sType == 'system') { if (sMsg.indexOf('has tipped') > -1) { sExtraStyle += "background-color:#FFFF00;"; } sMsg.replace(/Registered/,A('register') + "Registered</a>"); } if(HighlightUserChat.hUsers[ nUserId ] ) sExtraContainerStyle += 'background-color:' + HighlightUserChat.hUsers[ nUserId ] + ';'; else if(hOptions.type=='player' && g_hSelf.highlight_friends_chat && g_hUsers[nUserId].friend )
 sExtraContainerStyle += 'background-color:#FFFF99;'; if(hOptions['welcome'] ) { sH += " <div style=\" " + MfcCustomFonts.prototype.get_style(g_hUsers[ hOptions['room_owner_id'] ] ) + " padding: 5px 5px 5px 0px; font-size:17px; word-wrap:break-word; \"> Topic: " + sMsg + " </div> <br> "; } else if(hOptions['notice'] == 1 ) { sH += "<div style='text-decoration:none;font-size:13px;font-weight:bold;color:#FF0000;'>* " + sMsg+"</div>"; } else if(bEmote ) { sH += "<div class='inline_emote chat_" + sType + "'>* " + ATag + "<span class='username' " + sExtraMouseCode + " >" + hUserDetails['username'] + sOfflineMsg + "</span></a> " + sMsg+"</div>"; } else { var sPrefix = ''; var sUsername = hUserDetails['username']; if(hOptions.inline_pm ) { if(nUserId == g_hSelf.user_id ) { sContainerClass += 'chat_pm_send '; sPrefix = 'PM to '; sUsername = hOptions.username; } else { sContainerClass += 'chat_pm_receive '; sPrefix = 'PM from '; } } var sName = ''; if(hUserDetails.username != 'FCServer' && sUsername ) { sName = ATag + "<span class='" + sMode + "name_" + sType + " " + sMode + "name_" + sSelf_Or_Other + " " + sExtraClass_Name + "' " + sExtraMouseCode + " style='text-decoration:none;" + sExtraStyle + "'>" + sPrefix + sUsername + sOfflineMsg + sSep + "</span></a> ";
 } sH += "<div class='chat_container " + sContainerClass + "' " + ( sExtraContainerStyle ? ( ' style="' + sExtraContainerStyle + '" ' ) : '' ) + ">" + sName + sDate + "<span class='\n " + sMode + "chat \n " + sMode + "chat_"+sType + "\n " + sMode + "chat_"+sSelf_Or_Other + "\n " + sExtraClass_Chat + "\n ' style='" + sExtraStyle + "'> " + sMsg + " </span></div>"; } if (hOptions['offline'] || hOptions['oldmsg']) sH += "</i>"; sH += "<end>"; return sH;}var LoadVideo = setTimeout;function FcDetails(){ for(var nRemoteUserId in g_hoPMWindows ) { var oPMWindow; if(oPMWindow = WindowHandle.Get('pm',nRemoteUserId ) ) { oPMWindow.FcDetails(); } } for(var nRemoteUserId in g_hoPlayerWindows ) { var oPlayerWindow; if(oPlayerWindow = WindowHandle.Get('player', nRemoteUserId ) ) { oPlayerWindow.FcDetails(); } }}
function LoadChat(){ if ( g_bLoadChat == 1 ) { for(var a = 0; a < 2; a++) { LoadVideo("LoadChat()", 20000 * Rate()); } if ( ! g_bLoadChat ) g_bLoadChat = 1; }}function StartVoyeur(nModelId, nPrvSessId){ for (nWindowId in g_hoPlayerWindows) { if(oPlayerWindow = WindowHandle.Get('player', nWindowId ) ) { if(oPlayerWindow.Lounge.nModelId == nModelId ) { oPlayerWindow.FcStartVoyeur(nPrvSessId ); } } } var oPMWindow; if(oPMWindow = WindowHandle.Get('pm',nModelId) ) { oPMWindow.FcStartVoyeur(nPrvSessId ); } var oPlayerWindow; if(oPlayerWindow = WindowHandle.Get('player', nModelId ) ) { oPlayerWindow.FcStartVoyeur(nPrvSessId ); }}function FcSessionState(nFrom, nState, nUserId ){ var hUser; if ( ! ( hUser = g_hUsers[ nUserId ] ) ) { return; } if(FcSessionState.bModelsLoaded == false ) { FcSessionState.nLoadingCount++;
 var nNow = Math.floor(new Date().getTime() / 1000); if(nNow > FcSessionState.nLastModelProgress ) { for ( nWindowId in g_hoPlayerWindows ) { var oPlayerWindow; if(oPlayerWindow = WindowHandle.Get('player', nWindowId ) ) oPlayerWindow.ModelMenuBar.Message.Set(); } FcSessionState.nLastModelProgress = nNow; } } if(! FcSessionState.bRefreshModelList_TimerLock ) { for ( nWindowId in g_hoPlayerWindows ) { var oPlayerWindow; if(oPlayerWindow = WindowHandle.Get('player', nWindowId ) ) { if(oPlayerWindow.OnlineBroadcasterList ) { oPlayerWindow.OnlineBroadcasterList.Refresh(); } } } FcSessionState.bRefreshModelList_TimerLock = true; setTimeout(function() { FcSessionState.bRefreshModelList_TimerLock = false; }, 500 ); } if(g_bLoginDone && hUser['state'] == w.FCVIDEO_TX_AWAY && hUser['truepvt'] ) { hUser['truepvt'] = 0; } if(hUser.friend && hUser.access_level == 4 && FcSessionState.hNotificationDuplicateFilter[ hUser.user_id ] != hUser['state'] ) { var bNotification = false;
 if ( hUser['state'] == FCVIDEO_TX_GRP ) { bNotification = true; Notification("<a href="http://www.myfreecams.com/mfc2/static/\&quot;javascript:popUserMenu.open(&quot;+nUserId+&quot;,g_oDhtmlPopup);\&quot;"><b>" + hUser['username'] + "</b></a> is in a Group Show.","bw.group_door.16x16.png"); if ( g_hSelf['sound_model_friend_private'] == 1 ) { Sound('sound_model_friend_private'); } } else if ( hUser['state'] == FCVIDEO_TX_PVT ) { bNotification = true; Notification("<a href="http://www.myfreecams.com/mfc2/static/\&quot;javascript:popUserMenu.open(&quot;+nUserId+&quot;,g_oDhtmlPopup);\&quot;"><b>" + hUser['username'] + "</b></a> is in " + ( hUser.truepvt ? "a TruePrivate." : "Private Chat." ), ( hUser.truepvt ? "bw.locked_door.16x16.png" : "bw.closed_door.16x16.png" ) ); if ( g_hSelf['sound_model_friend_private'] == 1 ) { Sound('sound_model_friend_private'); } } else if ( hUser['state'] == 0 && hUser['previous_state'] != 0 ) { bNotification = true; Notification("<a href="http://www.myfreecams.com/mfc2/static/\&quot;javascript:popUserMenu.open(&quot;+nUserId+&quot;,g_oDhtmlPopup);\&quot;"><b>" + hUser['username'] + "</b></a> is in Public Chat.","bw.open_door.16x16.png"); } if(bNotification ) FcSessionState.hNotificationDuplicateFilter[ hUser.user_id ] = hUser['state']; } var oPMWindow; if(g_hoPMWindows[nUserId] && ( oPMWindow = WindowHandle.Get('pm',nUserId) ) ) { if(hUser.access_level == 4 && ( hUser.state == FCVIDEO_TX_IDLE || hUser.state == FCVIDEO_TX_AWAY ) ) { g_hoPMWindows[nUserId].presentation_state = w.EVSESSION_NONE; } if(( hUser.previous_state == FCVIDEO_RX_IDLE || hUser.previous_state == FCVIDEO_OFFLINE ) && hUser.state == EVSESSION_NONE ) { oPMWindow.LoadVideo(); } oPMWindow.RefreshSessionState(); } var oPlayerWindow; if(g_hoPlayerWindows[ nUserId ] && ( oPlayerWindow = WindowHandle.Get('player', nUserId ) ) ) {
 if(hUser.access_level == 4 && ( hUser.state == FCVIDEO_TX_IDLE || hUser.state == FCVIDEO_TX_AWAY ) ) { g_hoPlayerWindows[nUserId].presentation_state = w.EVSESSION_NONE; } if(( hUser.previous_state == FCVIDEO_RX_IDLE || hUser.previous_state == FCVIDEO_OFFLINE ) && hUser.state == EVSESSION_NONE ) { oPlayerWindow.LoadVideo(); } oPlayerWindow.RefreshSessionState(); } if(hUser['access_level'] == 4 ) { if(typeof(FcSessionState.oRateLimit) != 'undefined' ) clearTimeout(FcSessionState.oRateLimit ); FcSessionState.oRateLimit = setTimeout(function(){ FcSessionState_RateLimited(nFrom, nState, nUserId ); }, 1000 ); }}FcSessionState.hNotificationDuplicateFilter = {};FcSessionState.ModelReset = function(){ FcSessionState.nLoadingMax = 0; FcSessionState.nLoadingCount = 0; FcSessionState.bModelsLoaded = false; FcSessionState.nLastModelProgress = 0;};FcSessionState.ModelReset();function FcSessionState_RateLimited(nFrom, nState, nUserId){ for(var nWindowId in g_hoPlayerWindows ) { var oPlayerWindow; if(oPlayerWindow = WindowHandle.Get('player', nWindowId ) ) { if(oPlayerWindow.Lounge.nModelId == nUserId ) { oPlayerWindow.RefreshMessageBar(); }
 } }}function FcEndSessions(nModelId, nSessionType ){ for (nWindowId in g_hoPlayerWindows) { if(( oPlayerWindow = WindowHandle.Get('player', nWindowId ) ) && g_hLoungeIds[ oPlayerWindow.g_nBroadcasterId ] ) { g_hoPlayerWindows[nWindowId]['private_session_id'] = 0; g_hoPlayerWindows[nWindowId].presentation_state = w.EVSESSION_NONE; } } if ( g_hoPlayerWindows[nModelId] && g_hoPlayerWindows[nModelId]['window'] ) { g_hoPlayerWindows[nModelId].presentation_state = w.EVSESSION_NONE; g_hoPlayerWindows[nModelId]['private_session_id'] = 0; } if (g_hoPMWindows[nModelId] && g_hoPMWindows[nModelId]['window'] ) { g_hoPMWindows[nModelId].presentation_state = w.EVSESSION_NONE; g_hoPMWindows[nModelId]['private_session_id'] = 0; } for (nWindowId in g_hoPlayerWindows) { if(( oPlayerWindow = WindowHandle.Get('player', nWindowId ) )
 && g_hLoungeIds[ oPlayerWindow.g_nBroadcasterId ] ) { g_hoPlayerWindows[nWindowId].presentation_state = w.EVSESSION_NONE; oPlayerWindow.FcEndSession(nModelId, nSessionType ); } } var oPlayerWindow; if(oPlayerWindow = WindowHandle.Get('player', nModelId ) ) { oPlayerWindow.FcEndSession(nModelId, nSessionType ); } var oPMWindow; if(oPMWindow = WindowHandle.Get('pm',nModelId) ) { oPMWindow.FcEndSession(nModelId, nSessionType ); }}var TogglePersonalMenu = { sDisplay: 'block', bDone: 0, nGrowShrinkProgress: 0, oDiv: null, nTimeout: 0};TogglePersonalMenu.Start = function(hOptions){ hOptions = hOptions || {}; clearTimeout(TogglePersonalMenu.nTimeout ); MenuRevealBlinker.Stop(); if(! hOptions || ! hOptions['item'] ) { if ( ! hOptions['render_only'] ) { g_hSelf['show_main_menu'] = g_hSelf['show_main_menu'] == 1 ? 0 : 1; UserExtensions.Write('show_main_menu', g_hSelf['show_main_menu'] ); } TogglePersonalMenu.sDisplay = g_hSelf['show_main_menu'] == 1 ? 'block' : 'none'; LoadMenu(); LoadPersonalMenu('reset'); if(! g_UA.tablet && ! g_UA.mobile ) {
 var nWidth = g_hSelf.single_page_website ? 170 : 188; TogglePersonalMenu.SlideOpenClose(document.getElementById("friends"),TogglePersonalMenu.sDisplay,nWidth,24,"x"); } else { GetEl('friends').style.display = TogglePersonalMenu.sDisplay; TogglePersonalMenu.Finish(); } if(window.frames['main'] && window.frames['main'].RefreshMessageBar ) window.frames['main'].RefreshMessageBar(); }};TogglePersonalMenu.SlideOpenClose = function(oDiv,sMode,nWidthOrHeight,nSpeed,cAxis){ nSpeed = parseInt(nSpeed ); if(typeof(TogglePersonalMenu.nGrowShrinkProgress) == 'undefined' ) TogglePersonalMenu.nGrowShrinkProgress = 0; if(sMode == 'none' ) { TogglePersonalMenu.nGrowShrinkProgress = TogglePersonalMenu.nGrowShrinkProgress - nSpeed; if(TogglePersonalMenu.nGrowShrinkProgress <= nSpeed ) { if(cAxis == 'x') oDiv.style.width = 0; else oDiv.style.height = 0; oDiv.style.display = sMode; TogglePersonalMenu.nGrowShrinkProgress = 0; TogglePersonalMenu.Finish(); return; } } else if(sMode == 'block' ) { if(TogglePersonalMenu.nGrowShrinkProgress == 0 || TogglePersonalMenu.nGrowShrinkProgress >= nWidthOrHeight ) { oDiv.style.display = sMode; } TogglePersonalMenu.nGrowShrinkProgress = TogglePersonalMenu.nGrowShrinkProgress + nSpeed; if(TogglePersonalMenu.nGrowShrinkProgress >= nWidthOrHeight ) { if(cAxis == 'x') oDiv.style.width = nWidthOrHeight; else oDiv.style.height = nWidthOrHeight;
 TogglePersonalMenu.nGrowShrinkProgress = nWidthOrHeight; TogglePersonalMenu.Finish(); return; } } if(TogglePersonalMenu.nGrowShrinkProgress < 0 ) { return; } if(cAxis == 'x') oDiv.style.width = Math.round(TogglePersonalMenu.nGrowShrinkProgress); else oDiv.style.height = Math.round(TogglePersonalMenu.nGrowShrinkProgress); TogglePersonalMenu.oDiv = oDiv; TogglePersonalMenu.nTimeout = setTimeout(function(){ TogglePersonalMenu.SlideOpenClose(TogglePersonalMenu.oDiv,sMode,nWidthOrHeight,nSpeed,cAxis) } ,1 );};TogglePersonalMenu.Finish = function(){ if(window.frames['main'] && window.frames['main'].OnResizeHandler ) window.frames['main'].OnResizeHandler();};function ChatStreamImage_FlagBad(sSrc){ if(! ChatStreamImage_FlagBad.oReq ) ChatStreamImage_FlagBad.oReq = createRequestObject(); try { ChatStreamImage_FlagBad.oReq.open("get","../php/chat_stream_image.php?flag_bad=1&user_id=" + g_hSelf['user_id'] + "&image_sr"+"c=" + sSrc + "&" + Math.random()); ChatStreamImage_FlagBad.oReq.onreadystatechange = ChatStreamImage_FlagBadResponse; ChatStreamImage_FlagBad.oReq.send(null); } catch (oError) { Log('ChatStreamImage_FlagBad() ajax open caught exception: ' + oError.description ); }}function ChatStreamImage_FlagBad_Response(){ if(ChatStreamImage_FlagBad.oReq.readyState != 4 ) return;}function ChatStreamImage(nHostUserId,sCallingWindowType,sMessage){ try { g_oChatStreamImage_Req.open("get","../php/chat_stream_image.php?host_user_id=" + nHostUserId + "&calling_window_type=" + sCallingWindowType + "&message=" + encodeURIComponent(sMessage) + "&user_id=" + g_hSelf['user_id']); g_oChatStreamImage_Req.onreadystatechange = ChatStreamImage_Response; g_oChatStreamImage_Req.send(null); }
 catch (oError) { Log('ChatStreamImage() ajax open caught exception: ' + oError.description ); }}function ChatStreamImage_Response(){ if (g_oChatStreamImage_Req.readyState != 4 ) return; var sResponse = g_oChatStreamImage_Req.responseText; aResponseFields = sResponse.split('\t'); var hResponseFields = { response_code: aResponseFields[0], host_user_id: aResponseFields[1], calling_window_type: aResponseFields[2], message: aResponseFields[3], original_message: aResponseFields[4] || '' }; if (sResponse.match(/ERROR/i)) { if (hResponseFields['calling_window_type'] == 'player') { g_hoPlayerWindows[ hResponseFields['host_user_id'] ]['window'].ChatQueue.Format_Append(hResponseFields['message'], 0 ); TxCmd(FCTYPE_CMESG, t.g_nSessionId, t.g_hoPlayerWindows[ hResponseFields['host_user_id'] ]['room_channel'] , 0, 0, hResponseFields['original_message']); } else if (hResponseFields['calling_window_type'] == 'pm') { TxPrivateMessage(hResponseFields['host_user_id'],hResponseFields['original_message']); try { g_hoPMWindows[ hResponseFields['host_user_id'] ]['window'].Receive({ msg: hResponseFields['message'], msguid: g_hSelf['user_id'] }); } catch(oError) { } } } else if ( ! sResponse.match(/OK/)) { g_hoPlayerWindows[ nPlayerOwnerId ]['window'].ChatQueue.Format_Append("There was an error. Please contact support.\n\n", 0 ); } else { if (hResponseFields['calling_window_type'] == 'player') { TxCmd(FCTYPE_CMESG, t.g_nSessionId, t.g_hoPlayerWindows[ hResponseFields['host_user_id'] ]['room_channel'] , 0, 0, hResponseFields['message']); } else if (hResponseFields['calling_window_type'] == 'pm')
 { TxPrivateMessage(hResponseFields['host_user_id'], hResponseFields['message']); try { g_hoPMWindows[ hResponseFields['host_user_id'] ]['window'].Receive({ msg: hResponseFields['message'], msguid: g_hSelf['user_id'] }); } catch(oError) { alert("PM Window Image Error: " + oError.description); } } } return;}function ChatStreamImageSubmit(oCaller,sURL){ var sURL = sURL || oCaller.GetEl('chat_stream_image_url').value; sURL = sURL.replace(/^ +/,''); sURL = sURL.replace(/ +$/,''); if (! sURL.match(/http:[\S]+.(jpeg|jpg|gif|png)/i)) { alert("No valid image URL found."); return; } oCaller.Send(sURL); oCaller.GetEl('chat_stream_image_popup').style.display='none'; return false;}var g_nClientInfo_Retries = 0;var ClientInfo = { oRequest: createRequestObject(), sTZ: 0, nUID: 0, sSystemInfo: 0, sSystemFonts: 0};ClientInfo.GetSupplementalData = function(){ var sData = "r=" + Math.round(Math.random() * 1000000) + "&mode=supplemental_data" + "&json=true" + "&expose_errors=" + g_hQS['expose_errors']; ClientInfo.oRequest.open("POST",'../php/client_info.php');
 ClientInfo.oRequest.setRequestHeader("Content-type", "application/x-www-form-urlencoded"); ClientInfo.oRequest.onreadystatechange = ClientInfo.Response; ClientInfo.oRequest.send(sData );};ClientInfo.Submit = function(){ if(ClientInfo.oRequest == null ) ClientInfo.oRequest = createRequestObject(); var aSystemInfo; var hSystemInfo = {}; var sSelectiveSystemInfo = ''; var sCrcSystemInfo; var sCrcSystemBroad; var sCrcSystemFonts; var sCrcSystemFontsSorted; var sSystemFontsSorted; var sDPITest; var oTime = new Date(); ClientInfo.oTZ = -oTime.getTimezoneOffset() / 60; if(typeof(Storage) !== 'undefined' ) { if(localStorage.uid ) { ClientInfo.nUID = localStorage.uid; } else { var nUID = parseInt(Math.random() * 99999999999999 ); ClientInfo.nUID = nUID; localStorage.uid = ClientInfo.nUID; } } else if(g_UA.FlashAvailable ) { var oUtilities = getFlashObject('flash_utilities'); try { ClientInfo.nUID = oUtilities.GetVariable("/:g_nUID"); ClientInfo.sSystemInfo = oUtilities.GetVariable("/:g_SystemInfo"); ClientInfo.sSystemFonts = oUtilities.GetVariable("/:g_SystemFonts"); } catch(oError) { ClientInfo.nUID = -1; }
 } try { if(g_UA.FlashAvailable && g_UA.IE ) { var oUtilities = getFlashObject('flash_utilities'); ClientInfo.sSystemInfo = oUtilities.GetVariable("/:g_SystemInfo"); var aSystemInfo = ClientInfo.sSystemInfo.split('\n'); var hSystemInfo = {}; for(var nK in aSystemInfo ) { hSystemInfo[aSystemInfo[nK].split(':')[0]] = aSystemInfo[nK].split(':')[1]; } var nCleanVersionNumber = hSystemInfo.version.replace(/\D/g,''); var aNumbers = hSystemInfo.version.match(/(\d+)/g); var sSizedVersionNumber=''; for(var n=0; n<aNumbers.length; n++ ) { if(n > 0 ) sSizedVersionNumber += MfcStringUtilities.char_padding(aNumbers[n],3,0,'left' ); else sSizedVersionNumber += aNumbers[n]; } var nSizedVersionNumber = parseInt(sSizedVersionNumber ); if(11008800174 > nSizedVersionNumber && 11008800000 < nSizedVersionNumber) { g_oReportBack = new MfcReportBack('Flash'); g_oReportBack.Send('Version' , hSystemInfo.version + " " + nSizedVersionNumber ); DhtmlPrompt({ prompt_type: 'alert', message: " You need to <a href=http://get.adobe.com/flashplayer/ target=_new>update flash player</a> to continue using MyFreeCams, you are using a version with bugs preventing video from working in the Internet Explorer browser. Update your flash player here: <a href=http://get.adobe.com/flashplayer/ target=_new>http://get.adobe.com/flashplayer/</a> " }); } } } catch(e){} if(1 ) { var mfcClientUID = new MfcClientUID(); var aFonts = mfcClientUID.FontTest(); var aPlugins = mfcClientUID.PluginTest(); sDPITest = mfcClientUID.GetDPI('entropic'); sCrcSystemFonts = MfcCrc32.prototype.string(aFonts.join('') );
 sCrcSystemInfo = MfcCrc32.prototype.string(sDPITest ); sCrcSystemBroad = MfcCrc32.prototype.string(aFonts.join('') + sDPITest ); } else if(g_UA.FlashAvailable ) { var oUtilities = getFlashObject('flash_utilities'); if(typeof(ClientInfo.sSystemInfo) == 'string' ) { aSystemInfo = ClientInfo.sSystemInfo.split('\n'); for(var nK in aSystemInfo ) { hSystemInfo[aSystemInfo[nK].split(':')[0]] = aSystemInfo[nK].split(':')[1]; } for(var sK in hSystemInfo ) { if(sK == 'avHardwareDisable' || sK == 'hasAccessibility' || sK == 'hasAudioEncoder' || sK == 'hasAudio' || sK == 'hasEmbeddedVideo' || sK == 'hasIME' || sK == 'hasMP3' || sK == 'hasPrinting' || sK == 'hasScreenBroadcast' || sK == 'hasScreenPlayback' || sK == 'hasStreamingAudio' || sK == 'hasStreamingVideo' || sK == 'hasTLS' || sK == 'hasVideoEncoder' || sK == 'isEmbeddedInAcrobat' || sK == 'language' || sK == 'localFileReadDisable' || sK == 'maxLevelIDC' || sK == 'pixelAspectRatio' || sK == 'screenColor' || sK == 'screenDPI' || sK == 'screenResolutionX' || sK == 'screenResolutionY' || sK == 'windowlessDisable' ) { sSelectiveSystemInfo += ( sK + ": " + hSystemInfo[sK] + "\n" ); } } aSystemFonts = ClientInfo.sSystemFonts.split(','); aSystemFonts.sort(); sSystemFontsSorted = aSystemFonts.join(); 
 sCrcSystemInfo = MfcCrc32.prototype.string(ClientInfo.sSystemInfo ); sCrcSystemBroad = MfcCrc32.prototype.string(ClientInfo.sSystemFonts + sSelectiveSystemInfo ); sCrcSystemFonts = MfcCrc32.prototype.string(ClientInfo.sSystemFonts ); sCrcSystemFontsSorted = MfcCrc32.prototype.string(sSystemFontsSorted ); } if(ClientInfo.nUID < 2 && g_nClientInfo_Retries < 3 ) { g_nClientInfo_Retries++; setTimeout(function() { ClientInfo.Submit(5); }, 5000 ); return; } } try { GetEl('login_uid').value = ClientInfo.nUID; } catch(e) { } var sData = "r=" + Math.round(Math.random() * 1000000) + "&json=true" + "&expose_errors=" + g_hQS['expose_errors'] + "&baf=" + g_hQS['baf'] + "&uid=" + ClientInfo.nUID + "&tz=" + ClientInfo.oTZ + "&dpi_test=" + sDPITest + "&username=" + g_hCk['username'] + "&passcode=" + g_hCk['passcode'] + "&co=" + oTime.getTime() + "&sz=" + (screen.width + 'x' + screen.height) + "&session_id=" + g_nSessionId + "&sCrcSystemInfo=" + encodeURIComponent(sCrcSystemInfo) + "&sCrcSystemBroad=" + encodeURIComponent(sCrcSystemBroad) + "&sCrcSystemFonts=" + encodeURIComponent(sCrcSystemFonts) + "&sCrcSystemFontsSorted=" + encodeURIComponent(sCrcSystemFontsSorted) + "&flashver=" + encodeURIComponent(GetSwfVer()); try { Log("ClientInfo POST"); ClientInfo.oRequest.open("POST",'../php/client_info.php'); ClientInfo.oRequest.setRequestHeader("Content-type", "application/x-www-form-urlencoded"); ClientInfo.oRequest.onreadystatechange = ClientInfo.Response; ClientInfo.oRequest.send(sData ); } catch (oError) { g_oReportBack = new MfcReportBack('ClientInfo'); g_oReportBack.Send('Submit' , oError.description ); }
};ClientInfo.Response = function(){ if(ClientInfo.oRequest.readyState != 4) return; var aJSON = ParseJSON(ClientInfo.oRequest.responseText ) || []; Log("ClientInfo.Response: " + ClientInfo.oRequest.responseText ); for(a=0; a < aJSON.length; a++ ) { var hJSON = aJSON[a]; if(hJSON == null ) { continue; } if(hJSON.token ) { g_hSelf.token = hJSON.token; } else if ( hJSON.user_notepad ) { var aUserNotepad = hJSON.user_notepad.split(','); for(var nK=0; nK < aUserNotepad.length; nK++ ) { var nUserId = aUserNotepad[nK]; if ( ! g_hUsers[nUserId] ) { g_hUsers[nUserId] = {}; } g_hUsers[nUserId]['notes'] = 1; } LoadFriends(); } else if(hJSON.load_chat ) { g_bLoadChat = 1; LoadChat(); } } return;};function getFlashObject(sFlashId){ if (window.document[sFlashId]) { return window.document[sFlashId]; }
 if (navigator.appName.indexOf("Microsoft Internet")==-1) { if (document.embeds && document.embeds[sFlashId]) { return document.embeds[sFlashId]; } } else { return document.getElementById(sFlashId); }}function PruneUserStore(nUserId ) { PruneUser(nUserId); }function PruneUsers(){ for(var nUserId in g_hUsers ) { PruneUser(nUserId ); }}function PruneUser(nUserId ){ if(! g_hUsers[ nUserId ] ) { return; } var bNotInOurRooms = true; for(var nRoomUserId in g_hoPlayerWindows ) { if(g_hUsers[ nUserId ] && g_hUsers[ nUserId ].rooms && g_hUsers[ nUserId ].rooms[ nRoomUserId ] ) { bNotInOurRooms = false; } } if(nUserId != g_hSelf['user_id'] && ! g_hUsers[ nUserId ]['friend'] && g_hUsers[nUserId]['access_level'] != 4 && ! t.IsBroadcastState(g_hUsers[nUserId]['state'] ) && ! g_hUsers[nUserId]['retain'] && ! g_hoPMWindows[ nUserId ] && bNotInOurRooms ) { delete g_hUsers[ nUserId ]; }
}function Admin(sCommand,sArg1){ sArg1 = sArg1 || ''; if(! top.g_sClearCode ) return; if(! Admin.oReq ) Admin.oReq = createRequestObject(); try { Admin.oReq.open("get","../php/admin_tools.php?command="+sCommand+"&arg1="+encodeURIComponent(sArg1)+"&clear_code=" + top.g_sClearCode + "&" + Math.random()); Admin.oReq.onreadystatechange = Admin_Response; Admin.oReq.send(null); } catch (oError) { Log('Admin ajax open caught exception: ' + oError.description ); }}function Admin_Response(){ if(Admin.oReq.readyState != 4 ) return; Admin_Response.hData = ParseJSON(Admin.oReq.responseText );
 if(! Admin_Response.hData ) { return; } Admin_Response.hData.profile = ParseJSON(decodeURIComponent(Admin_Response.hData.profile ) ); Admin_Response.hData.bwdata = ParseJSON(decodeURIComponent(Admin_Response.hData.bwdata ) ); Admin_Response.hData.last_updated = decodeURIComponent(Admin_Response.hData.last_updated ); var sH=''; for(var sK1 in Admin_Response.hData ) { if(sK1 == 'last_updated' ) { sH += " <tr><td>&nbsp;</td></tr> </tr> <tr> <td style=font-size:10px; nowrap><b>" + sK1 + "</b>:&nbsp;</td> <td style=font-size:10px;>" + Admin_Response.hData[sK1] + "</td> </tr> "; } else { sH += "<tr><td style='font-size:10px;border-bottom:1px solid #dddddd;padding-top:6px;' nowrap colspan=2><b>" + sK1 + "</td></tr>"; for(var sK2 in Admin_Response.hData[sK1] ) { sH += " <tr> <td style=font-size:10px; nowrap><b>" + sK2 + "</b>:&nbsp;</td> <td style=font-size:10px;>" + Admin_Response.hData[sK1][sK2] + "</td> </tr> "; } } } if(sH ) { SetHTML("menu_extras_heading","HD Video Profile"); SetHTML("menu_extras"," <table>" + sH + "</table> "); } return;}function SaveSetting(sSetting,sVal,sVal2,oCallback){
 g_hSelf[sSetting] = sVal; if(( g_UA.tablet || g_UA.mobile ) && ( sSetting == 'video_size' || sSetting == 'video_width' || sSetting == 'models_per_page' || sSetting == 'hide_people' || sSetting == 'online_model_order' ) ) { return; } Log('SaveSetting: ' + sSetting + ', ' + sVal + ', ' + sVal2 ); if(typeof(SaveSetting.oRequests) == 'undefined' ) { SaveSetting.oRequests = {}; } if(typeof(SaveSetting.oCallbacks) == 'undefined' ) { SaveSetting.oCallbacks = {}; } if(typeof(SaveSetting.nRequestId) == 'undefined' ) { SaveSetting.nRequestId = 0; } if(g_hSelf['access_level'] < 1 ) { return; } sVal2 = (sVal2 == 'undefined' ) ? '' : sVal2; if(sSetting == 'webcam_security_access_level' && t.g_hWindows['broadcast'] && t.g_hWindows['broadcast'].window ) { alert("Your new security settings will not take effect until you have restarted your webcam."); t.g_hWindows['broadcast'].window.location.reload(); } try { SaveSetting.nRequestId++; if(oCallback ) { SaveSetting.oCallbacks[ SaveSetting.nRequestId ] = oCallback; } SaveSetting.oRequests[ SaveSetting.nRequestId ] = createRequestObject(); SaveSetting.oRequests[ SaveSetting.nRequestId ].open("get","../php/user_settings.php?user_id=" + g_hSelf['user_id'] + "&update=1&key="+sSetting+"&value="+encodeURIComponent(sVal)+"&value2="+encodeURIComponent(sVal2)+"&token=" + g_hSelf.token + "&" + Math.random() ); SaveSetting.oRequests[ SaveSetting.nRequestId ].onreadystatechange = SaveSetting.Response; SaveSetting.oRequests[ SaveSetting.nRequestId ].send(null); } catch(oError) { g_oReportBack = new MfcReportBack('SaveSetting'); g_oReportBack.Send('Send' , oError.description );
 }}SaveSetting.Response = function(){ for(var sK in SaveSetting.oRequests ) { if(SaveSetting.oRequests[sK].readyState == 4 ) { try { if(SaveSetting.oRequests[sK].responseText == 1 ) { TxCmd(FCTYPE_RELOADSETTINGS, g_nSessionId, 0 ); } else if (SaveSetting.oRequests[sK].responseText) { eval(SaveSetting.oRequests[sK].responseText ); } } catch(oError) { g_oReportBack = new MfcReportBack('SaveSetting'); g_oReportBack.Send('Response', "SaveSetting:Response catch: " + oError.description + " " + SaveSetting.oRequests[sK].responseText + " " + SaveSetting.oRequests[sK].responseText ); } if(SaveSetting.oCallbacks[sK] ) { SaveSetting.oCallbacks[sK]( SaveSetting.oRequests[sK].responseText ); delete SaveSetting.oCallbacks[sK]; } delete SaveSetting.oRequests[sK]; } }};function GetDocumentDimensions(oDoc,oWin){ oDoc = oDoc || document; var nWidth; var nHeight; if (typeof(oWin.innerWidth ) == 'number') { nWidth = oWin.innerWidth; nHeight = oWin.innerHeight; } else if (oDoc.documentElement && (oDoc.documentElement.clientWidth || oDoc.documentElement.clientHeight )) { nWidth = document.documentElement.clientWidth; nHeight = oDoc.documentElement.clientHeight; } else if (oDoc.body && (oDoc.body.clientWidth || oDoc.body.clientHeight )) { nWidth = oDoc.body.clientWidth; nHeight = oDoc.body.clientHeight;
 } return { width: nWidth, height: nHeight };}var UCR = { hRooms: {}, bAutoRoomOpen: false, bInitialLoadDone: false};UCR.Request = function(){ TxCmd(FCTYPE_UCR, g_nSessionId, 0, FCCHAN_JOIN, 0);};UCR.Receive = function(nArg1, nArg2, sPayload ){ if(! nArg1 && nArg2 == FCRESPONSE_ERROR ) { alert('Member Room Error'); } if(nArg1 ) { var hRoom = ParseJSON(decodeURIComponent(sPayload) ); if(nArg2 == w.FCCHAN_JOIN ) { var aRoomNameStyle = new Array(); if(hRoom.c.opt & FCOPT_ITALICS ) aRoomNameStyle.push("font-style:italic;"); if(hRoom.c.font ) aRoomNameStyle.push("font-family:" + MfcCustomFonts.prototype.fonts[ hRoom.c.font ].name + ";"); if(hRoom.c.color && UCR.hColors[ hRoom.c.color ] ) aRoomNameStyle.push("color:#" + hRoom.c.color + ";"); hRoom.name_font_style = aRoomNameStyle.join(''); hRoom.name = hRoom.name.replace(/&\S+/,''); hRoom.originator_id = hRoom.id - 100000000; if(! g_hUsers[ hRoom.originator_id ] ) { g_hUsers[ hRoom.originator_id ] = { username: hRoom.o.name || 'RoomOriginator', user_id: hRoom.originator_id, access_level: '2', state: '0', photos: '0', rating: '-2', cam_score: '0',
 aboutme: 'Member Created Room', active: '1', blurb: 'Member Created Room', topic: 'Member Created Room', creation_date: '2011-04-28 00:12:00', avatars: '1', model_group: '1' }; } g_hUsers[ hRoom.originator_id ].chat_background_id = ( hRoom.c.bg || 0 ); g_hUsers[ hRoom.originator_id ].retain = true; UCR.hRooms[ nArg1 ] = hRoom; if(g_hSelf.user_id == hRoom.originator_id && UCR.bAutoRoomOpen ) { t.Load('player',{ broadcaster_id: hRoom.originator_id }); UCR.bAutoRoomOpen = false; } } else if(nArg2 == w.FCCHAN_PART ) { delete UCR.hRooms[ nArg1 ]; } } if(UCR.bInitialLoadDone || ( ! UCR.bInitialLoadDone && nArg2 == w.FCCHAN_WELCOME )) { if(g_hWindows['user_created_rooms'] ) { try { g_hWindows['user_created_rooms'].window.UCRPopup.RefreshRooms(); } catch(e) { Log(e.message); } } else { TxCmd(FCTYPE_UCR, g_nSessionId, 0, FCCHAN_PART, 0); } UCR.bInitialLoadDone = true; }};UCR.CreateRoom = function(nPermissionsMask, sName, nFont, nFontOptions, sFontColor, nBackground, nVideoMode, sDescription ){ var sData = '{' + '"perm":' + nPermissionsMask + ',' + '"name":"' + sName + '",' + '"video":' + nVideoMode + ',' + '"description":"' + sDescription + '",' + '"c":{' + '"font":' + nFont + ',' +
 '"opt":' + nFontOptions + ',' + '"bg":' + ( nBackground || 0 ) + ',' + '"color":"' + sFontColor + '"' + '}' + '}'; TxCmd(w.FCTYPE_MYUCR, g_nSessionId, 0, nPermissionsMask, w.FCCHAN_JOIN, sData);};UCR.hColors = { "FF0000": "Red", "00FF00": "Green", "0000FF": "Blue", "FF00FF": "Magenta", "000000": "Black", "70DB93": "Aquamarine", "5C3317": "Baker'sChocolate", "9F5F9F": "BlueViolet", "B5A642": "Brass", "D9D919": "BrightGold", "A62A2A": "Brown", "8C7853": "Bronze", "A67D3D": "BronzeII", "5F9F9F": "CadetBlue", "D98719": "CoolCopper", "B87333": "Copper", "FF7F00": "Coral", "42426F": "CornflowerBlue", "5C4033": "DarkBrown", "2F4F2F": "DarkGreen", "4A766E": "DarkGreenCopper", "4F4F2F": "DarkOliveGreen", "9932CD": "DarkOrchid", "871F78": "DarkPurple", "6B238E": "DarkSlateBlue", "2F4F4F": "DarkSlateGrey", "97694F": "DarkTan", "7093DB": "DarkTurquoise", "855E42": "DarkWood", "545454": "DimGrey", "856363": "DustyRose", "D19275": "Feldspar", "8E2323": "Firebrick", "F5CCB0": "Flesh", "238E23": "ForestGreen", "CD7F32": "Gold", "DBDB70": "Goldenrod", "C0C0C0": "Grey", "527F76": "GreenCopper", "93DB70": "GreenYellow", "215E21": "HunterGreen",
 "4E2F2F": "IndianRed", "9F9F5F": "Khaki", "C0D9D9": "LightBlue", "A8A8A8": "LightGrey", "8F8FBD": "LightSteelBlue", "E9C2A6": "LightWood", "32CD32": "LimeGreen", "E47833": "MandarianOrange", "8E236B": "Maroon", "32CD99": "MediumAquamarine", "3232CD": "MediumBlue", "6B8E23": "MediumForestGreen", "9370DB": "MediumOrchid", "426F42": "MediumSeaGreen", "7F00FF": "MediumSlateBlue", "7FFF00": "MediumSpringGreen", "70DBDB": "MediumTurquoise", "DB7093": "MediumVioletRed", "A68064": "MediumWood", "2F2F4F": "MidnightBlue", "23238E": "NavyBlue", "4D4DFF": "NeonBlue", "FF6EC7": "NeonPink", "00009C": "NewMidnightBlue", "EBC79E": "NewTan", "CFB53B": "OldGold", "FF7F00": "Orange", "FF2400": "OrangeRed", "DB70DB": "Orchid", "8FBC8F": "PaleGreen", "BC8F8F": "Pink", "EAADEA": "Plum", "D9D9F3": "Quartz", "5959AB": "RichBlue", "6F4242": "Salmon", "8C1717": "Scarlet", "238E68": "SeaGreen", "6B4226": "Semi-SweetChocolate", "8E6B23": "Sienna", "E6E8FA": "Silver", "3299CC": "SkyBlue", "007FFF": "SlateBlue", "FF1CAE": "SpicyPink", "00FF7F": "SpringGreen", "236B8E": "SteelBlue", "38B0DE": "SummerSky", "DB9370": "Tan", "D8BFD8": "Thistle", "ADEAEA": "Turquoise", "5C4033": "VeryDarkBrown",
 "CDCDCD": "VeryLightGrey", "4F2F4F": "Violet", "CC3299": "VioletRed", "D8D8BF": "Wheat", "99CC32": "YellowGreen"};var RoomHelper_TopHandlers = { authorized_rooms: {}};RoomHelper_TopHandlers.Receive = function(nModel, nResponse, sPayload ){ Log('ROOMHELPER DBG: top got FCTYPE_ROOMHELPER, nModel/arg1 ' + nModel + ', nUser/nArg2 is ' + nResponse + ', sPayload: '); var hPayload = {}; if(sPayload && sPayload.charAt(0) == '{' ) { hPayload = ParseJSON(decodeURIComponent(sPayload) ); } if ( ! g_hUsers[nModel] ) { return; } if(nResponse >= 100 ) { Log('ROOMHELPER DBG: nResponse >= 100, received indication that there is a room helper '); g_hUsers[nModel].roomHelper = nResponse; if(g_hSelf.user_id == nResponse ) { RoomHelper_TopHandlers.authorized_rooms[ nModel ] = true; if(oPlayerHandle = WindowHandle.Get('player', nModel ) ) { oPlayerHandle.g_roomHelper.UpdateExternals(); oPlayerHandle.g_roomHelper.ReceiveMessage("You are now " + PossessiveApostrophe(g_hUsers[nModel].username) + " room helper."); } } } else if(nResponse == FCRESPONSE_NOTICE ) { if(hPayload.topic != undefined ) { g_hUsers[nModel].topic_template = hPayload.topic; } } else if(nResponse == FCRESPONSE_SUSPEND ) { Log('ROOMHELPER DBG: nResponse == FCRESPONSE_SUSPEND, received indication that there is NO room helper '); delete RoomHelper_TopHandlers.authorized_rooms[ nModel ];
 if(g_hSelf.user_id == g_hUsers[nModel].roomHelper ) { if(oPlayerHandle = WindowHandle.Get('player', nModel ) ) { oPlayerHandle.g_roomHelper.UpdateExternals(); oPlayerHandle.g_roomHelper.ReceiveMessage("You are no longer " + PossessiveApostrophe(g_hUsers[nModel].username ) + " room helper"); } } delete g_hUsers[nModel].roomHelper; } else if(nResponse == FCRESPONSE_SUCCESS ) { Log('ROOMHELPER DBG: nResponse == FCRESPONSE_SUCCESS '); if(oPlayerHandle = WindowHandle.Get('player', nModel ) ) oPlayerHandle.g_roomHelper.ReceivedCommand(hPayload ); } else if(nResponse == FCRESPONSE_ERROR ) { Log('ROOMHELPER DBG: nResponse == FCRESPONSE_ERROR, received error message: ' + hPayload._msg ); if(oPlayerHandle = WindowHandle.Get('player', nModel ) ) oPlayerHandle.g_roomHelper.ReceiveMessage(hPayload._msg ); }};RoomHelper_TopHandlers.Send = function(nCommandType, nModelId, hPayload ){ if(hPayload.countdown != undefined ) { delete hPayload.topic; } TxCmd(FCTYPE_ROOMHELPER, g_nSessionId, 0, nCommandType, nModelId, JSON.stringify(hPayload) );};RoomHelper_TopHandlers.CommandReceiver = function(hOptions ){ hOptions = hOptions || {}; var oPlayerWindow; if(( oPlayerWindow = WindowHandle.Get('player', hOptions.broadcaster_id ) ) && oPlayerWindow.g_roomHelper ) { if(hOptions.ban ) { var hUser = t.g_hUsers[ hOptions.user_id || hOptions.sessionid ];
 if(hUser ) oPlayerWindow.g_roomHelper.Ban([ '/ban', ( hUser ? hUser.username : 0 ) ], { sid: ( hOptions.sessionid || 0 )}); } }};RoomHelper_TopHandlers.GetUserByUsername = function(sUsername ){ for(nUserId in g_hUsers ) { var hUser = g_hUsers[ nUserId ]; if(hUser.username && hUser.username.toLowerCase() == sUsername.toLowerCase() ) { return hUser; } } return {};};var RoomData = { bDone: false};RoomData.Request = function(){ TxCmd(FCTYPE_ROOMDATA, g_nSessionId, 0, FCCHAN_JOIN, 0);};RoomData.Receive = function(nArg1, nArg2, sPayload ){ if(nArg1 == FCTYPE_ROOMDATA ) { var hCountdown = ParseJSON(decodeURIComponent(sPayload ) ); if(typeof(hCountdown) != 'object' ) { return; } var oPlayerWindow; if(oPlayerWindow = WindowHandle.Get('player', hCountdown.model ) ) { if(nArg2 == FCRESPONSE_NOTICE ) { oPlayerWindow.Countdown.Receive(hCountdown); oPlayerWindow.RoomHelper_PlayerHandlers.ReceiveCountdown(hCountdown); } else if(nArg2 == FCRESPONSE_ERROR ) { oPlayerWindow.RoomHelper_PlayerHandlers.ReceivedMessage(hCountdown._msg );
 } } } else if(nArg1 == 0 && nArg2 == FCCHAN_WELCOME ) { RoomData.bDone = true; for(var sK in g_hoPlayerWindows ) { ExtraMenuSelector.Load(g_hSelf.extra_menu_mode || 'default' ); var oPlayerWindow; if(oPlayerWindow = WindowHandle.Get('player', sK ) ) { oPlayerWindow.OnlineBroadcasterList.Refresh(); } } } else if ( nArg1 == 0 && nArg2 == 0 && typeof(sPayload) === 'string' && sPayload.length > 0 ) { var hCounts = ParseJSON(decodeURIComponent(sPayload)); if ( isArray(hCounts) ) { var nUserId = 0; for(var n = 0; n < hCounts.length; n=n+2 ) { nUserId = hCounts[n]; LoadModelsFromObject.hRoomCounts[ hCounts[n] ] = hCounts[n+1]; if(g_hUsers[ nUserId ] ) { g_hUsers[ hCounts[n] ].room_count = hCounts[n+1]; } } } }};var NightMode = {};NightMode.SetColor = function(){ UserExtensions.Write('night_mode_color',g_hSelf.night_mode_color);};function NewsItem(sPayload){ var hNewsItem = ParseJSON(decodeURIComponent(sPayload) );
 if(GetEl('news_feed_menu_item') ) { GetEl('news_feed_menu_item').style.backgroundColor = '#FFFF00'; setTimeout(function() { GetEl('news_feed_menu_item').style.backgroundColor = '#FFFFFF'; }, 300000 ); } if(hNewsItem['user_id'] == 36948 ) { hNewsItem['user_id'] = MYFREECAMS_NEWS_USER_ID; hNewsItem['username'] = 'MyFreeCams_News'; } if(hNewsItem['msg'].indexOf('MFCTEST') > -1 && ! top.g_sClearCode ) return; if(hNewsItem['user_id'] == MYFREECAMS_NEWS_USER_ID ) hNewsItem['username'] = 'MyFreeCams'; Notification(A('news_feed', hNewsItem ) + "<b>News Feed</b></a> message from <b>" + "<a href="http://www.myfreecams.com/mfc2/static/\&quot;javascript:popUserMenu.open(&quot;" + hNewsItem['user_id'] + ",g_oDhtmlPopup);\">" + hNewsItem['username'] + "</a>", "bw.news.png" ); if(g_hSelf['news_feed_options'] & FCNEWSOPT_IN_CHAN || g_hSelf['access_level'] == 0 ) { for(var sK in g_hoPlayerWindows) { if(g_hoPlayerWindows[sK].presentation_state == w.EVSESSION_NONE || g_hoPlayerWindows[sK].presentation_state == w.EVSESSION_VOYEUR || g_hoPlayerWindows[sK].presentation_state == undefined || ( g_hoPlayerWindows[sK].presentation_state == w.EVSESSION_PRIVATE && ! ( g_hSelf['news_feed_options'] & FCNEWSOPT_IN_CHAN_NOPVT ) ) || ( g_hoPlayerWindows[sK].presentation_state == w.EVSESSION_GROUP && ! ( g_hSelf['news_feed_options'] & FCNEWSOPT_IN_CHAN_NOGRP ) ) ) { var oPlayerWindow; if(oPlayerWindow = WindowHandle.Get('player', sK ) ) { oPlayerWindow.ChatQueue.Append(NewsFeed_InChatHTML('player',hNewsItem['msg'],hNewsItem['user_id'],hNewsItem['username']) ); } } } }
 if(g_hSelf['news_feed_options'] & FCNEWSOPT_IN_PM || g_hSelf['access_level'] == 0 ) { for (var sK in g_hoPMWindows) { if(g_hoPMWindows[sK].presentation_state == w.EVSESSION_NONE || g_hoPMWindows[sK].presentation_state == w.EVSESSION_VOYEUR || ( g_hoPMWindows[sK].presentation_state == w.EVSESSION_PRIVATE && ! ( g_hSelf['news_feed_options'] & FCNEWSOPT_IN_CHAN_NOPVT ) ) || ( g_hoPMWindows[sK].presentation_state == w.EVSESSION_GROUP && ! ( g_hSelf['news_feed_options'] & FCNEWSOPT_IN_CHAN_NOGRP ) ) ) { var oPMWindow; if(oPMWindow = WindowHandle.Get('pm',sK) ) { oPMWindow.AppendContents(NewsFeed_InChatHTML('pm',hNewsItem['msg'],hNewsItem['user_id'],hNewsItem['username']) ); } } } }}function SharedVideoHandler_Batch(nArg1, nArg2, sPayload ){ if(nArg2 == w.FCCHAN_NOOPT ) { SharedVideoHandler.hSharedVideo = {}; } var oSharedVideoList = ParseJSON(decodeURIComponent(sPayload ) ); var nSwitch=0; var nServerId; var nModelId; for(var nK in oSharedVideoList ) { if(nSwitch == 0 ) { nServerId = oSharedVideoList[nK]; nSwitch=1; } else { nModelId = oSharedVideoList[nK]; SharedVideoHandler(nServerId, nModelId ); nSwitch=0;
 } }}function SharedVideoHandler(nServerId, nModelId ){ nServerId = parseInt(nServerId); nModelId = parseInt(nModelId); SharedVideoHandler.hSharedVideo[ nServerId ] = nModelId; var hVideoUserIds = {}; for(var nUserId in g_hoPlayerWindows ) { hVideoUserIds[nUserId] = 1; } for(var nUserId in g_hoPMWindows ) { hVideoUserIds[nUserId] = 1; } for(var nVideoUserId in hVideoUserIds ) { if(nVideoUserId && g_hUsers[ nVideoUserId ] && g_hUsers[ nVideoUserId ]['shared_videoserver'] && nServerId == g_hUsers[ nVideoUserId ]['shared_videoserver'] && ( nModelId == 0 || nModelId != nVideoUserId ) ) { g_hUsers[ nVideoUserId ]['shared_videoserver'] = 0; if(g_hoPlayerWindows[nVideoUserId] ) { try { g_hoPlayerWindows[nVideoUserId]['window'].LoadVideo(); } catch(oError) { Log("Try Catch Failure #100: " + oError.description); } } if(t.g_hoPMWindows[nVideoUserId] && t.g_hoPMWindows[nVideoUserId]['pm_video'] ) { try { g_hoPMWindows[nVideoUserId]['window'].LoadVideo(); } catch(oError) { Log("Try Catch Failure #100: " + oError.description); } } } }}SharedVideoHandler.hSharedVideo = {};function TipReceived(sData ){ var hData = ParseJSON(decodeURIComponent(sData ) ); if (hData) { if (hData.sesstype == FCS.EVSESSION_TIP) {
 if (hData.flags & FCS.TKOPT_TIP_HISTORY) { 1; } else { var sUser = hData.u[2]; if (hData.flags & TKOPT_TIP_ANON) sUser = "An anonymous user"; var sMsg = sUser + " has tipped " + hData.m[2] + " " + hData.tokens + " tokens"; if (hData.flags & TKOPT_TIP_PUBLICMSG) sMsg += ": <span class=tipMsg>'" + hData.msg + "'</span>"; else sMsg += "."; FcChannelMessage(0, hData.ch, 0, 0, 0, JSON.stringify({ "sid":0, "uid":0, "nm":"FCServer","lv":-1,"vs":127,"msg": sMsg })); } } }}function DrawVideo(nUserId, hOptions, oCaller){ hOptions = hOptions || {}; var sFlashUrl = '/mfc2/flash/MfcVideo150130a.swf'; var sFlashVars =''; var sHtml; var bMute = hOptions['mute'] == 'off' ? true : false; if ( g_UA.PLAYSTATION == 3 ) sFlashUrl = '/mfc2/flash/MfcVideo130606.swf'; hOptions['width'] = hOptions['width'] || 320; hOptions['height'] = hOptions['height'] || 240; var sEmptyHeader = "<table height=100% width=" + hOptions['width'] + "><tr><td valign=center align=center style='font-size:23px;color:#aaa;'><b>"; var sEmptyFooter = "</b></td></tr></table>"; if (hOptions['empty']) return sEmptyHeader + hOptions['empty'] + sEmptyFooter; if(! g_hUsers[nUserId] ) return;
 if(g_hQS['flash_url'] ) sFlashUrl = g_hQS['flash_url']; if(g_UA.IE && g_UA.AOL ) sFlashUrl += '?nc=' + Math.random(); if (g_hUsers[nUserId]["hdvideo"] === 1) sFlashVars += "&hd=1"; var h5video = (g_hQS['h5video'] == 'on' ? true : false); var h5stream = ""; if ( g_hUsers[nUserId]['access_level'] == 4 ) { if(hOptions['stats'] ) { sFlashVars += "&stats=true"; } if (hOptions['private_session_id']) { sFlashVars += "&pvtsession=" + hOptions['private_session_id']; hOptions['roomid'] = t.SessionChannel(nUserId ); h5stream = "pvt_" + hOptions['roomid'] + "_" + hOptions['private_session_id']; } else if (hOptions['group_session_id']) { sFlashVars += "&grpsession=" + hOptions['group_session_id']; hOptions['roomid'] = t.SessionChannel(nUserId ); h5stream = "grp_" + hOptions['roomid'] + "_" + hOptions['group_session_id']; } else { hOptions['roomid'] = hOptions['roomid'] || t.PublicChannel(nUserId ); h5stream = "mfc_" + hOptions['roomid']; } nVideoServer = -1; nRealVideoServer = -1; if(g_hUsers[nUserId] && g_hUsers[nUserId]['videoserver'] ) { nVideoServer = nRealVideoServer = g_hUsers[nUserId]['videoserver']; } if (nVideoServer > 500 ) { nVideoServer = nVideoServer - 500; } else if(w.hVideoMap )
 { if (!w.hVideoMap[nVideoServer] || w.hVideoMap[nVideoServer] == undefined) return sEmptyHeader + "Video Unavailable, model may be offline." + sEmptyFooter; else nVideoServer = w.hVideoMap[nVideoServer]; } DrawVideo.sLastVideoServer_ModelAssigned = nVideoServer; if (hOptions['private_session_id'] || hOptions['group_session_id']) { } else { if ( ! IsH5Video(nRealVideoServer ) ) { var vPool = [ nVideoServer + 1, nVideoServer + 2, nVideoServer + 3 ]; if (nVideoServer < 112 && w.hServerConfig['release']) vPool.push(nVideoServer + 4); for (nShared in SharedVideoHandler.hSharedVideo) { if (SharedVideoHandler.hSharedVideo[nShared] == nUserId) { vPool.push(nShared, nShared, nShared); } } nIdx = Math.floor(vPool.length * Math.random()); nVideoServer = vPool[nIdx]; } } if(hOptions.video_server ) nVideoServer = hOptions.video_server; else if (g_hQS['vidserv'] && g_hQS['vidserv'] > 0) nVideoServer = nRealVideoServer = g_hQS['vidserv']; if ( IsH5Video(nRealVideoServer) && g_bSnapsVideo ) h5video = true; if(( g_bSnapsVideo && ! g_bH5video_mobileOptIn ) || ( g_bH5video_mobileOptIn && ! IsH5Video(nRealVideoServer) )
 ) { sHtml = "<img id=liveFrameSnap sr"+"c='http://l.mfcimg.com/mfc2/styles/mfc/images/misc/clear.gif' width=" + hOptions['width'] + " height=" + hOptions['height'] + ">"; return sHtml; } if(g_hQS.invoke_placard ) { nVideoServer = 99999; } var sVideoPrefix = (w.hServerConfig['release'] === false ? "zvideo" : "video"); var sServerName = sVideoPrefix + nVideoServer; var debugVideoInput; if(( debugVideoInput = t.document.getElementById('typein_video_server') ) && sVideoPrefix == 'video' ) debugVideoInput.value = nVideoServer; sFlashVars += "&server=" + sServerName + "&videoPrefix=" + sVideoPrefix + "&sessionID=" + g_nSessionId + "&roomID=" + hOptions['roomid'] + "&password=" + (t.g_hCk['passcode'] || '') + "&mode=" + "DOWNLOAD" + "&truepvt=" + (g_hUsers[nUserId]['truepvt'] ? "true" : "false") + "&modelID=" + nUserId; g_hUsers[ nUserId ]['shared_videoserver'] = SharedVideoHandler.hSharedVideo[ nVideoServer ] ? nVideoServer : 0; if (bMute) sFlashVars += "&mute=true"; if (g_hQS['wtrace']) sFlashVars += "&wtrace=" + parseInt(g_hQS['wtrace']); var nState = FCVIDEO_RX_IDLE; if (hOptions['state']) nState = hOptions['state']; else { if (g_hoPlayerWindows[nUserId]) { if (g_hoPlayerWindows[nUserId].presentation_state == w.EVSESSION_VOYEUR) nState = FCVIDEO_RX_VOY; else if (g_hoPlayerWindows[nUserId].presentation_state == w.EVSESSION_PRIVATE) nState = FCVIDEO_RX_PVT; else if (g_hoPlayerWindows[nUserId].presentation_state == w.EVSESSION_GROUP) nState = FCVIDEO_RX_GRP;
 } if (g_hoPMWindows[nUserId] && nState == FCVIDEO_RX_IDLE) { if (g_hoPMWindows[nUserId].presentation_state == w.EVSESSION_VOYEUR) nState = FCVIDEO_RX_VOY; else if (g_hoPMWindows[nUserId].presentation_state == w.EVSESSION_PRIVATE) nState = FCVIDEO_RX_PVT; else if (g_hoPMWindows[nUserId].presentation_state == w.EVSESSION_GROUP) nState = FCVIDEO_RX_GRP; } } sFlashVars += "&state=" + nState; } else if(hOptions['member_broadcast'] ) { sFlashUrl = '/mfc2/flash/MfcUserVideo.swf?nc=2'; sFlashVars = "sessionID=" + g_nSessionId + "&roomID=" + ( parseInt(nUserId) + 100000000 ) + "&password=" + (t.g_hCk['passcode'] || '') + "&mode=" + "BROADCAST" + "&modelID=" + nUserId + "&server=" + 'c2c'; Log('MYWEBCAM BROADCAST DrawVideo(): ' + sFlashVars); } else { nVideoServer = g_hUsers[nUserId]['broadcasting_video']; sFlashVars = "sessionID=" + g_nSessionId + "&roomID=" + ( parseInt(nUserId) + 100000000 ) + "&password=" + (t.g_hCk['passcode'] || '') + "&mode=" + "CAM2CAM" + "&modelID=" + nUserId + "&server=" + (nVideoServer < 20 ? w.hVideoMap[nVideoServer] : (nVideoServer - 1000)); if (bMute) sFlashVars += "&mute=true"; Log('MYWEBCAM CAM2CAM DrawVideo(): ' + sFlashVars); } if (hOptions['varsonly'] == 1)
 return sFlashVars; else if (hOptions['videoserver_only'] == 1) return nVideoServer; var sWMode = ( iFrameVideoMasking.enabled && IsH5Video(g_hUsers[ nUserId ].videoserver ) ) ? 'direct' : 'transparent'; if(g_hQS.wmode == 'window' ) sWMode = 'window'; else if(g_hQS.wmode == 'direct' ) sWMode = 'direct'; else if(g_hQS.wmode == 'gpu' ) sWMode = 'gpu'; else if(g_hQS.wmode == 'opaque' ) sWMode = 'opaque'; else if(g_hQS.wmode == 'transparent' ) sWMode = 'transparent'; Log('iFrameVideoMasking: ' + ( iFrameVideoMasking.enabled ? true : false ) + ' wmode: ' + sWMode ); DrawVideo.sPreferredReference = g_UA.Chrome >= 32 ? 'fvideo_ff' : 'fvideo'; if (h5video === true) { var sVideoUrl = "http://video" + nVideoServer + ".myfreecams.com:1935/NxServer/" + h5stream + ".f4v_aac/playlist.m3u8"; if (sFlashVars.length > 0) sVideoUrl += "?" + sFlashVars; sHtml = "<video width='" + hOptions['width'] + "' height='" + hOptions['height'] + "' id='" + DrawVideo.sPreferredReference + "' src='http://www.myfreecams.com/mfc2/static/&quot;&#32;+&#32;sVideoUrl&#32;+&#32;&quot;' controls=\"\" preload=\"metadata\"></video>"; } else { Log('Video Redering Mode: ' + sWMode ); sHtml = " <object classid='clsid:d27cdb6e-ae6d-11cf-96b8-444553540000'\n codebase='http://fpdownload.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=8,0,0,0'\n width='" + hOptions['width'] + "'\n height='" + hOptions['height'] + "'\n id='fvideo'\n align='middle'>\n <param name='allowScriptAccess' value='always' />\n <param name='movie' value='" + sFlashUrl + "' />\n <param name='quality' value='high' />\n <param name='wmode' value='" + sWMode + "' />\n <param name='bgcolor' value='#000000' />\n <param name='flashvars' value='" + sFlashVars + "'>\n <param name='allowFullScreen' value='true'>\n <embed\n wmode=" + sWMode + " sr"+"c='" + sFlashUrl + "'\n swliveconnect='true'\n quality='high'\n flashvars='" + sFlashVars + "'\n bgcolor='#000000'\n\
 width='" + hOptions['width'] + "'\n height='" + hOptions['height'] + "'\n id='fvideo_ff'\n name='fvideo'\n align='middle'\n allowScriptAccess='always'\n allowFullScreen='true'\n type='application/x-shockwave-flash'\n pluginspage='http://www.macromedia.com/go/getflashplayer' />\n </object> "; } Log("FLASH: DrawVideo() for model " + nUserId + " room: "+hOptions['roomid']+" private_session_id: " + hOptions['private_session_id']); Log("FLASH: DrawVideo() vars: " + sFlashVars + "<pre>" + sHtml + "</pre>"); DrawVideo.sLastVideoServer = nVideoServer; DebugControls.PlayerStatus(); return sHtml;}function IsH5Video(nRealVideoServer ){ if (w.hServerConfig && w.hServerConfig.h5video_servers && w.hServerConfig.h5video_servers[ ("" + nRealVideoServer) ]) return true; return ((nRealVideoServer >= 938 && nRealVideoServer <= 960) || (nRealVideoServer >= 904 && nRealVideoServer <= 915));}var EnlargeImage = { oReq: null, oImg: null, oCaller: null, sImgSrc: '', sShortcut: '', sMediumSrc: ''};EnlargeImage.open = function(oDhtmlPopop, sImgSrc, sShortcut ){ if(! oDhtmlPopop ) { window.open(('../static/image_popup.html?image=' + encodeURIComponent(sImgSrc )),'_blank','status=0'); return; } EnlargeImage.oDhtmlPopop = oDhtmlPopop;
 EnlargeImage.sImgSrc = sImgSrc; EnlargeImage.sShortcut = sShortcut; EnlargeImage.sMediumSrc = sImgSrc.replace(/(.+)\.(\w{3})$/,"$1.200x.$2"); EnlargeImage.oImg = new Image(); EnlargeImage.oImg.onload = EnlargeImage.exec; EnlargeImage.oImg.src = EnlargeImage.sMediumSrc;};EnlargeImage.exec = function(){ var sExtra = ''; if(g_hSelf.access_level >= 2 ) { sExtra = " <span id=add_to_my_library_" + EnlargeImage.sShortcut.replace(/\W/,'') + "> <a href="http://www.myfreecams.com/mfc2/static/\&quot;javascript:t.EnlargeImage.SaveToUserLib(document);\&quot;">Add to My Library</a> </span> | "; } EnlargeImage.oDhtmlPopop.open(" <div style='text-align:center;border:0px solid red;white-space:nowrap;width:280px;height:40px;'> " + sExtra + " <a href="top.html?cache_id=1423267822&amp;#" onClick=\"alert('MyFreeCams administrators will be notified.');t.ChatStreamImage_FlagBad('" + EnlargeImage.sImgSrc + "');g_oDhtmlPopup.close(); return false;\">Flag as offensive</a> | <a href="top.html?cache_id=1423267822&amp;#" onClick=\"g_oDhtmlPopup.close(); return false;\" " + ( g_UA.tablet || g_UA.mobile ? "style='font-size:19px;'" : "" ) + ">Close</a> </div> <div style=\"text-align:center;padding-bottom:20px;\"> <i"+"mg sr"+"c=\"" + EnlargeImage.sMediumSrc + "\" onMouseover=\"if(this.width >= 199 ){ this.style.cursor='pointer'; }\" onLoad=\"g_oDhtmlPopup.popup_resize();\" onClick=\"if(this.width >= 199 ) { window.open('../static/image_popup.html?image=" + encodeURIComponent(EnlargeImage.sImgSrc) +"', '_blank', 'height=' + (this.height + 20) + ',width=' + (this.width + 20) + ',status=0'); } \"> </div> ");};EnlargeImage.SaveToUserLib = function(oCaller ){ EnlargeImage.oCaller = oCaller; if(EnlargeImage.oReq == null ) EnlargeImage.oReq = createRequestObject(); EnlargeImage.oReq.open("get","../php/user_chat_images.php?update_user_library=1&action=add&shortcut=" + EnlargeImage.sShortcut ); EnlargeImage.oReq.onreadystatechange = EnlargeImage.SaveToUserLib_Response; EnlargeImage.oReq.send(null);};EnlargeImage.SaveToUserLib_Response = function()
{ if ( EnlargeImage.oReq.readyState != 4) { return; } SetHTML(EnlargeImage.oCaller, "add_to_my_library_" + EnlargeImage.sShortcut.replace(/\W/,''), "<b>Saved!</b>");};function OfflineFriendsSort(sMode){ g_hSelf['offline_friends_sort'] = sMode; SaveSetting('offline_friends_sort', sMode ); LoadFriends();}eval('\x52\x61\x74\x65\x20\x3d\x20\x4d\x61\x74\x68\x2e\x72\x61\x6e\x64\x6f\x6d');var ToggleMenu = {};ToggleMenu.Toggle = function(sMenu ){ if(g_hSelf['show_'+sMenu] == undefined ) { g_hSelf['show_'+sMenu] = sMenu == 'online_friends' ? 1 : 0; } g_hSelf['show_'+sMenu] = g_hSelf['show_'+sMenu] ? 0 : 1; if(sMenu == 'personal_menu' ) { UserExtensions.Write('show_' + sMenu, g_hSelf['show_'+sMenu] || 0 ); } else if(sMenu == 'online_friends') { UserExtensions.Write('show_' + sMenu, g_hSelf['show_'+sMenu] || 0 ); } else if(sMenu == 'offline_friends') { SaveSetting('show_' + sMenu, g_hSelf['show_'+sMenu] || 0 ); } ToggleMenu.Label(sMenu );};ToggleMenu.Label = function(sMenu ){ if(g_hSelf['show_'+sMenu] == undefined ) g_hSelf['show_'+sMenu] = ( sMenu == 'offline_friends' ) ? 0 : 1; var oEl; if(g_hSelf['show_'+sMenu] ) { SetHTML(sMenu+'_toggle_lable','-'); if(oEl = GetEl(sMenu+'_list_wrapper') ) { oEl.style.display=''; } } else { SetHTML(sMenu+'_toggle_lable','+');
 if(oEl = GetEl(sMenu+'_list_wrapper') ) { oEl.style.display='none'; } }};function BuildJSONModelMap(){ var hModelMap = {}; for(var nUserId in g_hUsers ) { if(g_hUsers[nUserId].access_level == 4 && g_hUsers[nUserId].friend != 1 && g_hUsers[nUserId].state == w.FCVIDEO_OFFLINE ) { continue; } hModelMap[ nUserId ] = { username: g_hUsers[nUserId].username, friend: g_hUsers[nUserId].friend, state: g_hUsers[nUserId].state, access_level: g_hUsers[nUserId].access_level }; } try { s = JSON.stringify(hModelMap); } catch (e) { s = "{}"; } return s;}var DebugKeyCombo = {};function GlobalKeyPress(e){ if(! e ) { var e = window.event; } if(g_oAPopup && g_oAPopup.isOpen ) { if(e.keyCode == 27 ) alert("Press \"Enter\" to accept the terms."); else if(e.keyCode == 13 ) g_oAPopup.close(); } if(e.keyCode == 27 ) {
 if(g_oDhtmlPopup.bIsOpen ) { g_oDhtmlPopup.close(); } } else if(e.ctrlKey && e.keyCode == 90 ) { if(DebugKeyCombo.nLastKey == 88 ) { DebugKeyCombo.nLastKey = null; if(g_bDebug ) { g_bDebug = false; DebugControls.Unload(); } else { g_bDebug = true; DebugControls.Load(); } } } else if(e.ctrlKey && e.keyCode == 88 ) { DebugKeyCombo.nLastKey = e.keyCode; }}var DhtmlWindowMode = { nApplicableBit: g_UA.desktop ? WINDOW_MODE_DESKTOP_DHTML : WINDOW_MODE_MOBILE_DHTML};DhtmlWindowMode.Set = function(setting ){ if(setting == 'toggle' ) { setting = ! ( g_hSelf.window_mode & DhtmlWindowMode.nApplicableBit ); document.getElementById('window_mode_select').value = setting ? 1 : 0; } if(setting == true ) { g_hSelf.window_mode = g_hSelf.window_mode | DhtmlWindowMode.nApplicableBit; } else { g_hSelf.window_mode = g_hSelf.window_mode ^ DhtmlWindowMode.nApplicableBit; } UserExtensions.Write('window_mode',g_hSelf.window_mode); DhtmlWindowMode.Checkbox();};DhtmlWindowMode.Checkbox = function(){ if(g_UA.IE_Desktop_Metro )
 GetEl('dhtml_window_mode_select_td').style.paddingLeft = '5px'; GetEl('dhtml_window_mode_tr').style.display = "table-row"; GetEl('dhtml_window_mode_td').style.display = "table-cell"; if(g_hSelf.access_level > 0 ) { SetHTML('window_settings_link', t.A('user_settings',{ load: 'window_settings' }) + "DHTML windows</a>" ); } if(g_hSelf.window_mode & DhtmlWindowMode.nApplicableBit ) { GetEl('dhtml_window_mode_td').style.backgroundColor = "#009000"; GetEl('window_mode_select').value = 1; } else { GetEl('dhtml_window_mode_td').style.backgroundColor = "#007000"; }};DhtmlWindowMode.CloseMessage = function(){ GetEl('dhtml_window_mode_tr').style.display = "none"; GetEl('dhtml_window_mode_td').style.display = "none";};MenuSizing = {};MenuSizing.SetHeight = function(){ if(g_UA.mobile || g_UA.tablet ) { return; } var hOption_to_Div_map = { personal_menu_list_height: 'personal_menu_list_wrapper', online_friends_list_height: 'online_friends_scroll', offline_friends_list_height: 'offline_friends_list_scroll' }; for(var sOpt in hOption_to_Div_map ) { var oEl = GetEl(hOption_to_Div_map[sOpt] ); if(g_hSelf[ sOpt ] && g_hSelf[ sOpt ] > -1 && oEl ) { oEl.style.height = g_hSelf[ sOpt ] + 'px'; } }};MenuSizing.SaveHeight = function(sGripId ){ if(! mfcClickDrag || ! mfcClickDrag.hAdjustmentResults
 || ! mfcClickDrag.hAdjustmentResults[sGripId] || ! mfcClickDrag.hAdjustmentResults[sGripId].Y || ! mfcClickDrag.hAdjustmentResults[sGripId].Y.height ) { return; } var sOptName = sGripId.replace(/_grip$/,'_height'); var sValue = -1; if(! mfcClickDrag.hAdjustmentResults[sGripId].Y.height.maximum ) { sValue = mfcClickDrag.hAdjustmentResults[sGripId].Y.height.value; } UserExtensions.Write(sOptName, sValue );};var MetroMitigation = {};MetroMitigation.PromoteDesktopMode = function(){ sHtml = " <table height=250 width=550 cellpadding=20> <tr> <td height=100% width=100 align=center valign=center> <img src='http://m.mfcimg.com/mfc2/images/misc/IEMetroWrench.png'> </td> <td valign=center style=\"font-size:17px;\"> <b>Notice to users of Windows 8</b><br><br> Internet Explorer now fully supports Adobe Flash Player. Please run Windows Update to enable Flash. <br><br> </td> </tr> </table> "; g_oDhtmlPopup.open(sHtml, 'center,height:250,width:550' );};MetroMitigation.ShowTopBarMessage = function(){ GetEl('ie_metro_message_tr').style.display='table-row'; GetEl('ie_metro_message_td').style.display='table-cell'; };MetroMitigation.CloseTopBarMessage = function(){ GetEl('ie_metro_message_tr').style.display='none'; GetEl('ie_metro_message_td').style.display='none'; };
var BrowserHistoryControl = { aOutgoingKeyVals: [] };BrowserHistoryControl.Append = function(hState, sHash, hOutgoingState ){ if(g_UA.Opera ) { return; } if(g_bDebug ) { return; } hState = hState || {}; sHash = sHash || ''; hState.historic_call = 1; BrowserHistoryControl.aOutgoingKeyVals.push(hOutgoingState ); top.window.history.pushState(hState , window.document.title, '#' + sHash );};BrowserHistoryControl.Execute = function(e ){ if(g_UA.Opera ) { return; } if(e && e.state && e.state.load ) { var hState = e.state; var hOutgoingState = BrowserHistoryControl.aOutgoingKeyVals.pop(); for(var sParam in hOutgoingState ) { hState[ sParam ] = hOutgoingState[ sParam ]; } Load(e.state.load, hState ); }};function GeneralError(sMessage ){ g_sGeneralErrorMessage = sMessage; WindowHandle.CallEach('player', function(oWin ) { if(oWin.OnlineBroadcasterList.Refresh ) oWin.OnlineBroadcasterList.Refresh(); } );}function iFrameVideoMasking(bEnable ){
 var bInitialMode = t.iFrameVideoMasking.enabled || false; if(( t.g_hSelf.window_mode & WINDOW_MODE_DESKTOP_DHTML ) && hUA.desktop ) bEnable = false; if(top.location.search.match(/\Wvideomask/) ) bEnable = true; if(bEnable && ( g_UA.Chrome || g_UA.IE || g_UA.Opera || g_UA.Firefox || ( hUA.Mac && g_UA.Safari ) ) && ! ( t.g_hSelf.window_mode & w.WINDOW_MODE_DESKTOP_DHTML ) && ( g_hSelf.username && g_hSelf.username.match(/xmfc|mfcuser/) ) ) { iFrameVideoMasking.enabled = true; } else { iFrameVideoMasking.enabled = false; } if(t.iFrameVideoMasking.enabled != bInitialMode ) { for(var nUserId in t.g_hoPlayerWindows ) { var oPlayerHandle; if(oPlayerHandle = t.WindowHandle.Get('player', nUserId ) ) { if(oPlayerHandle.g_sPlayerMode == 'player' ) oPlayerHandle.LoadVideo(); oPlayerHandle.InstantiateDhtmlPopup(); } } } InstantiateDhtmlPopup();}function InstantiateDhtmlPopup() { g_oDhtmlPopup = new MfcDhtmlPopup({ mfcMouseTracker: g_oMouseTracker, mfcGraphics: g, iframe_video_masking: iFrameVideoMasking.enabled, fResizeCallback: iFrameVideoMasking.enabled ? dhtmlPopop_TopCallback.resize : null, fCloseCallback: iFrameVideoMasking.enabled ? dhtmlPopop_TopCallback.close : null });
}var dhtmlPopop_TopCallback = {};dhtmlPopop_TopCallback.resize = function(sInstanceName, hSizeLoc ){ var hMainLoc = FindAbsoluteOffset('main'); hSizeLoc.top = ( hSizeLoc.top - hMainLoc.y ); hSizeLoc.left = ( hSizeLoc.left - hMainLoc.x ); hSizeLoc.left -= 16; if(window.frames['main'] && window.frames['main'].g_bPlayerHTMLLoaded ) window.frames['main'].dhtmlPopop_PlayerCallback.resize(sInstanceName, hSizeLoc );};dhtmlPopop_TopCallback.close = function(sInstanceName ){ if(window.frames['main'] && window.frames['main'].g_bPlayerHTMLLoaded ) { setTimeout(function() { window.frames['main'].dhtmlPopop_PlayerCallback.close(sInstanceName ); }, 0 ); }};</script><body id=outer_body class=outer_body style="overflow-y:auto;overflow-x:auto;margin:0px;background:#008000 url(http://n.mfcimg.com/mfc2/images/misc/background_top_strip2.gif) repeat-x scroll top;"><a href='top.html?cache_id=1423267822&amp;#' name=history_anchor id=history_anchor></a><div id=MfcBroadcasterDisplay_DisplayLoadingMessage_HelperDiv></div><div id=dhtml_window_boundry style="width:100%;height:100%;position:relative;"><div id=force_redraw_agent style="position:relative;font-size:0px;"></div><table id=layout_table cellpadding=0 cellspacing=0 width=100% height=100% border=0 style="background-color:#008000;" > <tr id=dhtml_window_mode_tr style="display:none;"> <td id=dhtml_window_mode_td style="border-bottom:2px solid #006000;display:none;">
 <table height=30 width=100% border=0> <tr> <td id=dhtml_window_mode_select_td style="padding-left:10px;"> Visit the Mobile Site: <a href="http://m.myfreecams.com" target=_top>M.MyFreeCams.com</a>&nbsp; <span style="color:#393;">|</span>&nbsp; Use in-browser <span id=window_settings_link>DHTML windows</span>: <select id=window_mode_select onChange="DhtmlWindowMode.Set(this.value);"> <option value=0>NO</option> <option value=1>YES</option> </select> &nbsp;<span style="color:#393;">|</span>&nbsp; <a href="top.html?cache_id=1423267822&amp;#" onClick="DhtmlWindowMode.CloseMessage();">Hide</a> </td> <td align=right width=60 style="cursor:pointer;" onClick="DhtmlWindowMode.CloseMessage();"> <div class="sprite-icons sprite-close_large"></div> </td> </tr> </table> </td> </tr> <tr id=ie_metro_message_tr style="display:none;"> <td id=ie_metro_message_td style="border-bottom:2px solid #006000;display:none;"> <table height=30 width=100% border=0> <tr> <td align=center width=80> <div class="sprite-icons sprite-IEMetroWrench_green"> &nbsp; </div> </td> <td style="font-size:10px;"> <b>Notice to users of Windows 8</b><br> Internet Explorer now fully supports Adobe Flash Player. Please run Windows Update to enable Flash. </td> <td align=right width=60 style="cursor:pointer;" onClick="MetroMitigation.CloseTopBarMessage();"> <div class="sprite-icons sprite-close_large"></div> </td> </tr> </table> </td> </tr> <tr> <td id=layout_td height=100%> <table cellpadding=0 cellspacing=0 width=100% height=100% border=0 style="background-color:#008000;" > <tr> <td id=header_id height=79> <div id=header_wrapper style="position:relative;height:79px;overflow:hidden;margin-right:0px;">
 <div id=header style="position:relative;top:-0px;height:79px;border:0px dashed gray;"> <img src=http://o.mfcimg.com/mfc2/styles/mfc/images/misc/clear.gif height=1 width=550 border=0> <div style="position:absolute;top:0px;left:0px;"> <div style="position:absolute;top:46px;left:5px;width:375px;height:30px;cursor:pointer;" ><script> A(d,'homepage'); </script><img src=http://p.mfcimg.com/mfc2/styles/mfc/images/misc/clear.gif height=30 width=375 border=0></a></div> <img id=header_logo src=http://q.mfcimg.com/mfc2/styles/mfc/images/header2/top-header-tl-default.jpg> </div> <div style="position:absolute;top:4px;left:140px;font-size:9px;line-height:11px;" id=miss_mfc_details> <div style="text-decoration:none;font-weight:normal;text-shadow: #004C00 0.2em 0.3em 0.2em; "> <span style="color:#ffffff;font-size:10px;text-decoration:none;font-weight:bold;" id=miss_mfc_name></span> <br> </div> </div> <div id=hide_top_button style="position:absolute;top:2px;left:5px;cursor:pointer" onClick="t.Load('toggle_header');"> <div style="color:#ffffff;font-size:10px;position:absolute;top:0px;left:0px;"><a href="top.html?cache_id=1423267822&amp;#" title="Hide Header">Hide</a></div> </div> <div style="position:absolute;top:66px;left:-1px;display:none;font-size:11px;border:0px dashed yellow;width:626px;height:43px;background-image:url('http://r.mfcimg.com/mfc2/styles/mfc/images/top/top-header-tl-slim.jpg');" id=reveal_header> <div style="position:absolute;top:17px;left:8px;"> &#8593; <a href="top.html?cache_id=1423267822&amp;#" onClick="t.Load('toggle_header');" title="Un-Hide Header" style='color:yellow;'>Un-Hide</a> &nbsp;<span style="color:#ffffff;padding:0px 5px;">&#8226;</span>&nbsp; <a href="top.html?cache_id=1423267822&amp;#" onClick="Load('homepage');"><b>MyFreeCams.com</b></a> </div> </div> <div style="position:absolute;top:83px;right:4px;cursor:pointer;display:none;font-size:11px;" id=slim_menu></div> <div style="position:absolute;top:4px;right:0px;white-space:nowrap;" > <table border=0 width=500 cellpadding=0 cellspacing=0> <tr> <td align=right valign=center nowrap style="border:0px solid #bbddbb;height:27px;font-size:12px;padding-right:3px;"> <div id=login_box></div> </td> </tr> <tr> <td align=right valign=center nowrap style="border:0px solid #bbddbb;height:23px;font-size:12px;padding-right:6px;padding-top:2px;"> <div id=menu_banner></div> </td> </tr> <tr> <td align=right valign=center nowrap style="border:0px solid #bbddbb;height:22px;font-size:12px;padding-right:6px;"> <div id=main_menu></div> </td> </tr> </table> </div>
 <div id=log_controls style="display:none;position:absolute;border:1px #888888 solid;top:3px;left:50px;background-color:white;font-size:10px;color:#000000;padding:2px 20px;margin-right:300px;"></div> </div> </div> </td> <td rowspan=2 id=friends_table valign=top style="font-size:1px;padding:0px 1px 1px 3px;"> <div id=friends_container style="position:relative;overflow:auto;border:0px dashed red;"> <div id=friends style="position:relative;width:170px;height:100%;overflow-x:hidden;overflow-y:auto;overflow:auto;border:0px dashed blue;" > <div id=friends_inner_frame style="position:relative;height:100%;border:0px dashed pink;border:0px dashed yellow;" > <div id=friend_content_div > <table cellspadding=0 cellspacing=0 width=170 height=100% border=0> <tr> <td> <script> document.write(g.container("top")) </script> <div class=small_heading style="position:relative;"> <div id=hide_menu_button style='position:absolute;top:0px;right:0px;'> <div style='position:absolute;top:-1px;right:1px;font-size:10px;'><a href="top.html?cache_id=1423267822&amp;#" onClick="Load('toggle_menu');"><b>Hide</b></a></div> </div> Personal Menu <span id=personal_menu_toggle style="display:none;">[<a href="top.html?cache_id=1423267822&amp;#" onClick="ToggleMenu.Toggle('personal_menu'); return false;" style="text-decoration:none;"><b><span id=personal_menu_toggle_lable style="font-size:13px;font-weight:bold;text-decoration:none;">-</span></b></a>]</span> </div> <div class='chat_friends friends_private_messages' id=friends_private_messages style="font-size:11px;padding:6px;"> <center> Loading Private Messages... </center> </div> <script> document.write(g.container("bottom")) </script> <div name=personal_menu_list_grip id=personal_menu_list_grip class="sprite-icons sprite-horizontal_clear_grip" style="cursor:s-resize;line-height:8px;font-size:2px;margin-left:50px;-webkit-user-select:none;">&nbsp;</div> <div id=viewers class=viewers></div> </td> </tr> <tr id=online_friends_tr style="display:block;"> <td> <script> document.write(g.container("top,expanded")) </script> <div class=small_heading style="width:150px;"> Online Friends [<a href="top.html?cache_id=1423267822&amp;#" onClick="ToggleMenu.Toggle('online_friends'); return false;" style="text-decoration:none;"><b><span id=online_friends_toggle_lable style="font-size:13px;font-weight:bold;text-decoration:none;">-</span></b></a>] </div> <div id=online_friends_list_wrapper style="display:block;"> <div class='chat_friends online_friends' id=online_friends_list style="font-size:11px;padding:6px;overflow:auto;"> <center>
 Loading Online Friends... </center> </div><script> document.write(g.container("bottom")) </script> </div> <div name=online_friends_list_grip id=online_friends_list_grip class="sprite-icons sprite-horizontal_clear_grip" style="cursor:s-resize;line-height:8px;font-size:2px;margin-left:50px;-webkit-user-select:none;">&nbsp;</div> </td> </tr> <tr id=offline_friends_tr style="display:block;"> <td valign=top> <script> document.write(g.container("top,expanded")) </script> <div class=small_heading style="width:150px;"> <span id=multi_menu_title>Offline Friends [<a href="top.html?cache_id=1423267822&amp;#" onClick="ToggleMenu.Toggle('offline_friends'); return false;" style="text-decoration:none;"><b><span id=offline_friends_toggle_lable style="font-size:13px;font-weight:bold;text-decoration:none;">+</span></b></a>] </span> </div> <div id=offline_friends_list_wrapper style="display:block;padding-top:5px;width:153px;"> <div id=offline_friends_list_scroll style="height:110px;overflow:auto;border:1px solid #DDDDDD;border-width:2px 0px;margin:2px 0px 4px 0px;padding:6px 0px 6px 6px;"> <div class='chat_friends offline_friends' id=offline_friends_list style="font-size:11px;"> <center> Loading Offline Friends... </center> </div> </div> <div style="font-size:10px;padding:6px;"> <script> A(d,'offline_friends') </script>All Offline Friends</a> </div> </div> <script> document.write(g.container("bottom")) </script> <div name=offline_friends_list_grip id=offline_friends_list_grip class="sprite-icons sprite-horizontal_clear_grip" style="cursor:s-resize;line-height:8px;font-size:2px;margin-left:50px;-webkit-user-select:none;">&nbsp;</div> </td> </tr> <tr> <td valign=top height=100%> <script> document.write(g.container("top,expanded")) </script> <div class=small_heading style="position:relative;display:block;"> <span id=menu_extras_heading></span> </div>
 <div id=menu_extras style="padding:5px 5px;"></div> <div id=menu_extras_selector style="padding:5px 5px 30px 5px;font-size:10px;"></div> <script> document.write(g.container("bottom")) </script> </td> </tr> </table> <div id=friends_inner_frame_foot style="width:10px;"></div> </div> </div> </div> </div> <div id=friends_container_foot></div> </td> </tr> <tr> <td width=100% height=100% id=main_td valign=top style='padding-bottom:4px;border:0px dashed white;position:relative;'> <table id=main_table cellpadding=0 cellspacing=0 height=100% width=100% style="height:100%;width:100%;" border=0> <tr> <td height=100% class=graphic style="background:white url('http://s.mfcimg.com/mfc2/styles/mfc/images/top/top-main-l.gif') repeat-y fixed left;" valign=top> <div class="sprite-icons sprite-top-main-tl"></div> </td> <td rowspan=2 width=100% style="background:white url('http://t.mfcimg.com/mfc2/styles/mfc/images/top/top-main-t.gif') repeat-x scroll top left;padding-top:3px;" valign=top> <div id=main_iframe_container style="height:100%;position:relative;"> <div id=y_foot style="position:absolute;border:0px solid red;top:-3px;left:29px;"><div class="sprite-icons sprite-y-foot"></div></div> <iframe name=main id=main src="../php/online_models_splash.php" height=100% width=100% frameborder=0></iframe> </div> <script> if(location.search.indexOf('no_js_splash') == -1 ) window.frames['main'].location.replace('/mfc2/static/main_template.html'); </script> </td> <td class=graphic style="background:#FFFFFF url('http://u.mfcimg.com/mfc2/styles/mfc/images/top/top-main-r.gif') repeat-y right top;" valign=top> <div class="sprite-icons sprite-top-main-tr"></div> </td> </tr>
 <tr> <td class=graphic valign=bottom style="background:#FFFFFF url('http://v.mfcimg.com/mfc2/styles/mfc/images/top/top-main-l.gif') repeat-y fixed left;"> <div class="sprite-icons sprite-top-main-bl"></div> </td> <td class=graphic valign=bottom style="background:#FFFFFF url('http://w.mfcimg.com/mfc2/styles/mfc/images/top/top-main-r.gif') repeat-y fixed right;"> <div class="sprite-icons sprite-top-main-br"></div> </td> </tr> </table> </td> </tr> <tr> <td colspan=2 height=18 align=right style="font-size:1px;padding:1px 0px 4px 10px;"> <table cellspacing=0 cellpadding=0 width=100% border=0> <td nowrap style="color:#008000;font-size:10px;"> 2015-02-06 16:10:24 </td> <td nowrap> <div id=status style="padding-left:20px;font-size:10px;"></div> </td> <td width=100% style="font-size:11px;padding-right:10px;" align=right> <div class=footer_menu id=footer_menu style="-webkit-text-size-adjust:none;"> <a href=http://m.myfreecams.com target=_top>Mobile Site</a> - Twitter <a href=http://twitter.com/myfreecams target=_blank>@MyFreeCams</a> - <a href=http://wiki.myfreecams.com target=_blank>Wiki</a>:&nbsp; <a href=http://wiki.myfreecams.com/wiki/Becoming_a_Webcam_Model_at_MyFreeCams target=_blank>Become a Model</a>&nbsp; <a href=http://wiki.myfreecams.com/wiki/Basic_Tour target=_blank>Tour</a>&nbsp; <a href=http://wiki.myfreecams.com/wiki/Instructions_and_Features target=_blank>Instructions</a>&nbsp; <a href=http://wiki.myfreecams.com/wiki/Technical_Help target=_blank>Tech Help</a>&nbsp; <a href=http://wiki.myfreecams.com/wiki/Billing_Help target=_blank>Billing</a>&nbsp; <a href=http://wiki.myfreecams.com/wiki/News target=_blank>News</a>&nbsp; <a href=http://wiki.myfreecams.com/wiki/18_U.S.C._2257_Record_Keeping_Requirements_Compliance_Statement target=_blank>2257</a>&nbsp; <a href=http://wiki.myfreecams.com/wiki/Contact_Support target=_blank>Contact Support</a> </div> </td> <td style="font-size:1px;" align=right> <OBJECT classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000" codebase="http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0" WIDTH="1" HEIGHT="1" id="flash_utilities" > <PARAM NAME=movie VALUE="../flash/utilities8.swf"> <PARAM NAME=quality VALUE=high> <PARAM NAME=bgcolor VALUE=#FFFFFF>
 <PARAM NAME=wmode VALUE=transparent> <EMBED src="../flash/utilities8.swf" quality="high" bgcolor="#FFFFFF" WIDTH="1" HEIGHT="1" NAME="flash_utilities" ALIGN="" TYPE="application/x-shockwave-flash" PLUGINSPAGE="http://www.macromedia.com/go/getflashplayer" > </EMBED> </OBJECT> <img src=http://x.mfcimg.com/mfc2/styles/mfc/images/misc/clear.gif height=1 width=1 border=0 id=debug_img> </td> </table> <img src=http://y.mfcimg.com/mfc2/styles/mfc/images/misc/clear.gif height=1 width=550 border=0> </td> </tr> </table> </td> </tr></table></div></body><script>var g_oDhtmlPopup;InstantiateDhtmlPopup();var popUserMenu = new PopUserMenu(t);var mfcClickDrag = new MfcClickDrag({ personal_menu_list_grip: { max_when_scrollfree: 1, onmouseup: MenuSizing.SaveHeight, subject_id: 'personal_menu_list_wrapper', hAdjustments: { Y: { height: { max:450 } } } }, online_friends_list_grip: { max_when_scrollfree: 1, onmouseup: MenuSizing.SaveHeight, subject_id: 'online_friends_scroll', hAdjustments: { Y: { height: { } } } }, offline_friends_list_grip: { max_when_scrollfree: 1, onmouseup: MenuSizing.SaveHeight, subject_id: 'offline_friends_list_scroll', hAdjustments: { Y: { height: { } } } }});
var mfcMousePress = new MfcMousePress({ 'personal_menu_list_grip': { left_click: { onmousedown: function (e) { mfcClickDrag.OnMouseDown('personal_menu_list_grip'); }, onmousemove: function (e) { mfcClickDrag.OnMouseMove(e); }, onmouseup: function (e) { mfcClickDrag.OnMouseUp(e); }, onselectstart: function () { return false; } } }, 'online_friends_list_grip': { left_click: { onmousedown: function (e) { mfcClickDrag.OnMouseDown('online_friends_list_grip'); }, onmousemove: function (e) { mfcClickDrag.OnMouseMove(e); }, onmouseup: function (e) { mfcClickDrag.OnMouseUp(e); }, onselectstart: function () { return false; } } }, 'offline_friends_list_grip': { left_click: { onmousedown: function (e) { mfcClickDrag.OnMouseDown('offline_friends_list_grip'); }, onmousemove: function (e) { mfcClickDrag.OnMouseMove(e); }, onmouseup: function (e) { mfcClickDrag.OnMouseUp(e); }, onselectstart: function () { return false; } } }, 'user\\d+': { right_click: { onmousedown: function(e,sName) { if(sName.match(/user(\d+)/) ) popUserMenu.open(RegExp.$1, g_oDhtmlPopup ); } } }});var g_oFriendsProgressBar = new MfcProgressBar({ smoothing_resolution: 12, smoothing_time: 150, container_style: 'padding:1px;border:solid 1px #55CC55;height:10px;border-radius: 2px;', bar_style: 'height:10px;background-color:#77CC77;font-size:10px;border-radius: 2px;'});document.onmousemove = function(e) { g_oMouseTracker.track_mouse(e); };document.onmousedown = function(e) { mfcMousePress.Down(e); };
document.onmouseup = function(e) { mfcMousePress.Up(e); };document.onmouseout = function(e) { mfcMousePress.onMouseOut_FailSafe(e); };document.onkeydown = GlobalKeyPress;top.window.onpopstate = BrowserHistoryControl.Execute;if(g_UA.tablet || g_UA.mobile ){ if(g_UA.Firefox ) { oEl = GetEl('main_td'); oEl.height = ""; oEl.style.height = ""; } mfcMousePress.AttachEvents(); GetEl('friends').style.width = "174px"; if(g_UA.Silk ) GetEl('layout_table').style.width = document.documentElement.clientWidth + 'px'; else GetEl('layout_table').style.width = ( g_UA.orientation == 'horizontal' ? 1250 : 850 ) + "px"; GetEl('personal_menu_list_grip').style.display = 'none'; GetEl('online_friends_list_grip').style.display = 'none'; GetEl('offline_friends_list_grip').style.display = 'none';}else{ var oEl = GetEl('friends'); oEl.style.display = "none"; oEl.style.overflow = "auto"; oEl.style.overflowX = "hidden"; GetEl('friend_content_div').style.position = "absolute"; GetEl('online_friends_tr').style.display = "none"; GetEl('offline_friends_tr').style.display = "none"; GetEl('offline_friends_list_wrapper').style.display = "none"; GetEl('outer_body').style.overflowY = "hidden";}if(g_UA.Chrome >= 35){ setTimeout(QueueResizeHandler, 500 ); window.onresize = QueueResizeHandler;}
else{ GetEl('friends_container').style.height = "100%";}if(g_UA.Linux && g_UA.Firefox ){ GetEl('hide_menu_button').style.display = "none";}var g_oResize;function QueueResizeHandler(){ clearTimeout(g_oResize); g_oResize = setTimeout(ResizeHandler ,100);}function ResizeHandler(){ if(g_UA.tablet || g_UA.mobile ) { return; } if(g_hSelf.single_page_website ) { GetEl('friends').style.height = '100%'; GetEl('friends_container').style.height = '100%'; } else { GetEl('friends').style.height = (GetDocumentDimensions(d,w).height - 23) + 'px'; GetEl('friends_container').style.height = ''; } var nMainHeight; if(g_hSelf.single_page_website ) nMainHeight = '100%'; else if(g_hSelf['show_header'] ) nMainHeight = ( GetDocumentDimensions(d,w).height - 105 ) + 'px'; else nMainHeight = ( GetDocumentDimensions(d,w).height - 45 ) + 'px'; GetEl('layout_td').style.height = nMainHeight; GetEl('main_td').style.height = nMainHeight; GetEl('main_table').style.height = nMainHeight; GetEl('main_iframe_container').style.height = nMainHeight; setTimeout(function() { if(window.frames['main'].OnResizeHandler ) { window.frames['main'].OnResizeHandler(); } }, 0 );}
function FlashLog(sMsg){ t.Log("FLASH: " + sMsg);}function FlashBanned(nRoom){ t.Log("TOP FLASH BANNED: " + nRoom);}g_fBodyLoaded = true;SetHTML('main_menu','');if(g_bDebug ) { DebugControls.Load(); }if (g_sConnectionMode == 'flash'){ onload = function() { g_hLoadSetup = setInterval(TryOnLoad, 1000); };}else{ setInterval(FlashPing, 120000); setTimeout(function() { LoadAll(); } ,100 )}function FlashPing(){ if (g_sConnectionMode == 'flash' ) { TxCmd(FCTYPE_NULL, g_nSessionId, 0, 0, 0); }} var g_hLoadSetup = null; var g_nLoadSetupTries = 0; function TryOnLoad() { g_nLoadSetupTries++; Log('DBG:: XML Trying to call OnLoad-x #' + g_nLoadSetupTries + ', con mode: ' + g_sConnectionMode); if (g_sConnectionMode == 'flash') { if(zgw_XmlOnLoad )
 { if (zgw_XmlOnLoad()) { Log('DBG:: XML zgw_XmlOnLoad() success'); clearInterval(g_hLoadSetup); g_hLoadSetup = null; } else { Log('DBG:: XML zgw_XmlOnLoad() returned false'); } } else { Log('DBG:: XML zgw_XmlOnLoad not there yet: ' + typeof(zgw_XmlOnLoad)); } } else if ( LoadAll ) { Log('DBG:: XML Connection mode was not flash, calling inline LoadAll()...'); LoadAll(); clearInterval(g_hLoadSetup); g_hLoadSetup = null; } else { Log('DBG:: XML LoadAll has con mode of ' + g_sConnectionMode + ', no LoadAll? ' + typeof(LoadAll)); }}SetupChatConnection();</script><script> var g_oAPopup; if(g_hQS['show_oapopup'] || ( ! g_hCk['guest_welcome'] && ! g_hCk['username'] && ! g_hQS['skip_oapopup'] ) ) { g_oAPopup = new OAPopup({ open: true, isLegacyIE: function(){ return g_UA.IE && g_UA.IE < 10; },
 isMobile: function(){ return g_UA.tablet || g_UA.mobile || g_hQS['oapopup_mobile']; } }); }</script></html>